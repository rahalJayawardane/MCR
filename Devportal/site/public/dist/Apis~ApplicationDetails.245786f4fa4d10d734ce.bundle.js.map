{"version":3,"sources":["webpack:///./source/src/app/components/Shared/InlineMessage.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack:///./source/src/app/components/Apis/Listing/NoApi.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/KeyConfiguration.jsx","webpack:///./source/src/app/data/Validation.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx"],"names":["InlineMessage","React","Component","value","this","setState","state","expanded","render","classes","type","props","messgeType","className","root","elevation","iconItem","height","content","children","propTypes","PropTypes","shape","isRequired","string","withStyles","theme","display","minHeight","alignItems","paddingLeft","spacing","borderRadius","border","fontSize","color","custom","info","palette","getContrastText","background","paper","paddingRight","button","marginTop","marginBottom","paddingTop","paddingBottom","ViewToken","tokenCopied","name","that","elementName","setTimeout","getTokeScopesString","tokenScopes","join","token","consumerSecret","secretWrapper","secret","variant","component","isOauth","id","defaultMessage","epWrapper","prodLabel","defaultValue","accessToken","multiline","fullWidth","rows","InputProps","disableUnderline","bootstrapRoot","input","bootstrapInput","InputLabelProps","shrink","bootstrapFormLabel","title","placement","text","onCopy","validityTime","defaultProps","number","array","padding","flex","marginRight","backgroundColor","apiDetailPages","tokenTextBoxBackground","width","transition","transitions","create","fontFamily","borderColor","boxShadow","lineHeight","whiteSpace","contentWrapper","maxWidth","contentAreaWidth","leftMenu","useStyles","makeStyles","flexGrow","messageWrapper","textAlign","secondary","NoApi","useTheme","container","item","xs","src","app","context","noApiImage","gutterBottom","LeftMenuItem","selected","setSelected","useState","Icon","to","history","route","submenu","routeToCheck","strokeColor","iconSize","ditectCurrentMenu","location","window","pathname","test1","RegExp","test2","match","useEffect","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","classNames","leftLInk","leftLink_IconLeft","style","cloneElement","leftLink_Icon","noIcon","icon","iconText","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","mainMenuActiveText","subMenuActiveText","element","oneOfType","bool","withRouter","textTransform","overflow","textOverflow","LeftMenu","typography","position","bottom","left","top","caption","cursor","textDecoration","justifyContent","withTheme","KeyConfiguration","isValidityTimeError","setValidityTimeError","isCalbackUrlError","setCallbackUrlError","handleChange","field","event","keyRequest","updateKeyRequest","setGenerateEnabled","newRequest","target","currentTarget","newGrantTypes","supportedGrantTypes","Validation","url","validate","error","callbackUrl","checked","filter","includes","isGrantTypeDisabled","grantType","isUserOwner","notFound","intl","isKeysAvailable","isRegulatoryApp","serverSupportedGrantTypes","grantTypeDisplayListMap","grantTypeDisplayNameMap","modifiedserverSupportedGrantTypes","forEach","getGrantTypeDisplayList","Settings","grantTypes","Fragment","FormControl","htmlFor","quotaHelp","checkboxWrapper","checkboxWrapperColumn","Object","keys","map","key","control","onChange","e","disabled","label","md","removeHelperPadding","helperText","margin","placeholder","formatMessage","ml","instanceOf","func","injectIntl","FormControlOdd","marginLeft","flexDirection","group","definition","Joi","integer","uri","allow","MenuProps","PaperProps","maxHeight","tokens","accessTokenRequest","updateAccessTokenRequest","timeout","scopesSelected","keyType","subscriptionScopes","required","autoFocus","inputText","length","multiple","renderValue","chips","chip","scope","contextTypes","flexWrap","ViewSecret","secretCopied","common","white"],"mappings":"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","file":"Apis~ApplicationDetails.245786f4fa4d10d734ce.bundle.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\n/**\n * Main style object\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        minHeight: 100,\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        border: 'solid 1px #ddd',\n        '& span.material-icons': {\n            fontSize: 60,\n            color: theme.custom.info.color,\n        },\n        '& span, & h5, & label, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    iconItem: {\n        paddingRight: theme.spacing(2),\n        fontSize: 60,\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    content: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n});\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nclass InlineMessage extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    render() {\n        const { classes, type } = this.props;\n        const messgeType = type || 'info';\n        return (\n            <Paper className={classes.root} elevation={1}>\n                {messgeType === 'info' && <Icon className={classes.iconItem}>info</Icon>}\n                {messgeType === 'warn' && <Icon className={classes.iconItem}>warning</Icon>}\n                <VerticalDivider height={100} />\n                <div className={classes.content}>{this.props.children}</div>\n            </Paper>\n        );\n    }\n}\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(InlineMessage);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.custom.apiDetailPages.tokenTextBoxBackground,\n        color: theme.palette.getContrastText(theme.custom.apiDetailPages.tokenTextBoxBackground),\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    secretWrapper: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginTop: 20,\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n\n    },\n});\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            classes, token, consumerSecret,\n        } = this.props;\n        const { tokenCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{ consumerSecret }} />\n                    </div>\n                )}\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'If the token type is JWT or API Key, please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </Typography>\n                    <TextField\n                        defaultValue={token.accessToken}\n                        id='bootstrap-input'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={tokenCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={token.accessToken} onCopy={this.onCopy('tokenCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of '\n                    />\n                    {token.validityTime}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage=' seconds'\n                    />\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage=' and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n.\n                </FormHelperText>\n            </div>\n        );\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default withStyles(styles)(ViewToken);\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    messageWrapper: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function NoApi() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CustomIcon from './CustomIcon';\n\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        paddingRight: 0,\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        display: 'none',\n    },\n    submenu: {\n        paddingLeft: theme.spacing(4),\n    },\n    mainMenuActiveText: {\n        '& span': {\n            color: theme.palette.getContrastText(theme.custom.leftMenu.leftMenuActive),\n        }\n    },\n    subMenuActiveText: {\n        '& span': {\n            color: theme.palette.getContrastText(theme.custom.leftMenu.leftMenuActiveSubmenu),\n        }\n    },\n});\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route, submenu,\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    let strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if(!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n        \n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n        \n        \n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if(selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n        strokeColor = theme.palette.getContrastText(leftMenu.leftMenuActive);\n    } else if ( selected && submenu ) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    } \n    return (\n        <Link\n            className={classNames(\n                classes.leftLInk,\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                    [classes.submenu]: submenu,\n                },\n                'leftLInk',\n            )}\n            to={to}\n            style={{ backgroundColor: activeBackground }}\n        >\n            {!submenu && (\n                // If the icon pro ( which is comming from the React Material library )\n                // is coming we add css class and render.\n                // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                // allow customers theme\n                // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu.style === 'no icon',\n                                [classes.submenu]: submenu,\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                // We can also add custom icons\n                    <CustomIcon\n                        strokeColor={strokeColor}\n                        width={iconSize}\n                        height={iconSize}\n                        icon={props.iconText}\n                        className={classNames(\n                            classes.leftLInk,\n                            {\n                                [classes.noIcon]: leftMenu.style === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        )}\n                    />\n                ))}\n            <Typography\n                className={classNames(\n                    classes.leftLInkText,\n                    {\n                        [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                        [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                        [classes.mainMenuActiveText]: selected && !submenu,\n                        [classes.subMenuActiveText]: selected && submenu,\n                    },\n                    'leftLInkText',\n                )}\n            >\n                {props.text}\n            </Typography>\n        </Link>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under this\n * license, please see the license as well as any agreement you’ve entered into\n * with WSO2 governing the purchase of this software and any associated services.\n *\n */\nimport React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Settings from 'Settings';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport Validation from 'AppData/Validation';\n\nconst styles = theme => ({\n    FormControl: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        paddingLeft: 0,\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    checkboxWrapper: {\n        display: 'flex',\n    },\n    checkboxWrapperColumn: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    removeHelperPadding: {\n        '& p': {\n            margin: '8px 0px',\n        },\n    },\n});\n/**\n *\n *\n * @class KeyConfiguration\n * @extends {React.Component}\n */\nconst KeyConfiguration = (props) => {\n    const [isValidityTimeError, setValidityTimeError] = useState(false);\n    const [isCalbackUrlError, setCallbackUrlError] = useState(false);\n    /**\n     * Get the display names for the server supported grant types\n     * @param serverSupportedGrantTypes\n     * @param grantTypeDisplayNameMap\n     */\n    const getGrantTypeDisplayList = (serverSupportedGrantTypes, grantTypeDisplayNameMap) => {\n        const modifiedserverSupportedGrantTypes = {};\n        serverSupportedGrantTypes.forEach((grantType) => {\n            modifiedserverSupportedGrantTypes[grantType] = grantTypeDisplayNameMap[grantType];\n            if (!grantTypeDisplayNameMap[grantType]) {\n                modifiedserverSupportedGrantTypes[grantType] = grantType;\n            }\n        });\n        return modifiedserverSupportedGrantTypes;\n    };\n\n    /**\n     * This method is used to handle the updating of key generation\n     * request object.\n     * @param {*} field field that should be updated in key request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event) => {\n        const { keyRequest, updateKeyRequest, setGenerateEnabled } = props;\n        const newRequest = { ...keyRequest };\n        const { target: currentTarget } = event;\n        let newGrantTypes = [...newRequest.supportedGrantTypes];\n\n        switch (field) {\n            case 'callbackUrl':\n                if (Validation.url.validate(currentTarget.value).error) {\n                    setCallbackUrlError(true);\n                    setGenerateEnabled(false);\n                } else {\n                    setCallbackUrlError(false);\n                    setGenerateEnabled(true);\n                }\n                newRequest.callbackUrl = currentTarget.value;\n                break;\n            case 'validityTime':\n                if (Validation.number.validate(currentTarget.value).error) {\n                    setValidityTimeError(true);\n                    setGenerateEnabled(false);\n                } else {\n                    setValidityTimeError(false);\n                    setGenerateEnabled(true);\n                }\n                newRequest.validityTime = currentTarget.value;\n                break;\n            case 'grantType':\n                if (currentTarget.checked) {\n                    newGrantTypes = [...newGrantTypes, currentTarget.id];\n                } else {\n                    newGrantTypes = newRequest.supportedGrantTypes.filter(item => item !== currentTarget.id);\n                }\n                setGenerateEnabled(newGrantTypes.includes('client_credentials'));\n                newRequest.supportedGrantTypes = newGrantTypes;\n                break;\n            default:\n                break;\n        }\n        updateKeyRequest(newRequest);\n    };\n\n    /**\n     * returns whether grant type checkbox should be disabled or not\n     * @param grantType\n     */\n    const isGrantTypeDisabled = (grantType) => {\n        const { keyRequest, isUserOwner } = props;\n        const { callbackUrl } = keyRequest;\n        return !(isUserOwner);\n    };\n\n    /**\n     *\n     *\n     * @returns {Component}\n     * @memberof KeyConfiguration\n     */\n    const {\n        classes, keyRequest, notFound, intl, isUserOwner, isKeysAvailable, isRegulatoryApp,\n    } = props;\n    const {\n        serverSupportedGrantTypes, supportedGrantTypes, callbackUrl, validityTime,\n    } = keyRequest;\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    const grantTypeDisplayListMap = getGrantTypeDisplayList(\n        serverSupportedGrantTypes,\n        Settings.grantTypes,\n    );\n\n    return (\n        <React.Fragment>\n            <FormControl className={classes.FormControl} component='fieldset'>\n                <InputLabel shrink htmlFor='age-label-placeholder' className={classes.quotaHelp}>\n                    <FormattedMessage id='grant.types' defaultMessage='Grant Types' />\n                </InputLabel>\n                <div className={classes.checkboxWrapper}>\n                    <div className={classes.checkboxWrapperColumn}>\n                        {Object.keys(grantTypeDisplayListMap).map((key) => {\n                            const value = grantTypeDisplayListMap[key];\n                            return (\n                                <FormControlLabel\n                                    control={(\n                                        <Checkbox\n                                            id={key}\n                                            checked={!!(supportedGrantTypes\n                                                    && supportedGrantTypes.includes(key))\n                                                    && !isGrantTypeDisabled(key)}\n                                            onChange={e => handleChange('grantType', e)}\n                                            value={value}\n                                            disabled={isGrantTypeDisabled(key)}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label={value}\n                                    key={key}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        defaultMessage={`The application can use the following grant types to generate \n                            Access Tokens. Based on the application requirement,you can enable or disable \n                            grant types for this application.`}\n                        id='Shared.AppsAndKeys.KeyConfiguration.the.application.can'\n                    />\n                </FormHelperText>\n            </FormControl>\n            <Box display='flex'>\n                <Grid item xs={10} md={5}>\n                    <TextField\n                        classes={{\n                            root: classes.removeHelperPadding,\n                        }}\n                        fullWidth\n                        id='callbackURL'\n                        label={<FormattedMessage\n                            defaultMessage='Callback URL'\n                            id='Shared.AppsAndKeys.KeyConfiguration.callback.url.label'\n                        />}\n                        value={callbackUrl}\n                        name='callbackURL'\n                        onChange={e => handleChange('callbackUrl', e)}\n                        helperText={\n                            isCalbackUrlError ?\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        defaultMessage='Invalid url. Please enter a valid url.'\n                                        id='Shared.AppsAndKeys.KeyConfCiguration.Invalid.callback.url.error.text'\n                                    />\n                                </Typography> :\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        defaultMessage={`Callback URL is a redirection URI in the client\n                                    application which is used by the authorization server to send the\n                                    client's user-agent (usually web browser) back after granting access.`}\n                                        id='Shared.AppsAndKeys.KeyConfCiguration.callback.url.helper.text'\n                                    />\n                                </Typography>\n                        }\n                        margin='normal'\n                        variant='outlined'\n                        disabled={!isUserOwner}\n                        error={isCalbackUrlError}\n                        placeholder={intl.formatMessage({\n                            defaultMessage: 'http://url-to-webapp',\n                            id: 'Shared.AppsAndKeys.KeyConfiguration.url.to.webapp',\n                        })}\n                    />\n                </Grid>\n                <Grid item xs={10} md={5}>\n                    {!isRegulatoryApp ? (\n                        <Box ml={2}>\n                            <TextField\n                                classes={{\n                                    root: classes.removeHelperPadding,\n                                }}\n                                fullWidth\n                                id='validityTime'\n                                label={<FormattedMessage\n                                    defaultMessage='Access token validity period'\n                                    id='Shared.AppsAndKeys.KeyConfiguration.access.token.validity.label'\n                                />}\n                                value={validityTime}\n                                name='validityTime'\n                                onChange={e => handleChange('validityTime', e)}\n                                helperText={\n                                    isValidityTimeError ?\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                defaultMessage='Please enter a valid number'\n                                                id='Shared.AppsAndKeys.KeyConfCiguration.access.token.validity.error.text'\n                                            />\n                                        </Typography> :\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                defaultMessage={`This is the validity period ( in seconds ) \n                                        of the access token generated `}\n                                                id='Shared.AppsAndKeys.KeyConfCiguration.access.token.validity.helper.text'\n                                            />\n                                        </Typography>\n                                }\n                                margin='normal'\n                                variant='outlined'\n                                error={isValidityTimeError}\n                                disabled={!isUserOwner || isKeysAvailable}\n                            />\n                        </Box>\n                    ) : null}\n                </Grid>\n            </Box>\n        </React.Fragment>\n    );\n};\nKeyConfiguration.defaultProps = {\n    notFound: false,\n};\nKeyConfiguration.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    keyRequest: PropTypes.shape({\n        callbackUrl: PropTypes.string,\n        validityTime: PropTypes.number,\n        serverSupportedGrantTypes: PropTypes.array,\n        supportedGrantTypes: PropTypes.array,\n    }).isRequired,\n    isUserOwner: PropTypes.bool.isRequired,\n    isKeysAvailable: PropTypes.bool.isRequired,\n    notFound: PropTypes.bool,\n    setGenerateEnabled: PropTypes.func.isRequired,\n    updateKeyRequest: PropTypes.func.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(KeyConfiguration));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Joi from '@hapi/joi';\n\nconst definition = {\n    number: Joi.number().integer(),\n    url: Joi.string().uri().allow(''),\n};\n\nexport default definition;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(0.25),\n    },\n});\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 224,\n            width: 250,\n        },\n    },\n};\n\n/**\n * Used to display generate acctoken UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'timeout':\n                newRequest.timeout = currentTarget.value;\n                break;\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        classes, intl, accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <React.Fragment>\n            <FormControl margin='normal' className={classes.FormControl}>\n                <TextField\n                    required\n                    label={intl.formatMessage({\n                        defaultMessage: 'Access token validity period',\n                        id: 'Shared.AppsAndKeys.Tokens.access.token',\n                    })}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    helperText={intl.formatMessage({\n                        defaultMessage: 'You can set an expiration period to determine the validity period of '\n                                + 'the token after generation. Set this to a negative value to ensure that the '\n                                + 'token never expires.',\n                        id: 'Shared.AppsAndKeys.Tokens.you.can.set',\n                    })}\n                    fullWidth\n                    name='timeout'\n                    onChange={e => handleChange('timeout', e)}\n                    placeholder={intl.formatMessage({\n                        defaultMessage: 'Enter time in milliseconds',\n                        id: 'Shared.AppsAndKeys.Tokens.enter.time',\n                    })}\n                    value={accessTokenRequest.timeout}\n                    autoFocus\n                    className={classes.inputText}\n                />\n            </FormControl>\n            <FormControl\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <InputLabel htmlFor='quota-helper' className={classes.quotaHelp}>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                        defaultMessage='Scopes'\n                    />\n\n                </InputLabel>\n                <Select\n                    name='scopesSelected'\n                    multiple\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={e => handleChange('scopesSelected', e)}\n                    input={<Input id='select-multiple-chip' />}\n                    renderValue={selected => (\n                        <div className={classes.chips}>\n                            {selected.map(value => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {subscriptionScopes.map(scope => (\n                        <MenuItem\n                            key={scope}\n                            value={scope}\n                        >\n                            {scope}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </React.Fragment>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default injectIntl(withStyles(styles)(tokens));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginBottom: 20,\n    },\n});\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const { classes, secret } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={secretCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={secret.consumerSecret} onCopy={this.onCopy('secretCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(ViewSecret);\n"],"sourceRoot":""}