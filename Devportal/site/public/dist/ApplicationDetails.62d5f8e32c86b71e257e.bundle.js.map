{"version":3,"sources":["webpack:///./source/src/app/components/Applications/Listing/DeleteConfirmation.jsx","webpack:///./node_modules/@material-ui/icons/HighlightOff.js","webpack:///./source/src/app/components/Shared/ApiKey.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ApiKeyManager.jsx","webpack:///./source/src/app/components/Apis/Listing/SubscriptionPolicySelect.jsx","webpack:///./source/src/app/components/Apis/Listing/APICardView.jsx","webpack:///./source/src/app/components/Applications/Details/Invoice.jsx","webpack:///./source/src/app/components/Applications/Details/SubscriptionTableData.jsx","webpack:///./source/src/app/components/Applications/Details/Subscriptions.jsx","webpack:///./source/src/app/components/Applications/Details/InfoBar.jsx","webpack:///./source/src/app/components/Applications/Details/Overview.jsx","webpack:///./source/src/app/components/Applications/Details/index.jsx"],"names":["DeleteConfirmation","props","handleAppDelete","isDeleteOpen","toggleDeleteConfirmation","open","transition","Slide","id","defaultMessage","dense","onClick","size","variant","color","propTypes","PropTypes","func","isRequired","bool","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","tokens","infiniteValidity","setInfiniteValidity","useState","invalidTimeout","setInvaildTimeout","handleChange","field","event","accessTokenRequest","updateAccessTokenRequest","newRequest","target","currentTarget","checked","timeout","undefined","Validation","number","validate","error","classes","intl","Fragment","FormControl","margin","className","FormControlLabel","control","Checkbox","onChange","e","label","TextField","required","formatMessage","InputLabelProps","shrink","helperText","fullWidth","name","placeholder","autoFocus","inputText","contextTypes","shape","injectIntl","withStyles","theme","width","padding","ApiKeyManager","React","Component","constructor","super","this","setState","showToken","selectedApp","keyType","isGenerating","API","generateApiKey","appId","state","then","response","console","log","apikey","accessToken","body","validityTime","isOauth","catch","status","notFound","render","root","Typography","keyTitle","toLowerCase","FormGroup","row","formGroup","Grid","container","spacing","item","xs","gridWrapper","Button","handleClickOpen","button","component","formLabel","Dialog","onClose","handleClose","aria-labelledby","dialog","DialogTitle","dialogTitle","DialogContent","dialogContent","DialogContentText","ApiKey","ViewToken","token","DialogActions","generateKeys","disabled","CircularProgress","tokenType","string","palette","getContrastText","background","paper","primary","main","tokenSection","marginTop","marginBottom","marginRight","keyConfigWrapper","flexDirection","generateWrapper","display","marginLeft","textTransform","SubscriptionPolicySelect","selectedPolicy","componentDidMount","policies","apiId","handleSubscribe","applicationId","Select","select","map","policy","MenuItem","key","ScopeValidation","resourcePath","resourcePaths","SUBSCRIPTIONS","resourceMethod","resourceMethods","POST","buttonGap","object","withTheme","APICardView","xhrRequest","data","list","pagination","total","count","updateUnsubscribedAPIsList","setTenantDomain","code","Alert","finally","loading","searchText","page","rowsPerPage","api","getAllAPIs","query","limit","offset","pageType","getData","componentDidUpdate","prevProps","subscriptions","length","getIdsOfSubscribedEntities","sub","filter","Boolean","subscribedIds","i","includes","advertiseInfo","advertised","isSubscriptionAvailable","throttlingPolicies","apisNotFound","ResourceNotFound","columns","options","customBodyRender","tableMeta","updateValue","rowData","app","search","title","print","download","viewColumns","customToolbar","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","Loading","NoApi","filterType","sort","selectableRowsHeader","Invoice","subscriptionId","isMonetizedAPI","isDynamicUsagePolicy","showPopup","setShowPopup","showErrorPopup","setShowErrorPopup","invoice","setInvoice","handleAlertClose","Subscription","getMonetizationInvoice","obj","invoiceData","properties","keys","invoiveItem","insideArray","push","dialogWrapper","SubscriptionTableData","openMenu","handleRequestClose","bind","handleRequestOpen","handleRequestDelete","checkIfDynamicUsagePolicy","checkIfMonetizedAPI","handleSubscriptionDelete","apiUUID","Api","getAPIById","apiData","JSON","parse","monetization","enabled","subscriptionUUID","getSubscription","subscriptionData","throttlingPolicy","getTierByName","policyResponse","policyData","monetizationAttributes","billingType","subscription","apiInfo","link","to","version","TableRow","hover","TableCell","lifeCycleStatus","SINGLE_SUBSCRIPTION","DELETE","IconButton","aria-label","Icon","Subscriptions","unsubscribedAPIList","subscriptionsNotFound","isAuthorize","openDialog","updateSubscriptions","handleOpenDialog","handleSearchTextChange","handleSearchTextTmpChange","handleClearSearch","handleEnterPress","searchTextTmp","match","params","prevState","client","subscriptionLimit","getSubscriptions","deleteSubscription","info","endpointIndex","prototype","hasOwnProperty","call","splice","subscribe","keyCode","preventDefault","window","location","context","titleWrapper","buttonElm","xl","genericMessageWrapper","InlineMessage","type","dialogContainer","cardContent","Table","TableHead","firstCell","TableBody","maxWidth","fullScreen","subscribePop","disableTypography","Box","searchWrapper","Paper","searchRoot","clearSearchIcon","InputBase","input","inputProps","onKeyDown","iconButton","searchResults","closeButton","Progress","alignItems","flex","divider","height","paddingLeft","cardTitle","backgroundColor","custom","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","paddingBottom","paddingTop","paddingRight","cursor","InfoBar","showOverview","applicationOwner","toggleOverview","handleDeleteConfimation","getApplication","owner","promisedPolicy","Promise","all","application","tier","tierDescription","description","todo","promisedDelete","Application","deleteApp","message","ok","history","leftMenu","position","isUserOwner","AuthManager","getUser","infoBarMain","style","linkTitle","gutterBottom","align","subscriptionCount","VerticalDivider","m","editButton","withRouter","mainBack","infoBar","infoBarHeight","starColor","borderBottom","grey","A200","backIcon","fontSize","backText","fontFamily","typography","starRate","starRateMy","rateLink","lineHeight","topBar","infoContent","infoContentBottom","sliderBackground","bootstrapRoot","bootstrapInput","borderRadius","common","white","border","transitions","create","join","borderColor","boxShadow","epWrapper","prodLabel","contentWrapper","contentAreaWidth","ratingBoxWrapper","ratingBox","top","left","userRating","verticalDividerStar","borderLeft","backLink","textDecoration","ratingSummery","buttonView","textAlign","justifyContent","buttonOverviewText","appNameXSmall","whiteSpace","overflowX","overflowY","appNameSmall","appNameMid","appNameBig","useStyles","makeStyles","table","minWidth","leftCol","iconAligner","iconTextWrapper","iconEven","iconEvenColor","iconOdd","iconOddColor","noKeysRoot","backgroundImage","overviewPage","keysBackground","backgroundPosition","backgroundRepeat","backgroundSize","minHeight","heading","emptyBox","summaryRoot","actionPanel","setApplication","setTierDescription","setNotFound","useEffect","promisedTier","tierResponse","pathPrefix","scope","TOKEN_TYPES","displayName","attributes","attr","index","attrValue","classNames","lg","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","content","ExpansionPanelDetails","TokenManager","hashEnabled","summary","Divider","ExpansionPanelActions","Details","menuLink","pathname","application_uuid","active","secScheme","isRegulatory","regulatory","redirectUrl","rootIconSize","rootIconTextVisible","rootIconVisible","prefix","sufix","Helmet","LeftMenu","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalRight","leftLInkMain","CustomIcon","icon","leftLInkMainText","LeftMenuItem","text","iconText","route","submenu","innerRef","node","contentLoader","contentLoaderRightMenu","exact","from","path","Overview","renderManager","shiftToLeft","shiftToRight","leftMenuPaddingLeft","bottom","right","borderRight","rootBackground","detailsContent"],"mappings":"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","file":"ApplicationDetails.62d5f8e32c86b71e257e.bundle.js","sourcesContent":["import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core/';\nimport Slide from '@material-ui/core/Slide';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst DeleteConfirmation = (props) => {\n    const { handleAppDelete, isDeleteOpen, toggleDeleteConfirmation } = props;\n    return (\n        <Dialog open={isDeleteOpen} transition={Slide}>\n            <DialogTitle>\n                <FormattedMessage\n                    id='Applications.Listing.DeleteConfirmation.dialog.title'\n                    defaultMessage='Delete Application'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.text.description'\n                        defaultMessage='The application will be removed'\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button dense onClick={toggleDeleteConfirmation}>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button\n                    size='small'\n                    variant='outlined'\n                    color='primary'\n                    onClick={handleAppDelete}\n                >\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog,delete'\n                        defaultMessage='Delete'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\nDeleteConfirmation.propTypes = {\n    handleAppDelete: PropTypes.func.isRequired,\n    isDeleteOpen: PropTypes.bool.isRequired,\n    toggleDeleteConfirmation: PropTypes.func.isRequired,\n};\nexport default DeleteConfirmation;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');\n\nexports.default = _default;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Validation from 'AppData/Validation';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        'margin-bottom': '8px',\n        width: '100%',\n        padding: '0px 10px',\n    },\n});\n\n/**\n * Used to display generate api key in UI\n */\nconst tokens = (props) => {\n    const [infiniteValidity, setInfiniteValidity] = useState(true);\n    const [invalidTimeout, setInvaildTimeout] = useState(false);\n\n    /**\n    * This method is used to handle the updating of create api key\n    * request object.\n    * @param {*} field\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'infiniteValidity':\n                setInfiniteValidity(currentTarget.checked);\n                if (currentTarget.checked) {\n                    newRequest.timeout = -1;\n                } else {\n                    newRequest.timeout = null;\n                }\n                break;\n            case 'timeout':\n                if (Validation.number.validate(currentTarget.value).error === undefined) {\n                    newRequest.timeout = currentTarget.value;\n                    setInvaildTimeout(false);\n                } else {\n                    newRequest.timeout = null;\n                    setInvaildTimeout(true);\n                }\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const { classes, intl, accessTokenRequest } = props;\n\n    return (\n        <React.Fragment>\n            <FormControl margin='normal' className={classes.FormControl}>\n                <FormControlLabel\n                    control={<Checkbox\n                        checked={infiniteValidity}\n                        onChange={e => handleChange('infiniteValidity', e)}\n                        value={accessTokenRequest.timeout}\n                        color='primary'\n                    />}\n                    label='API Key with infinite validity period'\n                />\n                {!infiniteValidity && <TextField\n                    required\n                    label={intl.formatMessage({\n                        defaultMessage: 'API Key validity period',\n                        id: 'Shared.AppsAndKeys.Tokens.apikey',\n                    })}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    helperText={\n                        invalidTimeout ? (\n                            intl.formatMessage({\n                                defaultMessage: 'Please use a valid number for API Key expiry time',\n                                id: 'Shared.AppsAndKeys.Tokens.apikey.set.validity.error',\n                            })\n                        ) : (\n                            intl.formatMessage({\n                                defaultMessage: 'You can set an expiration period to determine the validity period of '\n                                + 'the token after generation. Set this as -1 to ensure that the '\n                                + 'apikey never expires.',\n                                id: 'Shared.AppsAndKeys.Tokens.apikey.set.validity.help',\n                            })\n                        )\n                    }\n                    fullWidth\n                    name='timeout'\n                    onChange={e => handleChange('timeout', e)}\n                    placeholder={intl.formatMessage({\n                        defaultMessage: 'Enter time in seconds',\n                        id: 'Shared.AppsAndKeys.Tokens.apikey.enter.time',\n                    })}\n                    value={accessTokenRequest.timeout}\n                    autoFocus\n                    className={classes.inputText}\n                    error={invalidTimeout}\n                />\n                }\n            </FormControl>\n        </React.Fragment>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default injectIntl(withStyles(styles)(tokens));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport ViewToken from './ViewToken';\nimport ApiKey from '../ApiKey';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        '& span, & h5, & label, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    dialog: {\n        '& span, & h2, & label': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    button: {\n        '& span': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        }\n    },\n    tokenSection: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    margin: {\n        marginRight: theme.spacing(2),\n    },\n    keyConfigWrapper: {\n        flexDirection: 'column',\n        marginBottom: 0,\n    },\n    generateWrapper: {\n        padding: '10px',\n        'margin-inline-end': 'auto',\n    },\n    paper: {\n        display: 'flex',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        marginLeft: theme.spacing(10),\n    },\n    dialogTitle: {\n        padding: '24px 24px 0px',\n    },\n    dialogContent: {\n        padding: '0 24px 0px',\n    },\n    formGroup: {\n        padding: '20px',\n    },\n    gridWrapper: {\n        'align-self': 'center',\n    },\n    keyTitle: {\n        textTransform: 'capitalize',\n    },\n});\n\nclass ApiKeyManager extends React.Component {\n    constructor(props) {\n        super(props);\n        const { classes, selectedApp, keyType } = this.props;\n        this.state = {\n            apikey: null,\n            open: false,\n            showToken: false,\n            accessTokenRequest: {\n                timeout: -1,\n            },\n            isGenerating: false,\n        };\n    }\n\n    handleClose = () => {\n        this.setState(() => ({ open: false, accessTokenRequest: { timeout: -1 } }));\n    }\n\n    handleClickOpen = () => {\n        this.setState(() => ({ open: true, showToken: false }));\n    }\n\n    updateAccessTokenRequest = (accessTokenRequest) => {\n        this.setState(() => ({ accessTokenRequest }));\n    }\n\n    generateKeys = (selectedApp, keyType) => {\n        this.setState({isGenerating: true});\n        const client = new API();\n        const promisedKey = client.generateApiKey(selectedApp.appId, keyType, this.state.accessTokenRequest.timeout);\n        promisedKey\n            .then((response) => {\n                console.log('Non empty response received');\n                const apikey = { accessToken: response.body.apikey, validityTime: response.body.validityTime, isOauth: false };\n                this.setState(() => ({ apikey, open: true, showToken: true }));\n                this.setState({isGenerating: false});\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n                this.setState({isGenerating: false});\n            });\n    }\n\n    render() {\n        const { classes, selectedApp, keyType } = this.props;\n        const {\n            showToken, accessTokenRequest, open, apikey, isGenerating,\n        } = this.state;\n        return (\n            <div className={classes.root}>\n                <Typography variant='h5' className={classes.keyTitle}>\n                    {keyType.toLowerCase() + ' '}\n                    <FormattedMessage\n                        defaultMessage='API Key'\n                        id='Shared.AppsAndKeys.TokenManager.ApiKey'\n                    />\n                </Typography>\n                <FormGroup row className={classes.formGroup}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} className={classes.gridWrapper}>\n                            <div>\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={this.handleClickOpen}\n                                    className={classes.button}\n                                >\n                                    {'Generate Key'}\n                                </Button>\n                            </div>\n                            <Typography component='div' variant='body2' className={classes.formLabel}>\n                                <FormattedMessage\n                                    id='Shared.AppsAndKeys.ApiKeyManager.generate.key.help'\n                                    defaultMessage='Use the Generate Key button to generate a self-contained JWT token.'\n                                />\n                            </Typography>\n\n                        </Grid>\n                    </Grid>\n                </FormGroup>\n                <Dialog open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title' className={classes.dialog}>\n                    <DialogTitle id='responsive-dialog-title' className={classes.dialogTitle}>\n                        {'Generate API Key'}\n                    </DialogTitle>\n                    <DialogContent className={classes.dialogContent}>\n                        <DialogContentText>\n                            {!showToken && (\n                                <ApiKey\n                                    updateAccessTokenRequest={this.updateAccessTokenRequest}\n                                    accessTokenRequest={accessTokenRequest}\n                                />\n                            )}\n                            {showToken && <ViewToken token={apikey} />}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        {!showToken && (\n                            <Button \n                                onClick={() => this.generateKeys(selectedApp, keyType)}\n                                disabled={!accessTokenRequest.timeout || isGenerating}\n                                color='primary'\n                                variant='contained'\n                                className={classes.button}\n                                >\n                                <FormattedMessage\n                                    id='Shared.AppsAndKeys.ViewKeys.consumer.generate.btn'\n                                    defaultMessage='Generate'\n                                />\n                                {isGenerating && <CircularProgress size={24} />}\n                            </Button>\n                        )}\n                        <Button onClick={this.handleClose} color='primary' autoFocus>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewKeys.consumer.close.btn'\n                                defaultMessage='Close'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nApiKeyManager.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    selectedApp: PropTypes.shape({\n        tokenType: PropTypes.string.isRequired,\n    }).isRequired,\n    keyType: PropTypes.string.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(ApiKeyManager));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ScopeValidation, resourceMethods, resourcePaths } from '../../Shared/ScopeValidation';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    buttonGap: {\n        marginLeft: 20,\n        '& span span': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        }\n    },\n    select: {\n        width: 100,\n    },\n});\n\n/**\n *\n *\n * @class SubscriptionPolicySelect\n * @extends {React.Component}\n */\nclass SubscriptionPolicySelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedPolicy: null,\n        };\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SubscriptionPolicySelect\n     */\n    componentDidMount() {\n        const { policies } = this.props;\n\n        this.setState({ selectedPolicy: policies[0] });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SubscriptionPolicySelect\n     */\n    render() {\n        const {\n            classes, policies, apiId, handleSubscribe, applicationId,\n        } = this.props;\n        const { selectedPolicy } = this.state;\n\n        return (\n            policies\n            && (\n                <div className={classes.root}>\n                    <Select\n                        className={classes.select}\n                        value={selectedPolicy}\n                        onChange={(e) => {\n                            this.setState({ selectedPolicy: e.target.value });\n                        }}\n                    >\n                        {policies.map(policy => (\n                            <MenuItem value={policy} key={policy}>\n                                {policy}\n                            </MenuItem>\n                        ))}\n\n                    </Select>\n                    <ScopeValidation\n                        resourcePath={resourcePaths.SUBSCRIPTIONS}\n                        resourceMethod={resourceMethods.POST}\n                    >\n                        <Button\n                            variant='contained'\n                            size='small'\n                            color='primary'\n                            className={classes.buttonGap}\n                            onClick={() => {\n                                handleSubscribe(applicationId, apiId, selectedPolicy);\n                            }}\n                        >\n                            <FormattedMessage defaultMessage='Subscribe' id='Apis.Listing.SubscriptionPolicySelect.subscribe' />\n                        </Button>\n                    </ScopeValidation>\n                </div>\n            )\n        );\n    }\n}\n\nSubscriptionPolicySelect.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(SubscriptionPolicySelect);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport NoApi from 'AppComponents/Apis/Listing/NoApi';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport ResourceNotFound from '../../Base/Errors/ResourceNotFound';\nimport SubscriptionPolicySelect from './SubscriptionPolicySelect';\n\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    buttonGap: {\n        marginRight: 10,\n    },\n});\n\n/**\n *\n *\n * @class APICardView\n * @extends {React.Component}\n */\nclass APICardView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = 10;\n        this.pageType = null;\n    }\n    componentDidMount() {\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { subscriptions, searchText } = this.props;\n        if ( subscriptions.length !== prevProps.subscriptions.length ) {\n            this.getData();\n        } else if (searchText !== prevProps.searchText) {\n            this.page = 0;\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: this.updateUnsubscribedAPIsList(list) });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { searchText } = this.props;\n        const { page, rowsPerPage } = this;\n        const api = new API();\n\n        if (searchText && searchText !== '') {\n            return api.getAllAPIs({ query: `${searchText}&status:published`, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ query: 'status:published', limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: this.updateUnsubscribedAPIsList(list),\n                });\n            })\n            .catch((e) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n        *\n        * Get List of the Ids of all APIs that have been already subscribed\n        *\n        * @returns {*} Ids of respective APIs\n        * @memberof APICardView\n        */\n    getIdsOfSubscribedEntities() {\n        const { subscriptions } = this.props;\n\n        // Get arrays of the API Ids and remove all null/empty references by executing 'fliter(Boolean)'\n        const subscribedAPIIds = subscriptions.map((sub) => sub.apiId).filter(Boolean);\n\n        return subscribedAPIIds;\n    }\n\n    /**\n    *\n    * Update list of unsubscribed APIs\n    * @memberof APICardView\n    */\n    updateUnsubscribedAPIsList(list) {\n\n        const subscribedIds = this.getIdsOfSubscribedEntities();\n        for (let i = 0; i < list.length; i++) {\n            if ((!subscribedIds.includes(list[i].id) && !list[i].advertiseInfo.advertised)\n                && list[i].isSubscriptionAvailable) {\n            } else {\n                list[i].throttlingPolicies = null;\n            }\n        }\n        return list;\n        //return unsubscribedAPIList;\n\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof APICardView\n     */\n    render() {\n        const { apisNotFound } = this.props;\n        const { loading, data } = this.state;\n        const { page, count, rowsPerPage } = this;\n\n        if (apisNotFound) {\n            return <ResourceNotFound />;\n        }\n\n        const {\n            theme, handleSubscribe, applicationId, intl,\n        } = this.props;\n        const columns = [\n            {\n                name: 'id',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.id',\n                    defaultMessage: 'Id',\n                }),\n                options: {\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.name',\n                    defaultMessage: 'Name',\n                }),\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.version',\n                    defaultMessage: 'Version',\n                }),\n            },\n            {\n                name: 'throttlingPolicies',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.policy',\n                    defaultMessage: 'Policy',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        if (tableMeta.rowData) {\n                            const apiId = tableMeta.rowData[0];\n                            const policies = value;\n                            if (!policies) {\n                                return (intl.formatMessage({\n                                    id: 'Apis.Listing.APICardView.already.subscribed',\n                                    defaultMessage: 'Subscribed',\n                                }))\n                            }\n                            return (\n                                <SubscriptionPolicySelect\n                                    key={apiId}\n                                    policies={policies}\n                                    apiId={apiId}\n                                    handleSubscribe={(app, api, policy) => handleSubscribe(app, api, policy)}\n                                    applicationId={applicationId}\n                                />\n                            );\n                        }\n                    },\n                },\n            },\n        ];\n        const options = {\n            search: false,\n            title: false,\n            filter: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n            responsive: 'stacked',\n            serverSide: true,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page, count } = this;\n                if (page * numberOfRows > count) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                this.getData();\n            },\n        };\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MUIDataTable\n                title={''}\n                data={data}\n                columns={columns}\n                options={options}\n            />\n        );\n    }\n}\n\nAPICardView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default injectIntl(withStyles(styles, { withTheme: true })(APICardView));\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from 'mui-datatables';\n\nimport { FormattedMessage } from 'react-intl';\nimport Subscription from 'AppData/Subscription';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    dialogWrapper: {\n        '& span,& p , & h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        }    },\n});\n\nconst columns = ['Name', 'Value'];\n\nconst options = {\n    filterType: 'checkbox',\n    sort: false,\n    search: false,\n    viewColumns: false,\n    filter: false,\n    selectableRowsHeader: false,\n    selectableRows: 'none',\n    pagination: false,\n    download: false,\n};\n\nfunction Invoice(props) {\n    const { subscriptionId, isMonetizedAPI, isDynamicUsagePolicy, classes } = props;\n    const [showPopup, setShowPopup] = useState(false);\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    const [invoice, setInvoice] = useState(null);\n\n    /**\n     * Handle the popup for invoice\n     */\n    const handlePopup = () => {\n        setShowPopup(true);\n        setInvoice(null);\n        const client = new Subscription();\n        const promiseInvoice = client.getMonetizationInvoice(subscriptionId);\n        promiseInvoice.then((response) => {\n            if (response && response.obj) {\n                const invoiceData = [];\n                const { obj: { properties } } = response;\n                Object.keys(properties).map((invoiveItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiveItem);\n                    insideArray.push(properties[invoiveItem]);\n                    invoiceData.push(insideArray);\n                });\n                setInvoice(invoiceData);\n            }\n        }).catch((error) => {\n            console.error(error);\n            setShowErrorPopup(true);\n        });\n    };\n\n    /**\n     * Handle closing the popup for invoice\n     */\n    const handleClose = () => {\n        setShowPopup(false);\n    };\n\n    const handleAlertClose = () => {\n        setShowErrorPopup(false);\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                variant='outlined'\n                size='small'\n                color='primary'\n                disabled={false}\n                onClick={handlePopup}\n            >\n                <FormattedMessage\n                    id='Applications.Details.Invoice.view.btn'\n                    defaultMessage='View Invoice'\n                />\n            </Button>\n            {invoice ? (\n                <Dialog open={showPopup} onClose={handleClose} fullWidth='true' className={classes.dialogWrapper}>\n                    {invoice && (<MUIDataTable\n                        title='Upcoming Invoice'\n                        data={invoice}\n                        columns={columns}\n                        options={options}\n                    />) }\n                </Dialog>\n            ) : (\n                <Dialog open={showErrorPopup} onClose={handleAlertClose} fullWidth='true' className={classes.dialogWrapper}>\n                    <DialogTitle>No Data Available</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='invoice-dialog-description'>\n                        Pending invoice data not found for this subscription.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleAlertClose} color='primary'>\n                        Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>)}\n        </React.Fragment>\n    );\n}\n\nInvoice.propTypes = {\n    subscriptionId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(Invoice);\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport Subscription from 'AppData/Subscription';\nimport Invoice from './Invoice';\n\n/**\n *\n *\n * @class SubscriptionTableData\n * @extends {React.Component}\n */\nclass SubscriptionTableData extends React.Component {\n    /**\n     *Creates an instance of SubscriptionTableData.\n     * @param {*} props properties\n     * @memberof SubscriptionTableData\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openMenu: false,\n            isMonetizedAPI: false,\n            isDynamicUsagePolicy: false,\n        };\n        this.handleRequestClose = this.handleRequestClose.bind(this);\n        this.handleRequestOpen = this.handleRequestOpen.bind(this);\n        this.handleRequestDelete = this.handleRequestDelete.bind(this);\n        this.checkIfDynamicUsagePolicy = this.checkIfDynamicUsagePolicy.bind(this);\n        this.checkIfMonetizedAPI = this.checkIfMonetizedAPI.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof SubscriptionTableData\n     */\n    handleRequestClose() {\n        this.setState({ openMenu: false });\n    }\n\n    /**\n    *\n    *\n    * @memberof SubscriptionTableData\n    */\n    handleRequestOpen() {\n        this.setState({ openMenu: true });\n    }\n\n    /**\n     *\n     * Handle onclick for subscription delete\n     * @param {*} subscriptionId subscription id\n     * @memberof SubscriptionTableData\n     */\n    handleRequestDelete(subscriptionId) {\n        const { handleSubscriptionDelete } = this.props;\n        this.setState({ openMenu: false });\n        if (handleSubscriptionDelete) {\n            handleSubscriptionDelete(subscriptionId);\n        }\n    }\n\n    /**\n     * Check if the API is monetized\n     * @param apiUUID API UUID\n     */\n    checkIfMonetizedAPI(apiUUID) {\n        const apiClient = new Api();\n        const promisedApi = apiClient.getAPIById(apiUUID);\n        promisedApi.then((response) => {\n            if (response && response.data) {\n                const apiData = JSON.parse(response.data);\n                this.setState({ isMonetizedAPI: apiData.monetization.enabled });\n            }\n        });\n    }\n\n    /**\n     * Check if the policy is dynamic usage type\n     * @param subscriptionUUID subscription UUID\n     */\n    checkIfDynamicUsagePolicy(subscriptionUUID) {\n        const client = new Subscription();\n        const promisedSubscription = client.getSubscription(subscriptionUUID);\n        promisedSubscription.then((response) => {\n            if (response && response.body) {\n                const subscriptionData = JSON.parse(response.data);\n                if (subscriptionData.throttlingPolicy) {\n                    const apiClient = new Api();\n                    const promisedPolicy = apiClient.getTierByName(subscriptionData.throttlingPolicy, 'subscription');\n                    promisedPolicy.then((policyResponse) => {\n                        const policyData = JSON.parse(policyResponse.data);\n                        if (policyData.monetizationAttributes.billingType && (policyData.monetizationAttributes.billingType === 'DYNAMICRATE')) {\n                            this.setState({ isDynamicUsagePolicy: true });\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    componentDidMount() {\n        this.checkIfMonetizedAPI(this.props.subscription.apiId);\n        this.checkIfDynamicUsagePolicy(this.props.subscription.subscriptionId);\n    }\n\n    /**\n    * @inheritdoc\n    * @memberof SubscriptionTableData\n    */\n    render() {\n        const {\n            subscription: {\n                apiInfo, status, throttlingPolicy, subscriptionId, apiId,\n            },\n        } = this.props;\n        const { openMenu, isMonetizedAPI, isDynamicUsagePolicy } = this.state;\n        const link = <Link to={'/apis/' + apiId}>{apiInfo.name + ' - ' + apiInfo.version}</Link>;\n\n        return (\n            <TableRow hover>\n                <TableCell>\n                    { link }\n                </TableCell>\n                <TableCell>{apiInfo.lifeCycleStatus}</TableCell>\n                <TableCell>{throttlingPolicy}</TableCell>\n                <TableCell>{status}</TableCell>\n\n                <TableCell>\n                    <div>\n                        <ScopeValidation\n                            resourcePath={resourcePaths.SINGLE_SUBSCRIPTION}\n                            resourceMethod={resourceMethods.DELETE}\n                        >\n                            <IconButton aria-label='Delete' onClick={this.handleRequestOpen}>\n                                <Icon>delete</Icon>\n                            </IconButton>\n                        </ScopeValidation>\n\n                        <Dialog open={openMenu} transition={Slide}>\n                            <DialogTitle>Confirm</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.delete.subscription.confirmation'\n                                        defaultMessage='Are you sure you want to delete the Subscription?'\n                                    />\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button dense color='primary' onClick={this.handleRequestClose}>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                                <Button dense color='primary' onClick={() => this.handleRequestDelete(subscriptionId)}>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.delete'\n                                        defaultMessage='Delete'\n                                    />\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </div>\n                </TableCell>\n                <TableCell>\n                    <Invoice subscriptionId={subscriptionId} isMonetizedAPI={isMonetizedAPI} isDynamicUsagePolicy={isDynamicUsagePolicy} />\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\nSubscriptionTableData.propTypes = {\n    subscription: PropTypes.shape({\n        apiInfo: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            version: PropTypes.string.isRequired,\n            lifeCycleStatus: PropTypes.string.isRequired,\n        }).isRequired,\n        throttlingPolicy: PropTypes.string.isRequired,\n        subscriptionId: PropTypes.string.isRequired,\n        apiId: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired,\n    }).isRequired,\n    handleSubscriptionDelete: PropTypes.func.isRequired,\n};\nexport default SubscriptionTableData;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Progress from 'AppComponents/Shared/Progress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIList from 'AppComponents/Apis/Listing/APICardView';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport Subscription from 'AppData/Subscription';\nimport Api from 'AppData/api';\nimport { app } from 'Settings';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport SubscriptionTableData from './SubscriptionTableData';\n\n/**\n *\n * @inheritdoc\n * @param {*} theme theme\n */\nconst styles = (theme) => ({\n    searchRoot: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n        flex: 1,\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n    root: {\n        padding: theme.spacing(3),\n        '& h5': {\n            color: theme.palette.getContrastText(theme.palette.background.default),\n        },\n    },\n    subscribePop: {\n        '& span, & h5, & label, & input, & td, & li': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    firstCell: {\n        paddingLeft: 0,\n    },\n    cardTitle: {\n        paddingLeft: theme.spacing(2),\n    },\n    cardContent: {\n        '& table tr td':{\n            paddingLeft: theme.spacing(1),\n        },\n        '& table tr:nth-child(even)': {\n            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n            '& td, & a': {\n                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n            },\n        },\n        '& table tr:nth-child(odd)': {\n            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n            '& td, & a': {\n                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n            },\n        },\n        '& table th': {\n            backgroundColor: theme.custom.listView.tableHeadBackground,\n            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n            paddingLeft: theme.spacing(1),\n        },\n\n    },\n    titleWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n        '& h5': {\n            marginRight: theme.spacing(1),\n        },\n    },\n    dialogTitle: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: theme.spacing(1),\n    },\n    genericMessageWrapper: {\n        margin: theme.spacing(2),\n    },\n    searchWrapper: {\n        flex: 1,\n    },\n    searchResults: {\n        height: 30,\n        display: 'flex',\n        paddingTop: theme.spacing(1),\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: theme.spacing(2),\n    },\n    clearSearchIcon: {\n        cursor: 'pointer',\n    }\n});\n/**\n *\n *\n * @class Subscriptions\n * @extends {React.Component}\n */\nclass Subscriptions extends React.Component {\n    /**\n     *Creates an instance of Subscriptions.\n     * @param {*} props properties\n     * @memberof Subscriptions\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            subscriptions: null,\n            unsubscribedAPIList: [],\n            apisNotFound: false,\n            subscriptionsNotFound: false,\n            isAuthorize: true,\n            openDialog: false,\n            searchText: '',\n        };\n        this.handleSubscriptionDelete = this.handleSubscriptionDelete.bind(this);\n        this.updateSubscriptions = this.updateSubscriptions.bind(this);\n        this.handleSubscribe = this.handleSubscribe.bind(this);\n        this.handleOpenDialog = this.handleOpenDialog.bind(this);\n        this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n        this.handleSearchTextTmpChange = this.handleSearchTextTmpChange.bind(this);\n        this.handleClearSearch = this.handleClearSearch.bind(this);\n        this.handleEnterPress = this.handleEnterPress.bind(this);\n        this.searchTextTmp = '';\n    }\n\n    /**\n     *\n     *\n     * @memberof Subscriptions\n     */\n    componentDidMount() {\n        const {\n            match: {\n                params: { applicationId },\n            },\n        } = this.props;\n        this.updateSubscriptions(applicationId);\n    }\n\n    handleOpenDialog() {\n        this.setState((prevState) => ({ openDialog: !prevState.openDialog, searchText: '' }));\n    }\n\n    /**\n     *\n     * Update subscriptions list of Application\n     * @param {*} applicationId application id\n     * @memberof Subscriptions\n     */\n    updateSubscriptions(applicationId) {\n        const client = new Subscription();\n        const subscriptionLimit = app.subscriptionLimit || 1000;\n        const promisedSubscriptions = client.getSubscriptions(null, applicationId, subscriptionLimit);\n        promisedSubscriptions\n            .then((response) => {\n                this.setState({ subscriptions: response.body.list });\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ subscriptionsNotFound: true });\n                } else if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n            });\n    }\n\n    /**\n     *\n     * Handle subscription deletion of application\n     * @param {*} subscriptionId subscription id\n     * @memberof Subscriptions\n     */\n    handleSubscriptionDelete(subscriptionId) {\n        const client = new Subscription();\n        const promisedDelete = client.deleteSubscription(subscriptionId);\n\n        promisedDelete\n            .then((response) => {\n                if (response.status !== 200) {\n                    console.log(response);\n                    Alert.info('Something went wrong while deleting the Subscription!');\n                    return;\n                }\n                Alert.info('Subscription deleted successfully!');\n                const { subscriptions } = this.state;\n                for (const endpointIndex in subscriptions) {\n                    if (\n                        Object.prototype.hasOwnProperty.call(subscriptions, endpointIndex)\n                        && subscriptions[endpointIndex].subscriptionId === subscriptionId\n                    ) {\n                        subscriptions.splice(endpointIndex, 1);\n                        break;\n                    }\n                }\n                this.setState({ subscriptions });\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n                Alert.error('Error occurred when deleting subscription');\n            });\n    }\n\n    /**\n     * Handle onClick of subscribing to an API\n     * @param {*} applicationId application id\n     * @param {*} apiId api id\n     * @param {*} policy policy\n     * @memberof Subscriptions\n     */\n    handleSubscribe(applicationId, apiId, policy) {\n        const api = new Api();\n        const { intl } = this.props;\n        if (!policy) {\n            Alert.error(intl.formatMessage({\n                id: 'Applications.Details.Subscriptions.select.a.subscription.policy',\n                defaultMessage: 'Select a subscription policy',\n            }));\n            return;\n        }\n\n        const promisedSubscribe = api.subscribe(apiId, applicationId, policy);\n        promisedSubscribe\n            .then((response) => {\n                if (response.status !== 201) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Applications.Details.Subscriptions.error.occurred.during.subscription.not.201',\n                        defaultMessage: 'Error occurred during subscription',\n                    }));\n                } else {\n                    if (response.body.status === 'ON_HOLD') {\n                        Alert.info(intl.formatMessage({\n                            defaultMessage: 'Your subscription request has been submitted and is now awaiting '\n                                + 'approval.',\n                            id: 'subscription.pending',\n                        }));\n                    } else {\n                        Alert.info(intl.formatMessage({\n                            id: 'Applications.Details.Subscriptions.subscription.successful',\n                            defaultMessage: 'Subscription successful',\n                        }));\n                    }\n                    this.updateSubscriptions(applicationId);\n                }\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Applications.Details.Subscriptions.error.occurred.during.subscription',\n                    defaultMessage: 'Error occurred during subscription',\n                }));\n            });\n    }\n    handleSearchTextChange() {\n        this.setState({ searchText: this.searchTextTmp });\n    };\n    handleSearchTextTmpChange(event) {\n        this.searchTextTmp = event.target.value;\n    };\n    handleClearSearch() {\n        this.setState({ searchText: '' });\n    };\n    handleEnterPress(e) {\n        if (e.keyCode === 13) {\n            e.preventDefault();\n            this.handleSearchTextChange();\n        }\n    }\n    /**\n     * @inheritdoc\n     * @memberof Subscriptions\n     */\n    render() {\n        const { isAuthorize, openDialog, searchText } = this.state;\n\n        if (!isAuthorize) {\n            window.location = app.context + '/services/configs';\n        }\n\n        const {\n            subscriptions, apisNotFound, subscriptionsNotFound,\n        } = this.state;\n        const {\n            match: {\n                params: { applicationId },\n            },\n        } = this.props;\n        const { classes, intl } = this.props;\n\n        if (subscriptions) {\n            return (\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h5' className={classes.keyTitle}>\n                            <FormattedMessage\n                                id='Applications.Details.Subscriptions.subscription.management'\n                                defaultMessage='Subscription Management'\n                            />\n                        </Typography>\n                        <Button\n                            color='secondary'\n                            className={classes.buttonElm}\n                            size='small'\n                            onClick={this.handleOpenDialog}\n                        >\n                            <Icon>add_circle_outline</Icon>\n                            <FormattedMessage\n                                id='Applications.Details.Subscriptions.subscription.management.add'\n                                defaultMessage='Subscribe APIs'\n                            />\n                        </Button>\n                    </div>\n                    <Grid container className='tab-grid' spacing={2}>\n                        <Grid item xs={12} xl={11}>\n                            {(subscriptions && subscriptions.length === 0)\n                                ? (\n                                    <div className={classes.genericMessageWrapper}>\n                                        <InlineMessage type='info' className={classes.dialogContainer}>\n                                            <Typography variant='h5' component='h3'>\n                                                <FormattedMessage\n                                                    id='Applications.Details.Subscriptions.no.subscriptions'\n                                                    defaultMessage='No Subscriptions Available'\n                                                />\n                                            </Typography>\n                                            <Typography component='p'>\n                                                <FormattedMessage\n                                                    id='Applications.Details.Subscriptions.no.subscriptions.content'\n                                                    defaultMessage='No subscriptions are available for this Application'\n                                                />\n                                            </Typography>\n                                        </InlineMessage>\n                                    </div>\n                                )\n                                : (\n                                    <div className={classes.cardContent}>\n                                            {subscriptionsNotFound ? (\n                                                <ResourceNotFound />\n                                            ) : (\n                                                    <Table>\n                                                        <TableHead>\n                                                            <TableRow>\n                                                                <TableCell className={classes.firstCell}>\n                                                                    <FormattedMessage\n                                                                        id='Applications.Details.Subscriptions.api.name'\n                                                                        defaultMessage='API'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id={`Applications.Details.Subscriptions\n                                                                        .subscription.state`}\n                                                                        defaultMessage='Lifecycle State'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id={`Applications.Details.Subscriptions\n                                                                        .subscription.tier`}\n                                                                        defaultMessage='Subscription Tier'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id='Applications.Details.Subscriptions.Status'\n                                                                        defaultMessage='Subscription Status'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id='Applications.Details.Subscriptions.action'\n                                                                        defaultMessage='Action'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id='Applications.Details.Subscriptions.invoice'\n                                                                        defaultMessage='Invoice'\n                                                                    />\n                                                                </TableCell>\n                                                            </TableRow>\n                                                        </TableHead>\n                                                        <TableBody>\n                                                            {subscriptions\n                                                                && subscriptions.map((subscription) => {\n                                                                    return (\n                                                                        <SubscriptionTableData\n                                                                            key={subscription.subscriptionId}\n                                                                            subscription={subscription}\n                                                                            handleSubscriptionDelete={this.handleSubscriptionDelete}\n                                                                        />\n                                                                    );\n                                                                })}\n                                                        </TableBody>\n                                                    </Table>\n                                                )}\n                                        </div>\n                                )}\n                        </Grid>\n                    </Grid>\n                    <Dialog\n                        onClose={this.handleOpenDialog}\n                        aria-labelledby='simple-dialog-title'\n                        open={openDialog}\n                        maxWidth='lg'\n                        fullWidth\n                        fullScreen\n                        className={classes.subscribePop}\n                    >\n                        <MuiDialogTitle disableTypography className={classes.dialogTitle}>\n                            <Typography variant='h6'>\n                                <FormattedMessage\n                                    id='Applications.Details.Subscriptions.subscription.management.add'\n                                    defaultMessage='Subscribe APIs'\n                                />\n                            </Typography>\n                            <Box className={classes.searchWrapper}>\n                                <Paper component=\"form\" className={classes.searchRoot}>\n                                    {searchText && <HighlightOffIcon className={classes.clearSearchIcon}\n                                        onClick={this.handleClearSearch}\n                                    />}\n                                    <InputBase\n                                        className={classes.input}\n                                        placeholder={intl.formatMessage({ defaultMessage: 'Search APIs', id: 'Applications.Details.Subscriptions.search' })}\n                                        inputProps={{ 'aria-label': intl.formatMessage({ defaultMessage: 'Search APIs', id: 'Applications.Details.Subscriptions.search' }) }}\n                                        onChange={this.handleSearchTextTmpChange}\n                                        onKeyDown={this.handleEnterPress}\n                                    />\n                                    <IconButton className={classes.iconButton} aria-label=\"search\" onClick={this.handleSearchTextChange}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </Paper>\n                                <Box className={classes.searchResults}>\n                                    {(searchText && searchText !== '') ? <>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Subscriptions.filter.msg'\n                                                defaultMessage='Filtered APIs for '\n                                            />{searchText}</Typography>\n                                    </> : (<Typography variant='caption'>\n                                        <FormattedMessage\n                                            id='Applications.Details.Subscriptions.filter.msg.all.apis'\n                                            defaultMessage='Displaying all APIs'\n                                        /></Typography>)}\n                                </Box>\n\n                            </Box>\n\n                            <IconButton aria-label='close' className={classes.closeButton} onClick={this.handleOpenDialog}>\n                                <Icon>cancel</Icon>\n                            </IconButton>\n                        </MuiDialogTitle>\n                        <Box padding={2}>\n                            <APIList\n                                apisNotFound={apisNotFound}\n                                subscriptions={subscriptions}\n                                applicationId={applicationId}\n                                handleSubscribe={(app, api, policy) => this.handleSubscribe(app, api, policy)}\n                                searchText={searchText}\n                            />\n                        </Box>\n                    </Dialog>\n                </div>\n            );\n        } else {\n            return (\n              <Progress />  \n            );\n        }\n    }\n}\nSubscriptions.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            applicationId: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Subscriptions));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Grid from '@material-ui/core/Grid';\nimport API from 'AppData/api';\nimport Application from 'AppData/Application';\nimport Alert from 'AppComponents/Shared/Alert';\nimport DeleteConfirmation from '../Listing/DeleteConfirmation';\nimport AuthManager from 'AppData/AuthManager';\n\n/**\n * @param {*} theme theme details\n * @returns {Object}\n */\nconst styles = (theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    const infoBarHeight = theme.custom.infoBar.height || 70;\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(mainBack);\n\n    return {\n        root: {\n            height: infoBarHeight,\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            display: 'flex',\n            alignItems: 'center',\n            paddingLeft: theme.spacing(2),\n        },\n        backIcon: {\n            color: theme.palette.primary.main,\n            fontSize: 56,\n            cursor: 'pointer',\n        },\n        backText: {\n            color: theme.palette.primary.main,\n            cursor: 'pointer',\n            fontFamily: theme.typography.fontFamily,\n        },\n        starRate: {\n            fontSize: 40,\n            color: starColor,\n        },\n        starRateMy: {\n            fontSize: 70,\n            color: theme.palette.primary.main,\n        },\n        rateLink: {\n            cursor: 'pointer',\n            lineHeight: '70px',\n        },\n        topBar: {\n            display: 'flex',\n            paddingBottom: theme.spacing(2),\n        },\n        infoContent: {\n            color: theme.palette.getContrastText(mainBack),\n            background: mainBack,\n            padding: theme.spacing(3),\n            '& td, & th': {\n                color: theme.palette.getContrastText(mainBack),\n            },\n        },\n        infoContentBottom: {\n            background: theme.custom.infoBar.sliderBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.sliderBackground),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        },\n        bootstrapRoot: {\n            padding: 0,\n            'label + &': {\n                marginTop: theme.spacing(3),\n            },\n        },\n        bootstrapInput: {\n            borderRadius: 4,\n            backgroundColor: theme.palette.common.white,\n            border: '1px solid #ced4da',\n            padding: '5px 12px',\n            width: 350,\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n            fontFamily: [\n                '-apple-system',\n                'BlinkMacSystemFont',\n                '\"Segoe UI\"',\n                'Roboto',\n                '\"Helvetica Neue\"',\n                'Arial',\n                'sans-serif',\n                '\"Apple Color Emoji\"',\n                '\"Segoe UI Emoji\"',\n                '\"Segoe UI Symbol\"',\n            ].join(','),\n            '&:focus': {\n                borderColor: '#80bdff',\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n            },\n        },\n        epWrapper: {\n            display: 'flex',\n        },\n        prodLabel: {\n            lineHeight: '30px',\n            marginRight: 10,\n            width: 100,\n        },\n        contentWrapper: {\n            maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n            alignItems: 'center',\n        },\n        ratingBoxWrapper: {\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n        },\n        ratingBox: {\n            backgroundColor: theme.custom.leftMenu.background,\n            border: '1px solid rgb(71, 211, 244)',\n            borderRadius: '5px',\n            display: 'flex',\n            position: 'absolute',\n            top: 14,\n            height: '40px',\n            color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n            alignItems: 'center',\n            left: '0',\n            paddingLeft: '5px',\n            paddingRight: '5px',\n        },\n        userRating: {\n            display: 'flex',\n            alignItems: 'flex-end',\n        },\n        verticalDividerStar: {\n            borderLeft: 'solid 1px ' + theme.palette.grey.A200,\n            height: 40,\n            marginRight: theme.spacing(1),\n            marginLeft: theme.spacing(1),\n        },\n        backLink: {\n            alignItems: 'center',\n            textDecoration: 'none',\n            display: 'flex',\n        },\n        ratingSummery: {\n            alignItems: 'center',\n            flexDirection: 'column',\n            display: 'flex',\n        },\n        infoBarMain: {\n            width: '100%',\n        },\n        buttonView: {\n            textAlign: 'left',\n            justifyContent: 'left',\n            display: 'flex',\n            paddingLeft: theme.spacing(2),\n            cursor: 'pointer',\n        },\n        buttonOverviewText: {\n            display: 'inline-block',\n            paddingTop: 3,\n        },\n        button: {\n            display: 'inline-grid',\n            cursor: 'pointer',\n            '& .material-icons, & span': {\n                color: theme.palette.getContrastText(theme.custom.infoBar.background),\n            },\n        },\n        editButton: {\n            display: 'inline-grid',\n            cursor: 'pointer',\n            '& .material-icons, & span': {\n                color: theme.palette.getContrastText(theme.custom.infoBar.background),\n            },\n        },\n        iconButton: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n        },\n        appNameXSmall: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 200,\n            lineHeight: 1.3,\n        },\n        appNameSmall: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 310,\n            lineHeight: 1.3,\n        },\n        appNameMid: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 640,\n            lineHeight: 1.3,\n        },\n        appNameBig: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 980,\n            lineHeight: 1.3,\n        },\n        linkTitle: {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n    };\n};\n/**\n *\n *\n * @class InfoBar\n * @extends {React.Component}\n */\nclass InfoBar extends React.Component {\n    /**\n     * @param {Object} props props passed from above\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            notFound: false,\n            showOverview: true,\n            isDeleteOpen: false,\n            applicationOwner: '',\n        };\n        this.toggleOverview = this.toggleOverview.bind(this);\n        this.handleAppDelete = this.handleAppDelete.bind(this);\n        this.handleDeleteConfimation = this.handleDeleteConfimation.bind(this);\n        this.toggleDeleteConfirmation = this.toggleDeleteConfirmation.bind(this);\n    }\n\n    /**\n     * @memberof InfoBar\n     */\n    componentDidMount() {\n        const client = new API();\n        const { applicationId } = this.props;\n        // Get application\n        const promisedApplication = client.getApplication(applicationId);\n\n        promisedApplication\n            .then((response) => {\n                this.setState({ applicationOwner: response.obj.owner });\n                const promisedPolicy = client.getTierByName(response.obj.throttlingPolicy, 'application');\n                return Promise.all([response, promisedPolicy]);\n            })\n            .then((response) => {\n                const [application, tier] = response.map(data => data.obj);\n                this.setState({ application, tierDescription: tier.description });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n            });\n    }\n\n    /**\n     * Toggles the showOverview state\n     * @param {boolean} todo toggle state\n     * @memberof InfoBar\n     */\n    toggleOverview(todo) {\n        if (typeof todo === 'boolean') {\n            this.setState({ showOverview: todo });\n        } else {\n            this.setState(prevState => ({ showOverview: !prevState.showOverview }));\n        }\n    }\n\n    /**\n     * Handles delete confimation\n     * @memberof InfoBar\n     */\n    handleDeleteConfimation() {\n        const { isDeleteOpen } = this.state;\n        this.setState({ isDeleteOpen: !isDeleteOpen });\n    }\n\n    /**\n     * Handles application deletion\n     * @memberof InfoBar\n     */\n    handleAppDelete() {\n        const { applicationId, intl } = this.props;\n        const { application } = this.state;\n        const promisedDelete = Application.deleteApp(applicationId);\n        let message = intl.formatMessage({\n            defaultMessage: 'Application {name} deleted successfully!',\n            id: 'Applications.Details.InfoBar.application.deleted.successfully',\n        }, {name: application.name});\n        promisedDelete.then((ok) => {\n            if (ok) {\n                Alert.info(message);\n                this.toggleDeleteConfirmation();\n            }\n            this.props.history.push('/applications');\n        }).catch((error) => {\n            console.log(error);\n            message = intl.formatMessage({\n                defaultMessage: 'Error while deleting application {name}',\n                id: 'Applications.Details.InfoBar.application.deleting.error',\n            }, {name: application.name});\n            Alert.error(message);\n        });\n    }\n\n    toggleDeleteConfirmation = () => {\n        this.setState(({ isDeleteOpen }) => ({ isDeleteOpen: !isDeleteOpen }));\n    }\n\n\n    /**\n     * @returns {div}\n     * @memberof InfoBar\n     */\n    render() {\n        const {\n            classes, theme, applicationId,\n        } = this.props;\n        const {\n            application, tierDescription, showOverview, notFound, isDeleteOpen, applicationOwner,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: { position },\n            },\n        } = theme;\n\n        if (notFound) {\n            return (\n              <ResourceNotFound\n                message={\n                  <FormattedMessage\n                    id=\"Applications.Details.InfoBar.listing.resource.not.found\"\n                    defaultMessage=\"Resource Not Fount\"\n                  />\n                }\n              />\n            );\n        }\n\n        if (!application) {\n            return <Loading />;\n        }\n        const isUserOwner = AuthManager.getUser().name === applicationOwner;\n\n        return (\n            <div className={classes.infoBarMain}>\n                <div className={classes.root}>\n                    <Grid item xs={10}>\n                        <div style={{ marginLeft: theme.spacing(1) }}>\n                            <Link to={'/applications/' + applicationId + '/overview'} className={classes.linkTitle}>\n                                <Typography variant='h4'>{application.name}</Typography>\n                            </Link>\n                        </div>\n                        <div style={{ marginLeft: theme.spacing(1) }}>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                {application.subscriptionCount}{' '}\n                                <FormattedMessage\n                                    id='Applications.Details.InfoBar.subscriptions'\n                                    defaultMessage='Subscriptions'\n                                />\n                            </Typography>\n                        </div>\n                    </Grid>\n                    {isUserOwner && (\n                    <>\n                    <VerticalDivider height={70} />\n                    <Grid item xs={1} m={1} className={classes.editButton}>\n                            <Link to={`/applications/${applicationId}/edit/`} className={classes.editButton}>\n                                <Button\n                                    style={{ padding: '4px' }}\n                                    color='default'\n                                    classes={{ label: classes.iconButton }}\n                                    aria-label={(\n                                        <FormattedMessage\n                                            id='Applications.Details.InfoBar.edit'\n                                            defaultMessage='Edit'\n                                        />\n                                    )}\n                                >\n                                    <Icon>edit</Icon>\n                                    <Typography variant='caption' style={{ marginTop: '2px' }} >\n                                        <FormattedMessage\n                                            id='Applications.Details.InfoBar.edit.text'\n                                            defaultMessage='Edit'\n                                        />\n                                    </Typography>\n                                </Button>\n                            </Link>\n                    </Grid>\n                    <VerticalDivider height={70} />\n                    <Grid item xs={1} m={1} className={classes.button}>\n                        <Button\n                            onClick={this.handleDeleteConfimation}\n                            disabled={AuthManager.getUser().name !== applicationOwner}\n                            color='default'\n                            classes={{ label: classes.iconButton }}\n                            aria-label={(\n                                <FormattedMessage\n                                    id='Applications.Details.InfoBar.delete'\n                                    defaultMessage='Delete'\n                                />\n                            )}\n                        >\n                            <Icon>delete</Icon>\n                            <Typography variant='caption' style={{ marginTop: '2px' }} >\n                                <FormattedMessage\n                                    id='Applications.Details.InfoBar.text'\n                                    defaultMessage='Delete'\n                                />\n                            </Typography>\n                        </Button>\n                        <DeleteConfirmation\n                            handleAppDelete={this.handleAppDelete}\n                            isDeleteOpen={isDeleteOpen}\n                            toggleDeleteConfirmation={this.toggleDeleteConfirmation}\n                        />\n                    </Grid>\n                    </>         \n                    )}\n                </div>\n            </div>\n        );\n    }\n}\nInfoBar.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    applicationId: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles, { withTheme: true })(InfoBar)));\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { app } from 'Settings';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport API from 'AppData/api';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport Application from 'AppData/Application';\nimport TokenManager from 'AppComponents/Shared/AppsAndKeys/TokenManager';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n        '& td, & th': {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        background: theme.custom.infoBar.background,\n    },\n    table: {\n        minWidth: '100%',\n    },\n    leftCol: {\n        width: 200,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    iconEven: {\n        color: theme.custom.infoBar.iconEvenColor,\n        width: theme.spacing(3),\n    },\n    iconOdd: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n    noKeysRoot: {\n        backgroundImage: `url(${app.context + theme.custom.overviewPage.keysBackground})`,\n        height: '100%',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: 192,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    heading: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        paddingLeft: theme.spacing(1),\n    },\n    emptyBox: {\n        background: '#ffffff55',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    summaryRoot: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    actionPanel: {\n        justifyContent: 'flex-start',\n    },\n}));\n\n/**\n * Render application overview page.\n * @param {JSON} props Props passed down from parent.\n * @returns {JSX} jsx output from render.\n */\nfunction Overview(props) {\n    const classes = useStyles();\n    const [application, setApplication] = useState(null);\n    const [tierDescription, setTierDescription] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const { match: { params: { applicationId } } } = props;\n    useEffect(() => {\n        const client = new API();\n        // Get application\n        const promisedApplication = client.getApplication(applicationId);\n        promisedApplication\n            .then((response) => {\n                const promisedTier = client.getTierByName(response.obj.throttlingPolicy, 'application');\n                const app = response.obj;\n                promisedTier.then((tierResponse) => {\n                    setTierDescription(tierResponse.obj.description);\n                    setApplication(app);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else {\n                    setNotFound(false);\n                }\n            });\n    }, []);\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    if (!application) {\n        return <Loading />;\n    }\n    const pathPrefix = '/applications/' + applicationId;\n    return (\n        <>\n            <div className={classes.root}>\n                <Table className={classes.table}>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconEven}>description</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.description'\n                                                defaultMessage='Description'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {application.description}\n                            </TableCell>\n                        </TableRow>\n                        {tierDescription\n                            && (\n                                <TableRow>\n                                    <TableCell component='th' scope='row' className={classes.leftCol}>\n                                        <div className={classes.iconAligner}>\n                                            <Icon className={classes.iconOdd}>settings_input_component</Icon>\n                                            <span className={classes.iconTextWrapper}>\n                                                <Typography variant='caption' gutterBottom align='left'>\n                                                    <FormattedMessage\n                                                        id='Applications.Details.InfoBar.throttling.tier'\n                                                        defaultMessage='Throttling Tier'\n                                                    />\n                                                </Typography>\n                                            </span>\n                                        </div>\n                                    </TableCell>\n                                    {application\n                                        && (\n                                            <TableCell>\n                                                {application.throttlingPolicy}\n                                                {' '}\n                                                {`(${tierDescription})`}\n                                            </TableCell>\n                                        )}\n                                </TableRow>\n                            )}\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconEven}>vpn_key</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.token.type'\n                                                defaultMessage='Token Type'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {Application.TOKEN_TYPES[application.tokenType].displayName}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconOdd}>assignment_turned_in</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.workflow.status'\n                                                defaultMessage='Workflow Status'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {application.status}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconEven}>account_box</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.application.owner'\n                                                defaultMessage='Application Owner'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {application.owner}\n                            </TableCell>\n                        </TableRow>\n                        {application.attributes\n                            && (\n                                Object.keys(application.attributes).map((attr, index) => {\n                                    const attrValue = application.attributes[attr];\n                                    return (\n                                        <TableRow key={attr}>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classNames(\n                                                        { [classes.iconEven]: index % 2 !== 0 },\n                                                        { [classes.iconOdd]: index % 2 === 0 },\n                                                    )}\n                                                    >\n                                                        web_asset\n                                                    </Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <Typography variant='caption' gutterBottom align='left'>\n                                                            {attr}\n                                                        </Typography>\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                {attrValue}\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                }))}\n\n                    </TableBody>\n                </Table>\n            </div>\n            <Grid container spacing={2}>\n                <Grid item xs={12} lg={6}>\n                    <ExpansionPanel defaultExpanded>\n                        <ExpansionPanelSummary classes={{ content: classes.summaryRoot }}>\n                            <Icon className={classes.iconEven}>vpn_key</Icon>\n                            <Typography className={classes.heading} variant='h6'>\n                                <FormattedMessage\n                                    id='Applications.Details.Overview.prod.keys.title'\n                                    defaultMessage='Production Keys'\n                                />\n                            </Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails\n                            classes={{ root: classNames({ [classes.noKeysRoot]: true }) }}\n                        >\n                            <TokenManager\n                                keyType='PRODUCTION'\n                                selectedApp={{\n                                    appId: application.applicationId,\n                                    label: application.name,\n                                    tokenType: application.tokenType,\n                                    owner: application.owner,\n                                    hashEnabled: application.hashEnabled,\n                                }}\n                                summary\n                            />\n                        </ExpansionPanelDetails>\n                        <Divider />\n                        <ExpansionPanelActions className={classes.actionPanel}>\n                            <Link to={pathPrefix + '/productionkeys/oauth'} className={classes.button}>\n                                <Button size='small' color='primary'>\n                                    <FormattedMessage\n                                        id='Applications.Details.Overview.show.more'\n                                        defaultMessage='Manage >>'\n                                    />\n                                </Button>\n                            </Link>\n                        </ExpansionPanelActions>\n                    </ExpansionPanel>\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                    <ExpansionPanel defaultExpanded>\n                        <ExpansionPanelSummary classes={{ content: classes.summaryRoot }}>\n                            <Icon className={classes.iconEven}>vpn_key</Icon>\n                            <Typography className={classes.heading} variant='h6'>\n                                <FormattedMessage\n                                    id='Applications.Details.Overview.sand.keys.title'\n                                    defaultMessage='Sandbox Keys'\n                                />\n                            </Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails\n                            classes={{ root: classNames({ [classes.noKeysRoot]: true }) }}\n                        >\n                            <TokenManager\n                                keyType='SANDBOX'\n                                selectedApp={{\n                                    appId: application.applicationId,\n                                    label: application.name,\n                                    tokenType: application.tokenType,\n                                    owner: application.owner,\n                                    hashEnabled: application.hashEnabled,\n                                }}\n                                summary\n                            />\n                        </ExpansionPanelDetails>\n                        <Divider />\n                        <ExpansionPanelActions className={classes.actionPanel}>\n                            <Link to={pathPrefix + '/sandboxkeys/oauth'} className={classes.button}>\n                                <Button size='small' color='primary'>\n                                    <FormattedMessage\n                                        id='Applications.Details.Overview.show.more'\n                                        defaultMessage='Manage >>'\n                                    />\n                                </Button>\n                            </Link>\n                        </ExpansionPanelActions>\n                    </ExpansionPanel>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\nexport default injectIntl(Overview);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under this\n * license, please see the license as well as any agreement you’ve entered into\n * with WSO2 governing the purchase of this software and any associated services.\n *\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Route, Switch, Redirect, Link,\n} from 'react-router-dom';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport { app } from 'Settings';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport LeftMenuItem from 'AppComponents/Shared/LeftMenuItem';\nimport TokenManager from 'AppComponents/Shared/AppsAndKeys/TokenManager';\nimport ApiKeyManager from 'AppComponents/Shared/AppsAndKeys/ApiKeyManager';\nimport classNames from 'classnames';\nimport Paper from '@material-ui/core/Paper';\nimport { Helmet } from 'react-helmet';\nimport Subscriptions from './Subscriptions';\nimport InfoBar from './InfoBar';\nimport Overview from './Overview';\n\n/**\n *\n *\n * @param {*} theme theme details\n * @returns {Object}\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        LeftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            textDecoration: 'none',\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            paddingBottom: theme.spacing(3),\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {Component}\n */\nclass Details extends Component {\n    /**\n     *\n     * @param {Object} props props passed from above\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            application: null,\n            active: 'overview',\n        };\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    componentDidMount() {\n        const { match } = this.props;\n        const client = new API();\n        const promisedApplication = client.getApplication(match.params.application_uuid);\n        promisedApplication\n            .then((response) => {\n                this.setState({ application: response.obj });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n            });\n    }\n\n    /**\n     *\n     * @param {String} menuLink selected menu name\n     * @memberof Details\n     */\n    handleMenuSelect = (menuLink) => {\n        const { history, match } = this.props;\n        history.push({ pathname: '/applications/' + match.params.application_uuid + '/' + menuLink });\n        this.setState({ active: menuLink });\n    };\n\n    renderManager = (application, keyType, secScheme) => {\n        return (\n            <Paper>\n                {secScheme === 'oauth' && (\n                    <div>\n                        <TokenManager\n                            keyType={keyType}\n                            selectedApp={{\n                                appId: application.applicationId,\n                                label: application.name,\n                                tokenType: application.tokenType,\n                                owner: application.owner,\n                                hashEnabled: application.hashEnabled,\n                                isRegulatory:(application.attributes.regulatory === 'true'),\n                            }}\n                        />\n                    </div>\n                )}\n                {secScheme === 'apikey' && (\n                    <div>\n                        <ApiKeyManager\n                            keyType={keyType}\n                            selectedApp={{\n                                appId: application.applicationId,\n                                label: application.name,\n                                tokenType: application.tokenType,\n                                owner: application.owner,\n                            }}\n                        />\n                    </div>\n                )}\n            </Paper>\n        );\n    }\n\n    /**\n     *\n     *\n     * @returns {Component}\n     * @memberof Details\n     */\n    render() {\n        const { classes, match, theme } = this.props;\n        const { notFound, application } = this.state;\n        const pathPrefix = '/applications/' + match.params.application_uuid;\n        const redirectUrl = pathPrefix + '/overview';\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                title: {\n                    prefix, sufix,\n                },\n            },\n        } = theme;\n        if (notFound) {\n            return <ResourceNotFound />;\n        } else if (!application) {\n            return <Loading />;\n        }\n        return (\n            <>\n                <Helmet>\n                    <title>{`${prefix} ${application.name}${sufix}`}</title>\n                </Helmet>\n                <div\n                    className={classNames(\n                        classes.LeftMenu,\n                        {\n                            [classes.leftMenuHorizontal]: position === 'horizontal',\n                        },\n                        {\n                            [classes.leftMenuVerticalLeft]: position === 'vertical-left',\n                        },\n                        {\n                            [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                        },\n                        'left-menu',\n                    )}\n                >\n                    {rootIconVisible && (\n                        <Link to='/applications' className={classes.leftLInkMain}>\n                            <CustomIcon width={rootIconSize} height={rootIconSize} icon='applications' />\n                            {rootIconTextVisible && (\n                                <Typography className={classes.leftLInkMainText}>\n                                    <FormattedMessage id='Applications.Details.applications.all' defaultMessage='ALL APPs' />\n                                </Typography>\n                            )}\n                        </Link>\n                    )}\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.overview' defaultMessage='Overview' />} iconText='overview' route='overview' to={pathPrefix + '/overview'} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.prod.keys' defaultMessage='Production Keys' />} iconText='productionkeys' route='productionkeys' to={pathPrefix + '/productionkeys/oauth'} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.oauth.tokens' defaultMessage='OAuth2 Tokens' />} route='productionkeys/oauth' to={pathPrefix + '/productionkeys/oauth'} submenu />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.api.key' defaultMessage='Api Key' />} route='productionkeys/apikey' to={pathPrefix + '/productionkeys/apikey'} submenu />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.sandbox.keys' defaultMessage='Sandbox Keys' />} iconText='productionkeys' route='sandboxkeys' to={pathPrefix + '/sandboxkeys/oauth'} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.oauth.tokens' defaultMessage='OAuth2 Tokens' />} route='sandboxkeys/oauth' to={pathPrefix + '/sandboxkeys/oauth'} submenu />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.api.key' defaultMessage='Api Key' />} route='sandboxkeys/apikey' to={pathPrefix + '/sandboxkeys/apikey'} submenu />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.subscriptions' defaultMessage='Subscriptions' />} iconText='subscriptions' route='subscriptions' to={pathPrefix + '/subscriptions'} />\n                </div>\n                <div className={classes.content}>\n                    <InfoBar applicationId={match.params.application_uuid} innerRef={node => (this.infoBar = node)} />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <Switch>\n                            <Redirect exact from='/applications/:applicationId' to={redirectUrl} />\n                            <Route\n                                path='/applications/:applicationId/overview'\n                                component={Overview}\n                            />\n                            <Route\n                                path='/applications/:applicationId/productionkeys/oauth'\n                                component={() => (this.renderManager(application, 'PRODUCTION', 'oauth'))}\n                            />\n                            <Route\n                                path='/applications/:applicationId/productionkeys/apikey'\n                                component={() => (this.renderManager(application, 'PRODUCTION', 'apikey'))}\n                            />\n                            <Route\n                                path='/applications/:applicationId/sandboxkeys/oauth'\n                                component={() => (this.renderManager(application, 'SANDBOX', 'oauth'))}\n                            />\n                            <Route\n                                path='/applications/:applicationId/sandboxkeys/apikey'\n                                component={() => (this.renderManager(application, 'SANDBOX', 'apikey'))}\n                            />\n                            <Route path='/applications/:applicationId/subscriptions' component={Subscriptions} />\n                            <Route component={ResourceNotFound} />\n                        </Switch>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            application_uuid: PropTypes.string.isRequired,\n        }).isRequired,\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Details);"],"sourceRoot":""}