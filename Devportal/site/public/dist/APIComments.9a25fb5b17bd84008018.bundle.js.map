{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/Grid/Grid.js","webpack:///./node_modules/@material-ui/core/utils/requirePropFactory.js","webpack:///./source/src/app/components/Shared/ConfirmDialog.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentOptions.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comment.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comments.jsx"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","styles","_objectWithoutProperties2","_extends2","_react","_clsx","_withStyles","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","theme","root","container","boxSizing","display","flexWrap","width","item","margin","zeroMinWidth","minWidth","flexDirection","alignItems","alignContent","justifyContent","breakpoint","forEach","spacing","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","Grid","forwardRef","props","ref","_props$alignContent","_props$alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","other","createElement","_default","name","componentNameInError","ConfirmDialog","React","handleRequestClose","action","callback","this","Action","OK","render","title","message","labelCancel","labelOk","open","Dialog","onClose","dialogWrapper","DialogTitle","id","defaultMessage","DialogContent","DialogContentText","DialogActions","Button","onClick","CANCEL","color","variant","propTypes","PropTypes","string","isRequired","func","bool","withStyles","palette","getContrastText","background","paper","CommentEdit","constructor","super","state","commentText","category","currentLength","inputChange","bind","handleCategoryChange","handleClickUpdateComment","handleClickCancel","filterCommentToUpdate","filterCommentToUpdateReply","componentDidMount","comment","setState","target","toggleShowEdit","commentsUpdate","allComments","event","commentToFilter","commentId","parentCommentId","apiId","intl","Api","API","commentToEdit","trim","updateComment","then","result","updatedComment","body","index","findIndex","replyIndex","replies","catch","error","console","response","Alert","formatMessage","FormControl","Select","onChange","MenuItem","TextField","autoFocus","multiline","textField","placeholder","inputProps","maxLength","custom","maxCommentLength","Typography","align","button","instanceOf","Array","shape","injectIntl","marginTop","contentWrapper","contentAreaWidth","paddingLeft","paddingTop","unig","marginRight","withTheme","CommentOptions","showAddComment","showEditComment","handleClickOpen","editIndex","displayDate","timestamp","localDate","Date","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","verticalSpace","AuthManager","getUser","createdBy","link","disable","VerticalDivider","height","time","createdTime","defaultProps","number","primary","main","cursor","grey","commentIcon","whiteSpace","overflowWrap","Comment","openDialog","deleteComment","handleClickDeleteComment","handleShowEdit","handleShowReply","handleConfirmDialog","handleClose","filterRemainingComments","filterCommentToDelete","apiClient","commentIdOfCommentToDelete","remainingComments","filter","comments","isOverview","Paper","classNames","cleanBack","slice","reverse","map","contentWrapperOverview","Divider","divider","Icon","noWrap","content","wordBreak","paddingBottom","boxShadow","CommentAdd","handleClickAddComment","addComment","newComment","addedComment","push","cancelButton","commentAddWrapper","disabled","commentAddButton","toggleShowReply","Comments","expanded","totalComments","startCommentsToDisplay","updateCommentList","handleExpandClick","handleLoadMoreComments","match","setCount","params","apiUuid","getAllComments","commentList","list","commentsLimit","process","newStart","difference","newTotal","isCrossTenant","apiProvider","currentUser","tenantDomain","loggedInUserDomain","loggedInUser","includes","splitDomain","split","splitLoggedInUser","showLatest","ApiContext","Consumer","api","titleSub","provider","paperProgress","CircularProgress","genericMessageWrapper","InlineMessage","type","dialogContainer","loadMoreLink","paddingRight","textDecoration","marginBottom"],"mappings":"2FAEA,IAAIA,EAAyB,EAAQ,MAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAAUF,EAAQG,YAAS,EAEnC,IAAIC,EAA4BP,EAAuB,EAAQ,OAE3DQ,EAAYR,EAAuB,EAAQ,OAE3CS,EAAST,EAAuB,EAAQ,IAIxCU,GAFaV,EAAuB,EAAQ,KAEpCA,EAAuB,EAAQ,QAEvCW,EAAcX,EAAuB,EAAQ,OAc7CY,GAZsBZ,EAAuB,EAAQ,OAY1C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC1Ca,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA4CnE,SAASC,EAAUC,GACjB,IAAIC,EAAMC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAC1EG,EAAQC,WAAWN,GACvB,MAAO,GAAGO,OAAOF,EAAQJ,GAAKM,OAAOC,OAAOR,GAAKS,QAAQD,OAAOH,GAAQ,KAAO,MA6BjF,IAAId,EAAS,SAAgBmB,GAC3B,OAAO,EAAIjB,EAAUH,SAAS,CAE5BqB,KAAM,GAGNC,UAAW,CACTC,UAAW,aACXC,QAAS,OACTC,SAAU,OACVC,MAAO,QAITC,KAAM,CACJJ,UAAW,aACXK,OAAQ,KAKVC,aAAc,CACZC,SAAU,GAIZ,sBAAuB,CACrBC,cAAe,UAIjB,8BAA+B,CAC7BA,cAAe,kBAIjB,2BAA4B,CAC1BA,cAAe,eAIjB,iBAAkB,CAChBN,SAAU,UAIZ,uBAAwB,CACtBA,SAAU,gBAIZ,wBAAyB,CACvBO,WAAY,UAId,4BAA6B,CAC3BA,WAAY,cAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBC,aAAc,UAIhB,8BAA+B,CAC7BA,aAAc,cAIhB,4BAA6B,CAC3BA,aAAc,YAIhB,iCAAkC,CAChCA,aAAc,iBAIhB,gCAAiC,CAC/BA,aAAc,gBAIhB,oBAAqB,CACnBC,eAAgB,UAIlB,sBAAuB,CACrBA,eAAgB,YAIlB,2BAA4B,CAC1BA,eAAgB,iBAIlB,0BAA2B,CACzBA,eAAgB,gBAIlB,0BAA2B,CACzBA,eAAgB,iBA/ItB,SAAwBd,EAAOe,GAC7B,IAAIlC,EAAS,GAgBb,OAfAM,EAAS6B,SAAQ,SAAUC,GACzB,IAAIC,EAAelB,EAAMiB,QAAQA,GAEZ,IAAjBC,IAIJrC,EAAO,WAAWgB,OAAOkB,EAAY,KAAKlB,OAAOoB,IAAY,CAC3DT,OAAQ,IAAIX,OAAOR,EAAU6B,EAAc,IAC3CZ,MAAO,eAAeT,OAAOR,EAAU6B,GAAe,KACtD,YAAa,CACXC,QAAS9B,EAAU6B,EAAc,SAIhCrC,EAgIJuC,CAAepB,EAAO,MAAO,GAAIA,EAAMqB,YAAYC,KAAKC,QAAO,SAAUC,EAAaC,GAGvF,OApMJ,SAAsBC,EAAc1B,EAAOe,GACzC,IAAIlC,EAAS,GACbO,EAAW4B,SAAQ,SAAUW,GAC3B,IAAIF,EAAM,QAAQ5B,OAAOkB,EAAY,KAAKlB,OAAO8B,GAEjD,IAAa,IAATA,EAUJ,GAAa,SAATA,EAAJ,CAUA,IAAIrB,EAAQ,GAAGT,OAAO+B,KAAKC,MAAMF,EAAO,GAAK,KAAQ,IAAM,KAG3D9C,EAAO4C,GAAO,CACZK,UAAWxB,EACXyB,SAAU,EACVC,SAAU1B,QAfVzB,EAAO4C,GAAO,CACZK,UAAW,OACXC,SAAU,EACVC,SAAU,aAZZnD,EAAO4C,GAAO,CACZK,UAAW,EACXC,SAAU,EACVC,SAAU,WAyBG,OAAfjB,GACF,EAAIhC,EAAUH,SAAS8C,EAAc7C,GAErC6C,EAAa1B,EAAMqB,YAAYY,GAAGlB,IAAelC,EA6JjDqD,CAAaV,EAAaxB,EAAOyB,GAC1BD,IACN,MAGL9C,EAAQG,OAASA,EAEjB,IAAIsD,EAAOnD,EAAOJ,QAAQwD,YAAW,SAAcC,EAAOC,GACxD,IAAIC,EAAsBF,EAAMxB,aAC5BA,OAAuC,IAAxB0B,EAAiC,UAAYA,EAC5DC,EAAoBH,EAAMzB,WAC1BA,OAAmC,IAAtB4B,EAA+B,UAAYA,EACxDC,EAAUJ,EAAMI,QAChBC,EAAgBL,EAAMM,UACtBC,EAAmBP,EAAMQ,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAmBV,EAAMnC,UACzBA,OAAiC,IAArB6C,GAAsCA,EAClDC,EAAmBX,EAAMY,UACzBA,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAcb,EAAM9B,KACpBA,OAAuB,IAAhB2C,GAAiCA,EACxCC,EAAiBd,EAAMe,QACvBA,OAA6B,IAAnBD,EAA4B,aAAeA,EACrDE,EAAYhB,EAAMiB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYlB,EAAMmB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYpB,EAAMqB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAiBtB,EAAMpB,QACvBA,OAA6B,IAAnB0C,EAA4B,EAAIA,EAC1CC,EAAcvB,EAAMwB,KACpBA,OAAuB,IAAhBD,EAAyB,OAASA,EACzCE,EAAYzB,EAAM0B,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAY3B,EAAM4B,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAsB7B,EAAM5B,aAC5BA,OAAuC,IAAxByD,GAAyCA,EACxDC,GAAQ,EAAIrF,EAA0BF,SAASyD,EAAO,CAAC,eAAgB,aAAc,UAAW,YAAa,YAAa,YAAa,YAAa,OAAQ,UAAW,KAAM,KAAM,KAAM,UAAW,OAAQ,KAAM,KAAM,iBACxNM,GAAY,EAAI1D,EAAML,SAAS6D,EAAQxC,KAAMyC,EAAexC,GAAa,CAACuC,EAAQvC,UAAuB,IAAZe,GAAiBwB,EAAQ,cAAc5C,OAAOC,OAAOmB,MAAaV,GAAQkC,EAAQlC,KAAME,GAAgBgC,EAAQhC,aAA4B,QAAdwC,GAAuBR,EAAQ,gBAAgB5C,OAAOC,OAAOmD,KAAuB,SAATY,GAAmBpB,EAAQ,WAAW5C,OAAOC,OAAO+D,KAAwB,YAAfjD,GAA4B6B,EAAQ,kBAAkB5C,OAAOC,OAAOc,KAAgC,YAAjBC,GAA8B4B,EAAQ,oBAAoB5C,OAAOC,OAAOe,KAA6B,eAAZuC,GAA4BX,EAAQ,cAAc5C,OAAOC,OAAOsD,MAAmB,IAAPa,GAAgBxB,EAAQ,WAAW5C,OAAOC,OAAOmE,MAAc,IAAPP,GAAgBjB,EAAQ,WAAW5C,OAAOC,OAAO4D,MAAc,IAAPF,GAAgBf,EAAQ,WAAW5C,OAAOC,OAAO0D,MAAc,IAAPF,GAAgBb,EAAQ,WAAW5C,OAAOC,OAAOwD,MAAc,IAAPS,GAAgBtB,EAAQ,WAAW5C,OAAOC,OAAOiE,MACh3B,OAAO/E,EAAOJ,QAAQwF,cAActB,GAAW,EAAI/D,EAAUH,SAAS,CACpE+D,UAAWA,EACXL,IAAKA,GACJ6B,OAmIDE,GArBa,EAAInF,EAAYN,SAASC,EAAQ,CAChDyF,KAAM,WADS,CAEdnC,GAoBHzD,EAAQE,QAAUyF,G,kCCtZlB7F,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAwBlB,IAAIyF,EAtBJ,SAA4BE,GAExB,OAAO,WACL,OAAO,OAoBb7F,EAAQE,QAAUyF,G,mRCSlB,MAAMG,UAAsBC,IAAM3B,UAM9B4B,mBAAmBC,GACf,MAAM,SAAEC,GAAaC,KAAKxC,MACtBsC,IAAWH,EAAcM,OAAOC,GAChCH,GAAS,GAETA,GAAS,GASjBI,SACI,MAAM,MACFC,EADE,QACKC,EADL,YACcC,EADd,QAC2BC,EAD3B,KACoCC,EADpC,QAC0C5C,GAC5CoC,KAAKxC,MAET,OACI,kBAACiD,EAAA,EAAD,CAAQD,KAAMA,EAAME,QAASV,KAAKH,mBAAoB/B,UAAWF,EAAQ+C,eACrE,kBAACC,EAAA,EAAD,KAAcR,GAAS,kBAAC,IAAD,CAAkBS,GAAG,sCAAsCC,eAAe,oBACjG,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAoBX,GAAW,kBAAC,IAAD,CAAkBQ,GAAG,2CAA2CC,eAAe,oBAElH,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAS,IAAMnB,KAAKH,mBAAmBF,EAAcM,OAAOmB,QAASC,MAAM,WAC9Ef,GAAe,kBAAC,IAAD,CAAkBO,GAAG,8BAA8BC,eAAe,YAEtF,kBAACI,EAAA,EAAD,CAAQC,QAAS,IAAMnB,KAAKH,mBAAmBF,EAAcM,OAAOC,IAAKmB,MAAM,UAAUC,QAAQ,aAC5Ff,GAAW,kBAAC,IAAD,CAAkBM,GAAG,0BAA0BC,eAAe,WAQlGnB,EAAc4B,UAAY,CACtBnB,MAAOoB,IAAUC,OAAOC,WACxBrB,QAASmB,IAAUC,OAAOC,WAC1BpB,YAAakB,IAAUC,OAAOC,WAC9BnB,QAASiB,IAAUC,OAAOC,WAC1B3B,SAAUyB,IAAUG,KAAKD,WACzBlB,KAAMgB,IAAUI,KAAKF,YAEzB/B,EAAcM,OAAS,CACnBC,GAAI,KACJkB,OAAQ,UAGGS,kBAtEC1G,IAAD,CACXwF,cAAe,CACX,gDAAiD,CAC7CU,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWC,WAmE3DJ,CAAmBlC,G,iDC7ClC,MAAMuC,UAAoBtC,IAAM3B,UAM5BkE,YAAY3E,GACR4E,MAAM5E,GACNwC,KAAKqC,MAAQ,CACTC,YAAa,GACbC,SAAU,GACVC,cAAe,GAEnBxC,KAAKyC,YAAczC,KAAKyC,YAAYC,KAAK1C,MACzCA,KAAK2C,qBAAuB3C,KAAK2C,qBAAqBD,KAAK1C,MAC3DA,KAAK4C,yBAA2B5C,KAAK4C,yBAAyBF,KAAK1C,MACnEA,KAAK6C,kBAAoB7C,KAAK6C,kBAAkBH,KAAK1C,MACrDA,KAAK8C,sBAAwB9C,KAAK8C,sBAAsBJ,KAAK1C,MAC7DA,KAAK+C,2BAA6B/C,KAAK+C,2BAA2BL,KAAK1C,MAM3EgD,oBACI,MAAM,QAAEC,GAAYjD,KAAKxC,MACzBwC,KAAKkD,SAAS,CACVZ,YAAaW,EAAQX,YACrBC,SAAUU,EAAQV,SAClBC,cAAeS,EAAQX,YAAY1H,SAS3C6H,YAAY,GAAY,IAAZ,OAAEU,GAAU,EACpBnD,KAAKkD,SAAS,CAAEZ,YAAaa,EAAOrJ,MAAO0I,cAAeW,EAAOrJ,MAAMc,SAO3EiI,oBACI,MAAM,eAAEO,EAAF,eAAkBC,EAAlB,YAAkCC,GAAgBtD,KAAKxC,MAC7D4F,IACAC,EAAeC,GAQnBX,qBAAqBY,GACjBvD,KAAKkD,SAAS,CAAEX,SAAUgB,EAAMJ,OAAOrJ,QAO3CgJ,sBAAsBU,GAClB,MAAM,QAAEP,GAAYjD,KAAKxC,MACzB,OAAOgG,EAAgBC,YAAcR,EAAQQ,UAOjDV,2BAA2BS,GACvB,MAAM,QAAEP,GAAYjD,KAAKxC,MACzB,OAAOgG,EAAgBC,YAAcR,EAAQS,gBAOjDd,2BACI,MAAM,MACFe,EADE,QACKV,EADL,YACcK,EADd,eAC2BF,EAD3B,eAC2CC,EAD3C,KAC2DO,GAC7D5D,KAAKxC,OACH,SAAE+E,EAAF,YAAYD,GAAgBtC,KAAKqC,MACjCwB,EAAM,IAAIC,IACVC,EAAgBd,EACtBc,EAAczB,YAAcA,EAAY0B,OACxCD,EAAcxB,SAAWA,EAGrBU,EAAQX,YAAYpH,QAAQ,MAAO,IAAIN,OACvCiJ,EAAII,cAAcN,EAAOI,EAAcN,UAAWM,GAC7CG,KAAMC,IACH,MAAMC,EAAiBD,EAAOE,KAC9B,QAAsCxJ,IAAlCkJ,EAAcL,gBAA+B,CAC7C,MAAMY,EAAQhB,EAAYiB,UAAUvE,KAAK8C,uBACzCQ,EAAYgB,GAAO/B,SAAW6B,EAAe7B,SAC7Ce,EAAYgB,GAAOhC,YAAc8B,EAAe9B,gBAC7C,CACH,MAAMgC,EAAQhB,EAAYiB,UAAUvE,KAAK+C,4BACnCyB,EAAalB,EAAYgB,GAAOG,QAAQF,UAAUvE,KAAK8C,uBAC7DQ,EAAYgB,GAAOG,QAAQD,GAAcJ,EAE7ChB,IACAC,EAAeC,KAElBoB,MAAOC,IACJC,QAAQD,MAAMA,GACVA,EAAME,SACNC,IAAMH,MAAMA,EAAME,SAASR,KAAKhE,SAEhCyE,IAAMH,MACFf,EAAKmB,cAAc,CACfjE,eAAgB,gDAChBD,GAAI,8DAMxBiE,IAAMH,MACFf,EAAKmB,cAAc,CACfjE,eAAgB,mCAChBD,GAAI,2DAWpBV,SACI,MAAM,QAAEvC,EAAF,MAAWzC,EAAX,KAAkByI,GAAS5D,KAAKxC,OAChC,SAAE+E,EAAF,YAAYD,EAAZ,cAAyBE,GAAkBxC,KAAKqC,MACtD,OACI,6BACI,kBAAC2C,EAAA,EAAD,CAAalH,UAAWF,EAAQ2E,UAC5B,kBAAC0C,EAAA,EAAD,CAAQnL,MAAOyI,EAAU2C,SAAUlF,KAAK2C,sBACpC,kBAACwC,EAAA,EAAD,CAAUrL,MAAM,WACZ,kBAAC,IAAD,CAAkB+G,GAAG,4CAA4CC,eAAe,aAEpF,kBAACqE,EAAA,EAAD,CAAUrL,MAAM,mBACZ,kBAAC,IAAD,CACI+G,GAAG,oDACHC,eAAe,qBAGvB,kBAACqE,EAAA,EAAD,CAAUrL,MAAM,cACZ,kBAAC,IAAD,CACI+G,GAAG,+CACHC,eAAe,kBAK/B,kBAACsE,EAAA,EAAD,CACIvE,GAAG,mBACHwE,WAAS,EACTC,WAAS,EACTxH,UAAWF,EAAQ2H,UACnB5J,OAAO,SACP6J,YAAa5B,EAAKmB,cAAc,CAC5BjE,eAAgB,kBAChBD,GAAI,sDAER4E,WAAY,CAAEC,UAAWvK,EAAMwK,OAAOC,kBACtC9L,MAAOwI,EACP4C,SAAUlF,KAAKyC,cAEnB,kBAACoD,EAAA,EAAD,CAAY/H,UAAWF,EAAQ0E,YAAawD,MAAM,SAC7CtD,EAAgB,IAAMrH,EAAMwK,OAAOC,kBAExC,kBAAC,IAAD,CAAMvK,WAAS,EAACe,QAAS,GACrB,kBAAC,IAAD,CAAMV,MAAI,GACN,kBAACwF,EAAA,EAAD,CAAQI,QAAQ,YAAYD,MAAM,UAAUF,QAAS,IAAMnB,KAAK4C,4BAC5D,kBAAC,IAAD,CAAkB/B,GAAG,6CAA6CC,eAAe,WAGzF,kBAAC,IAAD,CAAMpF,MAAI,GACN,kBAACwF,EAAA,EAAD,CAAQC,QAAS,IAAMnB,KAAK6C,oBAAqB/E,UAAWF,EAAQmI,QAChE,kBAAC,IAAD,CACIlF,GAAG,+CACHC,eAAe,gBAU/CoB,EAAYX,UAAY,CACpB3D,QAAS4D,IAAUwE,WAAWrM,QAAQ+H,WACtCiC,MAAOnC,IAAUC,OAAOC,WACxB4B,YAAa9B,IAAUwE,WAAWC,OAAOvE,WACzC2B,eAAgB7B,IAAUG,KAAKD,WAC/B0B,eAAgB5B,IAAUG,KAAKD,WAC/BuB,QAASzB,IAAUwE,WAAWrM,QAAQ+H,WACtCkC,KAAMpC,IAAU0E,MAAM,CAClBnB,cAAevD,IAAUG,OAC1BD,YAGQyE,kBAAWtE,YAzOX1G,IAAS,CACpBoK,UAAW,CACPa,UAAW,EACX3K,MAAO,SAEX4K,eAAgB,CACZlJ,SAAUhC,EAAMwK,OAAOW,iBACvBC,YAAapL,EAAMiB,QAAQ,GAC3BoK,WAAYrL,EAAMiB,QAAQqK,KAC1BL,UAAWjL,EAAMiB,QAAQ,IAE7BmG,SAAU,CACN9G,MAAO,MACPiL,YAAa,UA4NwB,CAAEC,WAAW,GAAhC9E,CAAwCK,I,kBC9LlE,MAAM0E,UAAuBhH,IAAM3B,UAM/BkE,YAAY3E,GACR4E,MAAM5E,GACNwC,KAAKqC,MAAQ,GACbrC,KAAK6G,eAAiB7G,KAAK6G,eAAenE,KAAK1C,MAC/CA,KAAK8G,gBAAkB9G,KAAK8G,gBAAgBpE,KAAK1C,MACjDA,KAAK+G,gBAAkB/G,KAAK+G,gBAAgBrE,KAAK1C,MAQrD6G,eAAevC,GACX,MAAM,UAAE0C,EAAF,eAAaH,GAAmB7G,KAAKxC,OACxB,IAAfwJ,GACAH,EAAevC,GASvBwC,gBAAgBxC,GACZ,MAAM,UAAE0C,EAAF,gBAAaF,GAAoB9G,KAAKxC,OACzB,IAAfwJ,GACAF,EAAgBxC,GASxByC,gBAAgB9D,GACZ,MAAM,UAAE+D,EAAF,gBAAaD,GAAoB/G,KAAKxC,OACzB,IAAfwJ,GACAD,EAAgB9D,GASxBgE,YAAYC,GACR,MAAMC,EAAY,IAAIC,KAAKF,GAU3B,OATwBC,EAAUE,wBAAmBxM,EAAW,CAC5DyM,IAAK,UACLC,MAAO,QACPC,KAAM,YAMe,IAJDL,EAAUM,wBAAmB5M,EAAW,CAC5D6M,KAAM,UACNC,OAAQ,YAUhBxH,SACI,MAAM,QACFvC,EADE,QACOqF,EADP,UACgB+D,EADhB,MAC2B1C,EAD3B,MACkCnJ,GACpC6E,KAAKxC,MACT,OACI,kBAAC,IAAD,CAAMnC,WAAS,EAACe,QAAS,EAAG0B,UAAWF,EAAQgK,cAAehL,IAAKqG,EAAQpC,IAEtEgH,IAAYC,WAAc7E,EAAQ8E,YAAcF,IAAYC,UAAUrI,MAAS,CACxE,kBAAC,IAAD,CAAM/D,MAAI,EAACkB,IAAI,cACX,kBAACsE,EAAA,EAAD,CACII,QAAQ,WAAWxE,KAAK,QACxBgB,WAA0B,IAAfkJ,EAAmBpJ,EAAQoK,KAAOpK,EAAQqK,QACrD9G,QAAS,IAAMnB,KAAK+G,gBAAgB9D,GACpC3B,QAAQ,YACRD,MAAM,WAEN,kBAAC,IAAD,CACIR,GAAG,8CACHC,eAAe,aAI3B,kBAAC,IAAD,CAAMpF,MAAI,EAACkB,IAAI,+BACX,kBAACsL,EAAA,EAAD,CAAiBC,OAAQ,OAsCrC,kBAAC,IAAD,CAAMzM,MAAI,EAACoC,UAAWF,EAAQwK,MAC1B,kBAACvC,EAAA,EAAD,CAAY7H,UAAU,IAAIsD,QAAQ,WAC7BtB,KAAKiH,YAAYhE,EAAQoF,iBAoBlDzB,EAAe0B,aAAe,CAC1BzB,eAAgB,MAGpBD,EAAerF,UAAY,CACvB3D,QAAS4D,IAAUwE,WAAWrM,QAAQ+H,WACtCsF,UAAWxF,IAAU+G,OAAO7G,WAC5B4C,MAAO9C,IAAU+G,OAAO7G,WACxBuB,QAASzB,IAAUwE,WAAWrM,QAAQ+H,WACtCqF,gBAAiBvF,IAAUG,KAAKD,WAChCoF,gBAAiBtF,IAAUG,KAAKD,WAChCmF,eAAgBrF,IAAUG,MAGfE,kBAxNA1G,IAAS,CACpB6M,KAAM,CACF3G,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQ0G,QAAQC,MAC3D,8BAA+B,CAC3BpH,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQ0G,QAAQC,OAE/DC,OAAQ,WAEZN,KAAM,CACF/G,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWjI,SAC9DqM,UAAWjL,EAAMiB,QAAQ,KAE7BwL,cAAe,CACXxB,UAAWjL,EAAMiB,QAAQ,GACzBb,QAAS,OACTQ,WAAY,UAEhBkM,QAAS,CACL5G,MAAOlG,EAAM2G,QAAQ6G,KAAK,MAE9BC,YAAa,CACTvH,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWjI,UAElEuI,YAAa,CACTjB,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWjI,SAC9DqM,UAAWjL,EAAMiB,QAAQqK,KACzBhL,MAAO,OACPoN,WAAY,WACZC,aAAc,cAElB1N,KAAM,CACFgL,UAAWjL,EAAMiB,QAAQ,MAE7BiK,eAAgB,CACZlJ,SAAUhC,EAAMwK,OAAOW,iBACvBC,YAAapL,EAAMiB,QAAQ,GAC3BoK,WAAYrL,EAAMiB,QAAQqK,QAoLA,CAAEE,WAAW,GAAhC9E,CAAwC+E,GCjKvD,MAAMmC,UAAgBnJ,IAAM3B,UAMxBkE,YAAY3E,GACR4E,MAAM5E,GACNwC,KAAKqC,MAAQ,CACT2G,YAAY,EACZxE,YAAa,EACbwC,WAAY,EACZiC,cAAe,MAEnBjJ,KAAKkJ,yBAA2BlJ,KAAKkJ,yBAAyBxG,KAAK1C,MACnEA,KAAKmJ,eAAiBnJ,KAAKmJ,eAAezG,KAAK1C,MAC/CA,KAAKoJ,gBAAkBpJ,KAAKoJ,gBAAgB1G,KAAK1C,MACjDA,KAAK+G,gBAAkB/G,KAAK+G,gBAAgBrE,KAAK1C,MACjDA,KAAK6G,eAAiB7G,KAAK6G,eAAenE,KAAK1C,MAC/CA,KAAK8G,gBAAkB9G,KAAK8G,gBAAgBpE,KAAK1C,MACjDA,KAAKqJ,oBAAsBrJ,KAAKqJ,oBAAoB3G,KAAK1C,MACzDA,KAAKsJ,YAActJ,KAAKsJ,YAAY5G,KAAK1C,MACzCA,KAAKuJ,wBAA0BvJ,KAAKuJ,wBAAwB7G,KAAK1C,MACjEA,KAAKwJ,sBAAwBxJ,KAAKwJ,sBAAsB9G,KAAK1C,MAQjEuJ,wBAAwB/F,GACpB,MAAM,cAAEyF,GAAkBjJ,KAAKqC,MAC/B,OAAOmB,EAAgB3C,KAAOoI,EAAcpI,GAQhD2I,sBAAsBhG,GAGlB,OAAOA,EAAgB3C,GAQ3BgG,eAAevC,GACX,MAAM,UAAE0C,GAAchH,KAAKqC,OACR,IAAf2E,GACAhH,KAAKkD,SAAS,CAAEsB,WAAYF,IASpCwC,gBAAgBxC,GACZ,MAAM,UAAE0C,GAAchH,KAAKqC,OACR,IAAf2E,GACAhH,KAAKkD,SAAS,CAAE8D,UAAW1C,IASnC6E,iBACInJ,KAAKkD,SAAS,CAAE8D,WAAY,IAQhCoC,kBACIpJ,KAAKkD,SAAS,CAAEsB,YAAa,IAQjCuC,gBAAgB9D,GACZ,MAAM,UAAE+D,GAAchH,KAAKqC,OACR,IAAf2E,GACAhH,KAAKkD,SAAS,CAAE+F,cAAehG,EAAS+F,YAAY,IAQ5DM,cACItJ,KAAKkD,SAAS,CAAE8F,YAAY,IAQhCK,oBAAoBhJ,GACZA,EACAL,KAAKkJ,2BAELlJ,KAAKsJ,cAQbJ,2BACI,MAAMO,EAAY,IAAI3F,KAEhB,cAAEmF,GAAkBjJ,KAAKqC,OACzB,MACFsB,EADE,YACKL,EADL,eACkBD,EADlB,KACkCO,GACpC5D,KAAKxC,MACHkM,EAA6BT,EAAcpI,GAEjDb,KAAKsJ,cAELG,EACKR,cAActF,EAAO+F,GACrBxF,KAAK,KAEF,MAAMyF,EAAoBrG,EAAYsG,OAAO5J,KAAKuJ,yBAClDlG,EAAesG,GACf7E,IAAMzE,QAAQ,UAAYqJ,EAA6B,mCAQ1DhF,MAAOC,IACJC,QAAQD,MAAMA,GACVA,EAAME,UACNC,IAAMH,MAAMA,EAAME,SAASR,KAAKhE,WAoBhDF,SACI,MAAM,QACFvC,EADE,SACOiM,EADP,MACiBlG,EADjB,YACwBL,EADxB,eACqCD,EADrC,WACqDyG,GACvD9J,KAAKxC,OAEH,UAAEwJ,EAAF,WAAagC,GAAehJ,KAAKqC,MACvC,OACI,oCACI,kBAAC0H,EAAA,EAAD,CAAOjM,UAAWkM,IAAW,CAAE,CAACpM,EAAQqE,QAAS6H,GAAcD,EAASjP,OAAS,GAAK,CAAE,CAACgD,EAAQqM,WAAYH,KACxGD,GACEA,EACEK,MAAM,GACNC,UACAC,IAAI,CAACnH,EAASqB,IACX,yBAEI1H,IAAKqG,EAAQQ,UAAY,IAAMa,EAC/BxG,UAAWkM,IACP,CAAE,CAACpM,EAAQyI,iBAAkByD,GAC7B,CAAE,CAAClM,EAAQyM,wBAAyBP,KAG7B,IAAVxF,GAAe,kBAACgG,EAAA,EAAD,CAASxM,UAAWF,EAAQ2M,UAC5C,kBAAC,IAAD,CAAMlP,WAAS,EAACe,QAAS,EAAG0B,UAAWkM,IAAW,CAAE,CAACpM,EAAQxC,OAAQ0O,KACjE,kBAAC,IAAD,CAAMpO,MAAI,GACN,kBAAC8O,EAAA,EAAD,CAAM1M,UAAWF,EAAQgL,aAAzB,gBAEJ,kBAAC,IAAD,CAAMlN,MAAI,EAAC0D,IAAE,EAACxD,cAAY,GACtB,kBAACiK,EAAA,EAAD,CAAY4E,QAAM,EAAC3M,UAAWF,EAAQ0E,aACjCW,EAAQ8E,WAGZzD,IAAU0C,GACP,kBAACnB,EAAA,EAAD,CAAY/H,UAAWF,EAAQ0E,aAAcW,EAAQyH,SAGxDpG,IAAU0C,GACP,kBAAC,EAAD,CACIrD,MAAOA,EACPL,YAAaA,EACbD,eAAgBA,EAChBJ,QAASA,EACTG,eAAgBpD,KAAKmJ,iBAI7B,kBAAC,EAAD,CACIlG,QAASA,EACT+D,UAAWA,EACX1C,MAAOA,EACPuC,eAAgB7G,KAAK6G,eACrBE,gBAAiB/G,KAAK+G,gBACtBD,gBAAiB9G,KAAK8G,uBA0BlD,kBAAC,EAAD,CACIlK,IAAI,aACJ0D,YAAY,SACZF,MAAM,iBACNC,QAAQ,gDACRE,QAAQ,MACRR,SAAUC,KAAKqJ,oBACf7I,KAAMwI,MAM1BD,EAAQT,aAAe,CACnBwB,YAAY,GAEhBf,EAAQxH,UAAY,CAChB3D,QAAS4D,IAAU0E,MAAM,IAAIxE,WAC7BiC,MAAOnC,IAAUC,OAAOC,WACxB4B,YAAa9B,IAAUwE,WAAWC,OAAOvE,WACzC2B,eAAgB7B,IAAUG,KAAKD,WAC/BmI,SAAUrI,IAAUwE,WAAWC,OAAOvE,WACtCoI,WAAYtI,IAAUI,MAGXuE,kBAAWtE,YArUV1G,IAAD,CACX6M,KAAM,CACF3G,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWjI,SAC9D2O,OAAQ,WAEZE,YAAa,CACTvH,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWjI,UAElEuI,YAAa,CACTjB,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWjI,SAC9DqM,UAAW,EACX3K,MAAO,MACPoN,WAAY,WACZC,aAAc,aACd6B,UAAW,aAEfvP,KAAM,CACFgL,UAAWjL,EAAMiB,QAAQ,IAE7BiK,eAAgB,CACZE,YAAapL,EAAMiB,QAAQ,GAC3BoK,WAAYrL,EAAMiB,QAAQ,IAE9BiO,uBAAwB,CACpBrI,WAAY,cACZvG,MAAO,QAEX8O,QAAS,CACLnE,UAAWjL,EAAMiB,QAAQ,IAE7B6F,MAAO,CACHtG,OAAQ,EACRyK,UAAWjL,EAAMiB,QAAQ,GACzBsK,YAAavL,EAAMiB,QAAQ,GAC3BwO,cAAezP,EAAMiB,QAAQ,IAEjC6N,UAAW,CACPjI,WAAY,cACZvG,MAAO,OACPoP,UAAW,UA8ROhJ,CAAmBkH,ICxS7C,MAAM+B,UAAmBlL,IAAM3B,UAM3BkE,YAAY3E,GACR4E,MAAM5E,GACNwC,KAAKqC,MAAQ,CACTqI,QAAS,GACTlI,cAAe,GAEnBxC,KAAKyC,YAAczC,KAAKyC,YAAYC,KAAK1C,MACzCA,KAAK+K,sBAAwB/K,KAAK+K,sBAAsBrI,KAAK1C,MAC7DA,KAAK6C,kBAAoB7C,KAAK6C,kBAAkBH,KAAK1C,MAUzDyC,YAAY,GAAY,IAAZ,OAAEU,GAAU,EACpBnD,KAAKkD,SAAS,CAAEwH,QAASvH,EAAOrJ,MAAO0I,cAAeW,EAAOrJ,MAAMc,SAOvEiI,oBACI7C,KAAKkD,SAAS,CAAEwH,QAAS,KAkB7BK,wBACI,MAAM,MACFpH,EADE,YACKL,EADL,eACkBD,EADlB,KACkCO,GACpC5D,KAAKxC,OACH,QAAEkN,GAAY1K,KAAKqC,MACnBwB,EAAM,IAAIC,IACVb,EAAU,CACZyH,QAASA,EAAQ1G,QAIjBf,EAAQyH,QAAQxP,QAAQ,MAAO,IAAIN,OACnCiJ,EAAImH,WAAWrH,EAAOV,GACjBiB,KAAM+G,IACHjL,KAAKkD,SAAS,CAAEwH,QAAS,KACzB,MAAMQ,EAAeD,EAAW5G,KAQhCf,EAAY6H,KAAKD,GACjB7H,EAAeC,KAElBoB,MAAOC,IACJC,QAAQD,MAAMA,GACVA,EAAME,UAAYF,EAAME,SAASR,MAAQM,EAAME,SAASR,KAAKhE,QAC7DyE,IAAMH,MAAMA,EAAME,SAASR,KAAKhE,SAEhCyE,IAAMH,MAAMf,EAAKmB,cAAc,CAC3BjE,eAAgB,gDAChBD,GAAI,6DAKpBiE,IAAMH,MAAMf,EAAKmB,cAAc,CAC3BjE,eAAgB,mCAChBD,GAAI,0DAGZb,KAAKkD,SAAS,CAAEV,cAAe,IAQnCrC,SACI,MAAM,QACFvC,EADE,aACOwN,EADP,MACqBjQ,EADrB,KAC4ByI,GAC9B5D,KAAKxC,OACH,QAAEkN,EAAF,cAAWlI,GAAkBxC,KAAKqC,MACxC,OACI,kBAAC,IAAD,CAAMhH,WAAS,EAACe,QAAS,EAAG0B,UAAWF,EAAQyI,gBAC3C,kBAAC,IAAD,CAAM3K,MAAI,EAAC0D,IAAE,EAACxD,cAAY,GACtB,yBAAKkC,UAAWF,EAAQyN,mBACpB,kBAACjG,EAAA,EAAD,CACIvE,GAAG,8BACHwE,WAAS,EACTC,WAAS,EACTxH,UAAWF,EAAQ2H,UACnB5J,OAAO,SACP6J,YAAa5B,EAAKmB,cAAc,CAC5BjE,eAAgB,kBAChBD,GAAI,wDAER4E,WAAY,CAAEC,UAAWvK,EAAMwK,OAAOC,kBACtC9L,MAAO4Q,EACPxF,SAAUlF,KAAKyC,YACfnB,QAAQ,aAEZ,kBAACuE,EAAA,EAAD,CAAY/H,UAAWF,EAAQ8M,QAAS5E,MAAM,QACzCtD,EAAgB,IAAMrH,EAAMwK,OAAOC,mBAG5C,kBAAC,IAAD,CAAMvK,WAAS,EAACe,QAAS,GACrB,kBAAC,IAAD,CAAMV,MAAI,GACN,kBAACwF,EAAA,EAAD,CACII,QAAQ,YACRD,MAAM,UACNiK,SAA4B,IAAlB9I,EACVrB,QAAS,IAAMnB,KAAK+K,wBACpBjN,UAAWF,EAAQ2N,kBAEnB,kBAAC,IAAD,CACI1K,GAAG,mDACHC,eAAe,kBAI1BsK,GACG,kBAAC,IAAD,CAAM1P,MAAI,GACN,kBAACwF,EAAA,EAAD,CAAQC,QAAS,IAAMnB,KAAK6C,oBAAqB/E,UAAWF,EAAQmI,QAChE,kBAAC,IAAD,CACIlF,GAAG,8CACHC,eAAe,iBAYvDgK,EAAWxC,aAAe,CACtB5E,gBAAiB,KACjB8H,gBAAiB,KACjBnI,eAAgB,MAGpByH,EAAWvJ,UAAY,CACnB3D,QAAS4D,IAAUwE,WAAWrM,QAAQ+H,WACtC0J,aAAc5J,IAAUI,KAAKF,WAC7BiC,MAAOnC,IAAUC,OAAOC,WACxBgC,gBAAiBlC,IAAUC,OAC3B+J,gBAAiBhK,IAAUG,KAC3B0B,eAAgB7B,IAAUG,KAC1B2B,YAAa9B,IAAUwE,WAAWC,OAAOvE,WACzCkC,KAAMpC,IAAU0E,MAAM,CAClBnB,cAAevD,IAAUG,OAC1BD,YAGQyE,kBAAWtE,YAvNX1G,IAAS,CACpByN,YAAa,CACTvH,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWjI,UAElE2Q,QAAS,CACLrJ,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWjI,UAElEsM,eAAgB,CACZlJ,SAAUhC,EAAMwK,OAAOW,iBACvBC,YAAapL,EAAMiB,QAAQ,GAC3BoK,WAAYrL,EAAMiB,QAAQqK,KAC1BL,UAAWjL,EAAMiB,QAAQ,IAE7BmJ,UAAW,CACPa,UAAW,EACXM,YAAa,EACbjL,MAAO,QAEX4P,kBAAmB,CACf9P,QAAS,OACTQ,WAAY,OAEhBwP,iBAAkB,CACd,8BAA+B,CAC3BlK,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQ0G,QAAQC,UA+L1B,CAAE9B,WAAW,GAAhC9E,CAAwCiJ,I,UCzJlE,MAAMW,UAAiBxN,YAQnBkE,YAAY3E,GACR4E,MAAM5E,GACNwC,KAAKqC,MAAQ,CACTqJ,UAAU,EACVpI,YAAa,KACbuG,SAAU,GACV8B,cAAe,EACfC,uBAAwB,GAE5B5L,KAAK6L,kBAAoB7L,KAAK6L,kBAAkBnJ,KAAK1C,MACrDA,KAAK8L,kBAAoB9L,KAAK8L,kBAAkBpJ,KAAK1C,MACrDA,KAAK+L,uBAAyB/L,KAAK+L,uBAAuBrJ,KAAK1C,MAOnEgD,oBACI,IAAI,MACAW,EADA,MACOxI,EADP,MACc6Q,EADd,KACqBpI,EADrB,WAC2BkG,EAD3B,SACuCmC,GACvCjM,KAAKxC,MACLwO,IAAOrI,EAAQqI,EAAME,OAAOC,UAEhB,IAAIrI,KAGfsI,eAAezI,GACfO,KAAMC,IACH,IAAIkI,EAAclI,EAAOE,KAAKiI,KAC1BxC,IACAmC,EAASI,EAAYzR,QACjByR,EAAYzR,OAAS,IACrByR,EAAcA,EAAYnC,MAAMmC,EAAYzR,OAAS,EAAGyR,EAAYzR,UAG5EoF,KAAKkD,SAAS,CAAEI,YAAa+I,EAAaV,cAAeU,EAAYzR,SACjEyR,EAAYzR,OAASO,EAAMwK,OAAO4G,cAClCvM,KAAKkD,SAAS,CACV0I,uBAAwB,EACxB/B,SAAUwC,EAAYnC,MAAM,EAAGmC,EAAYzR,UAG/CoF,KAAKkD,SAAS,CACV0I,uBAAwBS,EAAYzR,OAASO,EAAMwK,OAAO4G,cAC1D1C,SAAUwC,EAAYnC,MAClBmC,EAAYzR,OAASO,EAAMwK,OAAO4G,cAClCF,EAAYzR,YAK3B8J,MAAOC,IACA6H,IAUhBT,yBACI,MAAM,cAAEJ,EAAF,uBAAiBC,EAAjB,YAAyCtI,GAAgBtD,KAAKqC,OAC9D,MAAElH,GAAU6E,KAAKxC,MACnBoO,EAAyBzQ,EAAMwK,OAAO4G,eAAiB,EACvDvM,KAAKkD,SAAS,CAAE0I,uBAAwB,EAAG/B,SAAUvG,EAAY4G,MAAM,EAAGyB,KAE1E3L,KAAKkD,SAAS,CACV0I,uBAAwBA,EAAyBzQ,EAAMwK,OAAO4G,cAC9D1C,SAAUvG,EAAY4G,MAAM0B,EAAyBzQ,EAAMwK,OAAO4G,cAAeZ,KAS7FG,oBACI,MAAM,SAAEJ,GAAa1L,KAAKqC,MAC1BrC,KAAKkD,SAAS,CAAEwI,UAAWA,IAQ/BG,kBAAkBhC,GACd,MAAM,uBAAE+B,EAAF,cAA0BD,GAAkB3L,KAAKqC,OACjD,MAAElH,GAAU6E,KAAKxC,MACvB,IAAIiP,EACAC,EACAC,EACJ3M,KAAKkD,SAAS,CAAEI,YAAauG,IACzB8B,EAAgBxQ,EAAMwK,OAAO4G,eAC7BI,EAAW9C,EAASjP,OACpBoF,KAAKkD,SAAS,CAAE0I,uBAAwB,EAAGD,cAAegB,EAAU9C,cAC7D8B,GAAiB9B,EAASjP,QAEjC6R,EAAWb,GADXc,EAAa7C,EAASjP,OAAS+Q,GAE/BgB,EAAW9C,EAASjP,OACpBoF,KAAKkD,SAAS,CACV0I,uBAAwBa,EACxBd,cAAegB,EACf9C,SAAUA,EAASK,MAAMuC,EAAUE,OAGvCD,EAAaf,EAAgB9B,EAASjP,OAElC6R,EAD2B,IAA3Bb,EACWA,EAEAA,EAAyBc,EAExCC,EAAW9C,EAASjP,OACpBoF,KAAKkD,SAAS,CACV0I,uBAAwBa,EACxBd,cAAegB,EACf9C,SAAUA,EAASK,MAAMuC,EAAUE,MAW/CC,cAAcC,EAAaC,GACvB,IAAIC,EAAe,KACfC,EAAqB,KACzB,MAAMC,EAAeH,EAAYrN,KAEjC,GAAIoN,EAAYK,SAAS,KAAM,CAC3B,MAAMC,EAAcN,EAAYO,MAAM,KACtCL,EAAeI,EAAYA,EAAYvS,OAAS,QAEhDmS,EAAe,eAGnB,GAAIE,EAAaC,SAAS,KAAM,CAC5B,MAAMG,EAAoBJ,EAAaG,MAAM,KAC7CJ,EAAqBK,EAAkBA,EAAkBzS,OAAS,QAElEoS,EAAqB,eAGzB,OAAID,IAAiBC,EAYzB7M,SACI,MAAM,QAAEvC,EAAF,WAAW0P,EAAX,WAAuBxD,GAAe9J,KAAKxC,OAC3C,SACFqM,EADE,SACQ6B,EADR,YACkBpI,EADlB,uBAC+BsI,EAD/B,cACuDD,EADvD,eACsEtI,GACxErD,KAAKqC,MACT,OACI,kBAACkL,EAAA,EAAWC,SAAZ,KACM,IAAD,IAAC,IAAEC,GAAH,SACG,yBACI3P,UAAWkM,IACP,CAAE,CAACpM,EAAQyI,iBAAkByD,GAC7B,CAAE,CAAClM,EAAQyM,wBAAyBP,MAGtCwD,GACE,yBAAKxP,UAAWF,EAAQxC,MACpB,kBAACyK,EAAA,EAAD,CAAYvE,QAAQ,KAAKxD,UAAWF,EAAQ8P,UACxC,kBAAC,IAAD,CAAkB7M,GAAG,8BAA8BC,eAAe,gBAI5EwM,GAAczF,IAAYC,YAC3B9H,KAAK4M,cAAca,EAAIE,SAAU9F,IAAYC,YAC1C,kBAACiC,EAAA,EAAD,CAAOjM,UAAWF,EAAQqE,OACtB,kBAAC,EAAD,CACI0B,MAAO8J,EAAI5M,GACXwC,eAAgBrD,KAAK6L,kBACrBvI,YAAaA,EACbI,gBAAiB,KACjB0H,cAAY,MAItB9H,GACE,kBAACyG,EAAA,EAAD,CAAOjM,UAAWF,EAAQgQ,eACtB,kBAACC,EAAA,EAAD,CAAkB/Q,KAAM,MAG/BwG,GAAiC,IAAlBqI,IAAwB7B,GACpC,yBAAKhM,UAAWF,EAAQkQ,uBACpB,kBAACC,EAAA,EAAD,CAAeC,KAAK,OAAOlQ,UAAWF,EAAQqQ,iBAC1C,kBAACpI,EAAA,EAAD,CAAYvE,QAAQ,KAAKtD,UAAU,MAC/B,kBAAC,IAAD,CACI6C,GAAG,oCACHC,eAAe,qBAGvB,kBAAC+E,EAAA,EAAD,CAAY7H,UAAU,KAClB,kBAAC,IAAD,CACI6C,GAAG,4CACHC,eAAe,8CAMnC,kBAAC,EAAD,CACI+I,SAAUA,EACVlG,MAAO8J,EAAI5M,GACXwC,eAAgBrD,KAAK6L,kBACrBvI,YAAaA,EACbwG,WAAYA,IAEY,IAA3B8B,GACG,yBAAK9N,UAAWF,EAAQyI,gBACpB,kBAAC,IAAD,CAAMhL,WAAS,EAACe,QAAS,EAAG0B,UAAWF,EAAQxC,MAC3C,kBAAC,IAAD,CAAMM,MAAI,GACN,kBAACmK,EAAA,EAAD,CAAY/H,UAAWF,EAAQgK,cAAetG,QAAQ,SAClD,uBACIxD,UAAWF,EAAQoK,KAAO,IAAMpK,EAAQsQ,aACxC/M,QAASnB,KAAK+L,wBAEd,kBAAC,IAAD,CACIlL,GAAG,+CACHC,eAAe,8BAK/B,kBAAC,IAAD,KACI,kBAAC0J,EAAA,EAAD,CACIrJ,QAASnB,KAAK+L,uBACdjO,UAAWF,EAAQoK,KAAO,IAAMpK,EAAQgK,eAF5C,oBAOJ,kBAAC,IAAD,CAAMlM,MAAI,GACN,kBAACmK,EAAA,EAAD,CAAY/H,UAAWF,EAAQgK,cAAetG,QAAQ,SAClD,kBAAC,IAAD,CACIT,GAAG,yCACHC,eAAe,sBAGlB6K,EAAgBC,EAAyB,OAASD,U,YAxQzFF,E,kBACmB8B,I,6FAoRzB9B,EAASlK,UAAY,CACjB3D,QAAS4D,IAAUwE,WAAWrM,QAAQ+H,YAG3ByE,sBAAWtE,YAlVX1G,IAAS,CACpBC,KAAM,CACFG,QAAS,OACTQ,WAAY,SACZyK,WAAYrL,EAAMiB,QAAQ,GAC1BwO,cAAezP,EAAMiB,QAAQ,IAEjC6F,MAAO,CACHyE,YAAavL,EAAMiB,QAAQ,GAC3BwO,cAAezP,EAAMiB,QAAQ,GAC7B+R,aAAchT,EAAMiB,QAAQ,GAC5B,oDAAqD,CACjDiF,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWC,SAGtEoE,eAAgB,CACZE,YAAapL,EAAMiB,QAAQ,GAC3BgK,UAAWjL,EAAMiB,QAAQ,GACzB,oDAAqD,CACjDiF,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWC,SAGtEoI,uBAAwB,CACpB/N,QAAS,EACTb,MAAO,OACPoP,UAAW,QAEf6C,SAAU,CACNhF,OAAQ,UACRrH,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWjI,UAElEiO,KAAM,CACF3G,MAAOlG,EAAM2G,QAAQC,gBAAgB5G,EAAM2G,QAAQE,WAAWjI,SAC9D2O,OAAQ,WAEZd,cAAe,CACXxB,UAAWjL,EAAMiB,QAAQ,KAE7B8R,aAAc,CACVE,eAAgB,aAEpBN,sBAAuB,CACnB1H,UAAWjL,EAAMiB,QAAQ,GACzBiS,aAAclT,EAAMiB,QAAQ,GAC5BsK,YAAavL,EAAMiB,QAAQ,IAE/BwR,cAAe,CACXtR,QAASnB,EAAMiB,QAAQ,GACvBgK,UAAWjL,EAAMiB,QAAQ,MAkSY,CAAEuK,WAAW,GAAhC9E,CAAwC4J","file":"APIComments.9a25fb5b17bd84008018.bundle.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _requirePropFactory = _interopRequireDefault(require(\"../utils/requirePropFactory\"));\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    (0, _extends2.default)(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nvar styles = function styles(theme) {\n  return (0, _extends2.default)({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\n\nexports.styles = styles;\n\nvar Grid = _react.default.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = (0, _objectWithoutProperties2.default)(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n  var className = (0, _clsx.default)(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return _react.default.createElement(Component, (0, _extends2.default)({\n    className: className,\n    ref: ref\n  }, other));\n});\n\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: _propTypes.default.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: _propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes.default.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: _propTypes.default.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: _propTypes.default.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: _propTypes.default.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: _propTypes.default.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: _propTypes.default.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: _propTypes.default.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: _propTypes.default.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: _propTypes.default.bool\n} : void 0;\nvar StyledGrid = (0, _withStyles.default)(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = (0, _requirePropFactory.default)('Grid');\n  StyledGrid.propTypes = (0, _extends2.default)({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nvar _default = StyledGrid;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction requirePropFactory(componentNameInError) {\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The prop `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}\n\nvar _default = requirePropFactory;\nexports.default = _default;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport {\n    Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    dialogWrapper: {\n        '& span, & h5, & label, & td, & li, & div, & p': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n});\n\n/**\n * React component for handling confirmation dialog box\n * @class ConfirmDialog\n * @extends {React.Component}\n */\nclass ConfirmDialog extends React.Component {\n    /**\n     * If user confirms the action invoke the callback with true else false\n     * @param {String} action One of ConfirmDialog.Action actions\n     * @memberof ConfirmDialog\n     */\n    handleRequestClose(action) {\n        const { callback } = this.props;\n        if (action === ConfirmDialog.Action.OK) {\n            callback(true);\n        } else {\n            callback(false);\n        }\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Confirmation box\n     * @memberof ConfirmDialog\n     */\n    render() {\n        const {\n            title, message, labelCancel, labelOk, open, classes,\n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={this.handleRequestClose} className={classes.dialogWrapper}>\n                <DialogTitle>{title || <FormattedMessage id='Shared.ConfirmDialog.please.confirm' defaultMessage='Please Confirm' />}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{message || <FormattedMessage id='Shared.ConfirmDialog.please.confirm.sure' defaultMessage='Are you sure?' />}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.handleRequestClose(ConfirmDialog.Action.CANCEL)} color='primary'>\n                        {labelCancel || <FormattedMessage id='Shared.ConfirmDialog.cancel' defaultMessage='Cancel' />}\n                    </Button>\n                    <Button onClick={() => this.handleRequestClose(ConfirmDialog.Action.OK)} color='primary' variant='contained'>\n                        {labelOk || <FormattedMessage id='Shared.ConfirmDialog.ok' defaultMessage='OK' />}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nConfirmDialog.propTypes = {\n    title: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    labelCancel: PropTypes.string.isRequired,\n    labelOk: PropTypes.string.isRequired,\n    callback: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n};\nConfirmDialog.Action = {\n    OK: 'ok',\n    CANCEL: 'cancel',\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl, } from 'react-intl';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '../../../Shared/Alert';\nimport API from '../../../../data/api';\n\nconst styles = theme => ({\n    textField: {\n        marginTop: 0,\n        width: '87.5%',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n        marginTop: theme.spacing(2),\n    },\n    category: {\n        width: '12%',\n        marginRight: '0.5%',\n    },\n});\n\n/**\n * Display a component to edit a comment\n * @class CommmentEdit\n * @extends {React.Component}\n */\nclass CommentEdit extends React.Component {\n    /**\n     * Creates an instance of CommentEdit\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentEdit\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentText: '',\n            category: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.handleClickUpdateComment = this.handleClickUpdateComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.filterCommentToUpdate = this.filterCommentToUpdate.bind(this);\n        this.filterCommentToUpdateReply = this.filterCommentToUpdateReply.bind(this);\n    }\n\n    /**\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { comment } = this.props;\n        this.setState({\n            commentText: comment.commentText,\n            category: comment.category,\n            currentLength: comment.commentText.length,\n        });\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentEdit\n     */\n    inputChange({ target }) {\n        this.setState({ commentText: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to edit a comment when cancelled\n     * @memberof CommentEdit\n     */\n    handleClickCancel() {\n        const { toggleShowEdit, commentsUpdate, allComments } = this.props;\n        toggleShowEdit();\n        commentsUpdate(allComments);\n    }\n\n    /**\n     * Handles category when the category is changed\n     * @param {any} event Drop down select event\n     * @memberof CommentEdit\n     */\n    handleCategoryChange(event) {\n        this.setState({ category: event.target.value });\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdate(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.commentId;\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdateReply(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.parentCommentId;\n    }\n\n    /**\n     * Handles updating a comment\n     * @memberof CommentEdit\n     */\n    handleClickUpdateComment() {\n        const {\n            apiId, comment, allComments, toggleShowEdit, commentsUpdate, intl,\n        } = this.props;\n        const { category, commentText } = this.state;\n        const Api = new API();\n        const commentToEdit = comment;\n        commentToEdit.commentText = commentText.trim();\n        commentToEdit.category = category;\n\n        // to check whether a string does not contain only whitehis spaces\n        if (comment.commentText.replace(/\\s/g, '').length) {\n            Api.updateComment(apiId, commentToEdit.commentId, commentToEdit)\n                .then((result) => {\n                    const updatedComment = result.body;\n                    if (commentToEdit.parentCommentId === undefined) {\n                        const index = allComments.findIndex(this.filterCommentToUpdate);\n                        allComments[index].category = updatedComment.category;\n                        allComments[index].commentText = updatedComment.commentText;\n                    } else {\n                        const index = allComments.findIndex(this.filterCommentToUpdateReply);\n                        const replyIndex = allComments[index].replies.findIndex(this.filterCommentToUpdate);\n                        allComments[index].replies[replyIndex] = updatedComment;\n                    }\n                    toggleShowEdit();\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error(\n                            intl.formatMessage({\n                                defaultMessage: 'Something went wrong while adding the comment',\n                                id: 'Apis.Details.Comments.CommentEdit.something.went.wrong',\n                            }),\n                        );\n                    }\n                });\n        } else {\n            Alert.error(\n                intl.formatMessage({\n                    defaultMessage: 'You cannot enter a blank comment',\n                    id: 'Apis.Details.Comments.CommentEdit.blank.comment.error',\n                }),\n            );\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentEdit\n     */\n    render() {\n        const { classes, theme, intl } = this.props;\n        const { category, commentText, currentLength } = this.state;\n        return (\n            <div>\n                <FormControl className={classes.category}>\n                    <Select value={category} onChange={this.handleCategoryChange}>\n                        <MenuItem value='General'>\n                            <FormattedMessage id='Apis.Details.Comments.CommentEdit.general' defaultMessage='General' />\n                        </MenuItem>\n                        <MenuItem value='Feature Request'>\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentEdit.feature.request'\n                                defaultMessage='Feature Request'\n                            />\n                        </MenuItem>\n                        <MenuItem value='Bug Report'>\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentEdit.bug.report'\n                                defaultMessage='Bug Report'\n                            />\n                        </MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id='multiline-static'\n                    autoFocus\n                    multiline\n                    className={classes.textField}\n                    margin='normal'\n                    placeholder={intl.formatMessage({\n                        defaultMessage: 'Write a comment',\n                        id: 'Apis.Details.Comments.CommentEdit.write.a.comment',\n                    })}\n                    inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                    value={commentText}\n                    onChange={this.inputChange}\n                />\n                <Typography className={classes.commentText} align='right'>\n                    {currentLength + '/' + theme.custom.maxCommentLength}\n                </Typography>\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <Button variant='contained' color='primary' onClick={() => this.handleClickUpdateComment()}>\n                            <FormattedMessage id='Apis.Details.Comments.CommentEdit.btn.save' defaultMessage='Save' />\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={() => this.handleClickCancel()} className={classes.button}>\n                            <FormattedMessage\n                                id='Apis.Details.Comments.CommentEdit.btn.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nCommentEdit.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    apiId: PropTypes.string.isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    toggleShowEdit: PropTypes.func.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(CommentEdit));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport VerticalDivider from '../../../Shared/VerticalDivider';\nimport AuthManager from '../../../../data/AuthManager';\n\nconst styles = theme => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        '& span.MuiButton-label span': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n        cursor: 'pointer',\n    },\n    time: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing(0.3),\n    },\n    verticalSpace: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n    },\n    disable: {\n        color: theme.palette.grey[200],\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing(2.5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n    },\n});\n\n/**\n * Component to display options of the comment\n * @class CommentOptions\n * @extends {React.Component}\n */\nclass CommentOptions extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentOptions\n     */\n    showAddComment(index) {\n        const { editIndex, showAddComment } = this.props;\n        if (editIndex === -1) {\n            showAddComment(index);\n        }\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex, showEditComment } = this.props;\n        if (editIndex === -1) {\n            showEditComment(index);\n        }\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex, handleClickOpen } = this.props;\n        if (editIndex === -1) {\n            handleClickOpen(comment);\n        }\n    }\n\n    /**\n     * Returns the date and time in a particular format\n     * @param {any} timestamp Timestamp that has to be formatted\n     * @memberof CommentOptions\n     */\n    displayDate(timestamp) {\n        const localDate = new Date(timestamp);\n        const localDateString = localDate.toLocaleDateString(undefined, {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n        });\n        const localTimeString = localDate.toLocaleTimeString(undefined, {\n            hour: '2-digit',\n            minute: '2-digit',\n        });\n        return localDateString + ' ' + localTimeString;\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentOptions\n     */\n    render() {\n        const {\n            classes, comment, editIndex, index, theme,\n        } = this.props;\n        return (\n            <Grid container spacing={1} className={classes.verticalSpace} key={comment.id}>\n                {/* only the comment owner or admin can delete a comment */}\n                {AuthManager.getUser() && (comment.createdBy === AuthManager.getUser().name) && [\n                        <Grid item key='key-delete'>\n                            <Button\n                                variant=\"outlined\" size=\"small\"\n                                className={editIndex === -1 ? classes.link : classes.disable}\n                                onClick={() => this.handleClickOpen(comment)}\n                                variant='contained'\n                                color='primary'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Comments.CommentOptions.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </Button>\n                        </Grid>,\n                        <Grid item key='key-delete-vertical-divider'>\n                            <VerticalDivider height={15} />\n                        </Grid>,\n                    ]}\n\n                {/* {AuthManager.getUser() && comment.parentCommentId == null && [\n                    <Grid item key='key-reply'>\n                        <Typography\n                            component='a'\n                            className={editIndex === -1 ? classes.link : classes.disable}\n                            onClick={() => this.showAddComment(index)}\n                        >\n                            <FormattedMessage id='Apis.Details.Comments.CommentOptions.reply' defaultMessage='Reply' />\n                        </Typography>\n                    </Grid>,\n                    <Grid item key='key-reply-vertical-divider'>\n                        <VerticalDivider height={15} />\n                    </Grid>,\n                ]} */}\n\n                {/* only the comment owner can modify the comment from the exact entry point */}\n                {/* {comment.createdBy === AuthManager.getUser().name\n                    && comment.entryPoint === 'APIStore' && [\n                        <Grid item key='key-edit'>\n                            <Typography\n                                component='a'\n                                className={editIndex === -1 ? classes.link : classes.disable}\n                                onClick={() => this.showEditComment(index)}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Comments.CommentOptions.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Typography>\n                        </Grid>,\n                        <Grid item key='key-edit-verical-divider'>\n                            <VerticalDivider height={15} />\n                        </Grid>,\n                    ]} */}\n                <Grid item className={classes.time}>\n                    <Typography component='a' variant='caption'>\n                        {this.displayDate(comment.createdTime)}\n                    </Typography>\n                </Grid>\n                {/* {editIndex === index\n                    ? null\n                    : [\n                        <Grid item key='key-category-vertical-divider'>\n                            <VerticalDivider height={15} />\n                        </Grid>,\n                        <Grid item className={classes.time} key='key-category'>\n                            <Typography component='a' variant='caption'>\n                                {comment.category}\n                            </Typography>\n                        </Grid>,\n                    ]}  */}\n            </Grid>\n        );\n    }\n}\n\nCommentOptions.defaultProps = {\n    showAddComment: null,\n};\n\nCommentOptions.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    editIndex: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    handleClickOpen: PropTypes.func.isRequired,\n    showEditComment: PropTypes.func.isRequired,\n    showAddComment: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentOptions);\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport { injectIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport API from 'AppData/api';\nimport CommentEdit from './CommentEdit';\nimport CommentOptions from './CommentOptions';\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: 0,\n        width: '99%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n        wordBreak: 'break-all',\n    },\n    root: {\n        marginTop: theme.spacing(1),\n    },\n    contentWrapper: {\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n    },\n    contentWrapperOverview: {\n        background: 'transparent',\n        width: '100%',\n    },\n    divider: {\n        marginTop: theme.spacing(1),\n    },\n    paper: {\n        margin: 0,\n        marginTop: theme.spacing(1 ),\n        marginRight: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n    },\n    cleanBack: {\n        background: 'transparent',\n        width: '100%',\n        boxShadow: 'none',\n    },\n});\n\n/**\n * Display a particular comment and details\n * @class Comment\n * @extends {React.Component}\n */\nclass Comment extends React.Component {\n    /**\n     * Creates an instance of Comment\n     * @param {*} props properies passed by the parent element\n     * @memberof Comment\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            replyIndex: -1,\n            editIndex: -1,\n            deleteComment: null,\n        };\n        this.handleClickDeleteComment = this.handleClickDeleteComment.bind(this);\n        this.handleShowEdit = this.handleShowEdit.bind(this);\n        this.handleShowReply = this.handleShowReply.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleConfirmDialog = this.handleConfirmDialog.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.filterRemainingComments = this.filterRemainingComments.bind(this);\n        this.filterCommentToDelete = this.filterCommentToDelete.bind(this);\n    }\n\n    /**\n     * Add two numbers.\n     * @param {string} commentToFilter comment to filter.\n     * @returns {boolean} filtering needed or not.\n     */\n    filterRemainingComments(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.id !== deleteComment.id;\n    }\n\n    /**\n     * Add two numbers.\n     * @param {JSON} commentToFilter comment to filter.\n     * @returns {string} id of the comment.\n     */\n    filterCommentToDelete(commentToFilter) {\n        // const { deleteComment } = this.state;\n        // return commentToFilter.id === deleteComment.parentCommentId;\n        return commentToFilter.id;\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showAddComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ replyIndex: index });\n        }\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ editIndex: index });\n        }\n    }\n\n    /**\n     * Hides the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowEdit() {\n        this.setState({ editIndex: -1 });\n    }\n\n    /**\n     * Hides the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowReply() {\n        this.setState({ replyIndex: -1 });\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ deleteComment: comment, openDialog: true });\n        }\n    }\n\n    /**\n     * Hides the confimation dialog to delete a comment\n     * @memberof Comment\n     */\n    handleClose() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the Confirm Dialog\n     * @param {*} message properies passed by the Confirm Dialog\n     * @memberof Comment\n     */\n    handleConfirmDialog(message) {\n        if (message) {\n            this.handleClickDeleteComment();\n        } else {\n            this.handleClose();\n        }\n    }\n\n    /**\n     * Handles deleting a comment\n     * @memberof Comment\n     */\n    handleClickDeleteComment() {\n        const apiClient = new API();\n\n        const { deleteComment } = this.state;\n        const {\n            apiId, allComments, commentsUpdate, intl,\n        } = this.props;\n        const commentIdOfCommentToDelete = deleteComment.id;\n        // const parentCommentIdOfCommentToDelete = deleteComment.parentCommentId;\n        this.handleClose();\n\n        apiClient\n            .deleteComment(apiId, commentIdOfCommentToDelete)\n            .then(() => {\n                // if (parentCommentIdOfCommentToDelete === undefined) {\n                const remainingComments = allComments.filter(this.filterRemainingComments);\n                commentsUpdate(remainingComments);\n                Alert.message('Comment' + commentIdOfCommentToDelete + 'has been successfully deleted');\n                // } else {\n                //     const index = allComments.findIndex(this.filterCommentToDelete);\n                //     const remainingReplies = allComments[index].replies.filter(this.filterRemainingComments);\n                //     allComments[index].replies = remainingReplies;\n                //     commentsUpdate(allComments);\n                // }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                }\n                // else {\n                //     Alert.error(\n                //         intl.formatMessage({\n                //             defaultMessage: 'Something went wrong while deleting comment',\n                //             id: 'Apis.Details.Comments.Comment.something.went.wrong',\n                //         })\n                //         + ' - '\n                //         + commentIdOfCommentToDelete,\n                //     );\n                // }\n            });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comment\n     */\n    render() {\n        const {\n            classes, comments, apiId, allComments, commentsUpdate, isOverview,\n        } = this.props;\n\n        const { editIndex, openDialog } = this.state;\n        return (\n            <>\n                <Paper className={classNames({ [classes.paper]: !isOverview && comments.length > 0 }, { [classes.cleanBack]: isOverview })}>\n                    {comments\n                    && comments\n                        .slice(0)\n                        .reverse()\n                        .map((comment, index) => (\n                            <div\n                                // eslint-disable-next-line react/no-array-index-key\n                                key={comment.commentId + '-' + index}\n                                className={classNames(\n                                    { [classes.contentWrapper]: !isOverview },\n                                    { [classes.contentWrapperOverview]: isOverview },\n                                )}\n                            >\n                                {index !== 0 && <Divider className={classes.divider} />}\n                                <Grid container spacing={1} className={classNames({ [classes.root]: !isOverview })}>\n                                    <Grid item>\n                                        <Icon className={classes.commentIcon}>account_box</Icon>\n                                    </Grid>\n                                    <Grid item xs zeroMinWidth>\n                                        <Typography noWrap className={classes.commentText}>\n                                            {comment.createdBy}\n                                        </Typography>\n\n                                        {index !== editIndex && (\n                                            <Typography className={classes.commentText}>{comment.content}</Typography>\n                                        )}\n\n                                        {index === editIndex && (\n                                            <CommentEdit\n                                                apiId={apiId}\n                                                allComments={allComments}\n                                                commentsUpdate={commentsUpdate}\n                                                comment={comment}\n                                                toggleShowEdit={this.handleShowEdit}\n                                            />\n                                        )}\n\n                                        <CommentOptions\n                                            comment={comment}\n                                            editIndex={editIndex}\n                                            index={index}\n                                            showAddComment={this.showAddComment}\n                                            handleClickOpen={this.handleClickOpen}\n                                            showEditComment={this.showEditComment}\n                                        />\n\n                                        {/* {index === replyIndex && (\n                                        <CommentAdd\n                                            apiId={apiId}\n                                            //parentCommentId={comment.commentId}\n                                            allComments={allComments}\n                                            commentsUpdate={commentsUpdate}\n                                            cancelButton\n                                        />\n                                    )}\n                                    {comment.replies !== 0 && (\n                                        <CommentReply\n                                            classes={classes}\n                                            apiId={apiId}\n                                            comments={comment.replies}\n                                            commentsUpdate={commentsUpdate}\n                                            allComments={allComments}\n                                        />\n                                    )} */}\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        ))}\n                </Paper>\n                <ConfirmDialog\n                    key='key-dialog'\n                    labelCancel='Cancel'\n                    title='Confirm Delete'\n                    message='Are you sure you want to delete this comment?'\n                    labelOk='Yes'\n                    callback={this.handleConfirmDialog}\n                    open={openDialog}\n                />\n            </>\n        );\n    }\n}\nComment.defaultProps = {\n    isOverview: false,\n};\nComment.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    comments: PropTypes.instanceOf(Array).isRequired,\n    isOverview: PropTypes.bool,\n};\n\nexport default injectIntl(withStyles(styles)(Comment));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Alert from '../../../Shared/Alert';\nimport API from '../../../../data/api';\n\nconst styles = theme => ({\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    content: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n        marginTop: theme.spacing(2),\n    },\n    textField: {\n        marginTop: 0,\n        marginRight: 5,\n        width: '100%',\n    },\n    commentAddWrapper: {\n        display: 'flex',\n        alignItems: 'top',\n    },\n    commentAddButton: {\n        '& span.MuiButton-label span': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n});\n\n/**\n * Display a component to add a new comment\n * @class CommmentAdd\n * @extends {React.Component}\n */\nclass CommentAdd extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleClickAddComment = this.handleClickAddComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        // this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        // this.filterCommentToAddReply = this.filterCommentToAddReply.bind(this);\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentAdd\n     */\n    inputChange({ target }) {\n        this.setState({ content: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to add a new comment when cancelled\n     * @memberof CommentAdd\n     */\n    handleClickCancel() {\n        this.setState({ content: '' });\n        // const { toggleShowReply } = this.props;\n        // toggleShowReply();\n    }\n\n    // /**\n    //  * Filters the comment to add the reply\n    //  * @memberof CommentAdd\n    //  */\n    // filterCommentToAddReply(commentToFilter) {\n    //     const { parentCommentId } = this.props;\n    //     return commentToFilter.commentId === parentCommentId;\n    // }\n\n    /**\n     * Handles adding a new comment\n     * @memberof CommentAdd\n     */\n    handleClickAddComment() {\n        const {\n            apiId, allComments, commentsUpdate, intl,\n        } = this.props;\n        const { content } = this.state;\n        const Api = new API();\n        const comment = {\n            content: content.trim(),\n        };\n\n        // to check whether a string does not contain only white spaces\n        if (comment.content.replace(/\\s/g, '').length) {\n            Api.addComment(apiId, comment)\n                .then((newComment) => {\n                    this.setState({ content: '' });\n                    const addedComment = newComment.body;\n                    // if (parentCommentId === null) {\n                    //     allComments.push(addedComment);\n                    // } else {\n                    //     const index = allComments.findIndex(this.filterCommentToAddReply);\n                    //     allComments[index].replies.push(addedComment);\n                    //     toggleShowReply();\n                    // }\n                    allComments.push(addedComment);\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response && error.response.body && error.response.body.message) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            defaultMessage: 'Something went wrong while adding the comment',\n                            id: 'Apis.Details.Comments.CommentAdd.something.went.wrong',\n                        }));\n                    }\n                });\n        } else {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'You cannot enter a blank comment',\n                id: 'Apis.Details.Comments.CommentAdd.error.blank.comment',\n            }));\n        }\n        this.setState({ currentLength: 0 });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentAdd\n     */\n    render() {\n        const {\n            classes, cancelButton, theme, intl,\n        } = this.props;\n        const { content, currentLength } = this.state;\n        return (\n            <Grid container spacing={3} className={classes.contentWrapper}>\n                <Grid item xs zeroMinWidth>\n                    <div className={classes.commentAddWrapper}>\n                        <TextField\n                            id='standard-multiline-flexible'\n                            autoFocus\n                            multiline\n                            className={classes.textField}\n                            margin='normal'\n                            placeholder={intl.formatMessage({\n                                defaultMessage: 'Write a comment',\n                                id: 'Apis.Details.Comments.CommentAdd.write.comment.help',\n                            })}\n                            inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                            value={content}\n                            onChange={this.inputChange}\n                            variant='outlined'\n                        />\n                        <Typography className={classes.content} align='left'>\n                            {currentLength + '/' + theme.custom.maxCommentLength}\n                        </Typography>\n                    </div>\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={currentLength === 0}\n                                onClick={() => this.handleClickAddComment()}\n                                className={classes.commentAddButton}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Comments.CommentAdd.btn.add.comment'\n                                    defaultMessage='Add Comment'\n                                />\n                            </Button>\n                        </Grid>\n                        {cancelButton && (\n                            <Grid item>\n                                <Button onClick={() => this.handleClickCancel()} className={classes.button}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Comments.CommentAdd.btn.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCommentAdd.defaultProps = {\n    parentCommentId: null,\n    toggleShowReply: null,\n    commentsUpdate: null,\n};\n\nCommentAdd.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    cancelButton: PropTypes.bool.isRequired,\n    apiId: PropTypes.string.isRequired,\n    parentCommentId: PropTypes.string,\n    toggleShowReply: PropTypes.func,\n    commentsUpdate: PropTypes.func,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(CommentAdd));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\nimport API from '../../../../data/api';\nimport { ApiContext } from '../ApiContext';\nimport AuthManager from '../../../../data/AuthManager';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    paper: {\n        marginRight: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        paddingRight: theme.spacing(2),\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    contentWrapper: {\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(1),\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    contentWrapperOverview: {\n        padding: 0,\n        width: '100%',\n        boxShadow: 'none',\n    },\n    titleSub: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    verticalSpace: {\n        marginTop: theme.spacing(0.2),\n    },\n    loadMoreLink: {\n        textDecoration: 'underline',\n    },\n    genericMessageWrapper: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        marginRight: theme.spacing(3),\n    },\n    paperProgress: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n});\n\n/**\n * Display a comment list\n * @class Comments\n * @extends {React.Component}\n */\nclass Comments extends Component {\n    static contextType = ApiContext;\n\n    /**\n     * Creates an instance of Comments\n     * @param {*} props properies passed by the parent element\n     * @memberof Comments\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            allComments: null,\n            comments: [],\n            totalComments: 0,\n            startCommentsToDisplay: 0,\n        };\n        this.updateCommentList = this.updateCommentList.bind(this);\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.handleLoadMoreComments = this.handleLoadMoreComments.bind(this);\n    }\n\n    /**\n     * Gets all the comments for a particular API, when component mounts\n     * @memberof Comments\n     */\n    componentDidMount() {\n        let {\n            apiId, theme, match, intl, isOverview, setCount,\n        } = this.props;\n        if (match) apiId = match.params.apiUuid;\n\n        const restApi = new API();\n\n        restApi\n            .getAllComments(apiId)\n            .then((result) => {\n                let commentList = result.body.list;\n                if (isOverview) {\n                    setCount(commentList.length);\n                    if (commentList.length > 2) {\n                        commentList = commentList.slice(commentList.length - 3, commentList.length);\n                    }\n                }\n                this.setState({ allComments: commentList, totalComments: commentList.length });\n                if (commentList.length < theme.custom.commentsLimit) {\n                    this.setState({\n                        startCommentsToDisplay: 0,\n                        comments: commentList.slice(0, commentList.length),\n                    });\n                } else {\n                    this.setState({\n                        startCommentsToDisplay: commentList.length - theme.custom.commentsLimit,\n                        comments: commentList.slice(\n                            commentList.length - theme.custom.commentsLimit,\n                            commentList.length,\n                        ),\n                    });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     * Handles loading the previous comments\n     * @memberof Comments\n     */\n    handleLoadMoreComments() {\n        const { totalComments, startCommentsToDisplay, allComments } = this.state;\n        const { theme } = this.props;\n        if (startCommentsToDisplay - theme.custom.commentsLimit <= 0) {\n            this.setState({ startCommentsToDisplay: 0, comments: allComments.slice(0, totalComments) });\n        } else {\n            this.setState({\n                startCommentsToDisplay: startCommentsToDisplay - theme.custom.commentsLimit,\n                comments: allComments.slice(startCommentsToDisplay - theme.custom.commentsLimit, totalComments),\n            });\n        }\n    }\n\n    /**\n     * Handles expanding the comment section\n     * @memberof Comments\n     */\n    handleExpandClick() {\n        const { expanded } = this.state;\n        this.setState({ expanded: !expanded });\n    }\n\n    /**\n     * Updates the comment list, This is passed through props to child component\n     * @param {any} comments Updated comment list\n     * @memberof Comments\n     */\n    updateCommentList(comments) {\n        const { startCommentsToDisplay, totalComments } = this.state;\n        const { theme } = this.props;\n        let newStart;\n        let difference;\n        let newTotal;\n        this.setState({ allComments: comments });\n        if (totalComments < theme.custom.commentsLimit) {\n            newTotal = comments.length;\n            this.setState({ startCommentsToDisplay: 0, totalComments: newTotal, comments });\n        } else if (totalComments <= comments.length) {\n            difference = comments.length - totalComments;\n            newStart = startCommentsToDisplay + difference;\n            newTotal = comments.length;\n            this.setState({\n                startCommentsToDisplay: newStart,\n                totalComments: newTotal,\n                comments: comments.slice(newStart, newTotal),\n            });\n        } else {\n            difference = totalComments - comments.length;\n            if (startCommentsToDisplay === 0) {\n                newStart = startCommentsToDisplay;\n            } else {\n                newStart = startCommentsToDisplay - difference;\n            }\n            newTotal = comments.length;\n            this.setState({\n                startCommentsToDisplay: newStart,\n                totalComments: newTotal,\n                comments: comments.slice(newStart, newTotal),\n            });\n        }\n    }\n\n    /**\n     * Method to compare the tenant domains\n     * @param {*} advertiseInfo advertiseInfo object for the API\n     * @param {*} currentUser current logged in user\n     * @returns {boolean} true or false\n     */\n    isCrossTenant(apiProvider, currentUser) {\n        let tenantDomain = null;\n        let loggedInUserDomain = null;\n        const loggedInUser = currentUser.name;\n\n        if (apiProvider.includes('@')) {\n            const splitDomain = apiProvider.split('@');\n            tenantDomain = splitDomain[splitDomain.length - 1];\n        } else {\n            tenantDomain = 'carbon.super';\n        }\n\n        if (loggedInUser.includes('@')) {\n            const splitLoggedInUser = loggedInUser.split('@');\n            loggedInUserDomain = splitLoggedInUser[splitLoggedInUser.length - 1];\n        } else {\n            loggedInUserDomain = 'carbon.super';\n        }\n\n        if (tenantDomain !== loggedInUserDomain) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comments\n     */\n    render() {\n        const { classes, showLatest, isOverview } = this.props;\n        const {\n            comments, expanded, allComments, startCommentsToDisplay, totalComments, commentsUpdate,\n        } = this.state;\n        return (\n            <ApiContext.Consumer>\n                {({ api }) => (\n                    <div\n                        className={classNames(\n                            { [classes.contentWrapper]: !isOverview },\n                            { [classes.contentWrapperOverview]: isOverview },\n                        )}\n                    >\n                        {!showLatest && (\n                            <div className={classes.root}>\n                                <Typography variant='h4' className={classes.titleSub}>\n                                    <FormattedMessage id='Apis.Details.Comments.title' defaultMessage='Comments' />\n                                </Typography>\n                            </div>\n                        )}\n                        {!showLatest && AuthManager.getUser() &&\n                        !this.isCrossTenant(api.provider, AuthManager.getUser()) && (\n                            <Paper className={classes.paper}>\n                                <CommentAdd\n                                    apiId={api.id}\n                                    commentsUpdate={this.updateCommentList}\n                                    allComments={allComments}\n                                    parentCommentId={null}\n                                    cancelButton\n                                />\n                            </Paper>\n                        )}\n                        {!allComments && (\n                            <Paper className={classes.paperProgress}>\n                                <CircularProgress size={24} />\n                            </Paper>\n                        )}\n                        {allComments && totalComments === 0 && !isOverview &&\n                            <div className={classes.genericMessageWrapper}>\n                                <InlineMessage type='info' className={classes.dialogContainer}>\n                                    <Typography variant='h5' component='h3'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Comments.no.comments'\n                                            defaultMessage='No Comments Yet'\n                                        />\n                                    </Typography>\n                                    <Typography component='p'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Comments.no.comments.content'\n                                            defaultMessage='No comments available for this API yet'\n                                        />\n                                    </Typography>\n                                </InlineMessage>\n                            </div>\n                        }\n                        <Comment\n                            comments={comments}\n                            apiId={api.id}\n                            commentsUpdate={this.updateCommentList}\n                            allComments={allComments}\n                            isOverview={isOverview}\n                        />\n                        {startCommentsToDisplay !== 0 && (\n                            <div className={classes.contentWrapper}>\n                                <Grid container spacing={4} className={classes.root}>\n                                    <Grid item>\n                                        <Typography className={classes.verticalSpace} variant='body1'>\n                                            <a\n                                                className={classes.link + ' ' + classes.loadMoreLink}\n                                                onClick={this.handleLoadMoreComments}\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Details.Comments.load.previous.comments'\n                                                    defaultMessage='Load Previous Comments'\n                                                />\n                                            </a>\n                                        </Typography>\n                                    </Grid>\n                                    <Grid>\n                                        <Icon\n                                            onClick={this.handleLoadMoreComments}\n                                            className={classes.link + ' ' + classes.verticalSpace}\n                                        >\n                                            arrow_drop_down\n                                        </Icon>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography className={classes.verticalSpace} variant='body1'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Comments.showing.comments'\n                                                defaultMessage='Showing comments '\n                                            />\n\n                                            {totalComments - startCommentsToDisplay + ' of ' + totalComments}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </ApiContext.Consumer>\n        );\n    }\n}\n\nComments.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Comments));\n"],"sourceRoot":""}