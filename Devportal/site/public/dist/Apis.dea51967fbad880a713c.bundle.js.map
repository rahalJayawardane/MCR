{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/ApiContext.jsx","webpack:///./source/src/app/components/Apis/Listing/StarRatingBar.jsx","webpack:///./source/src/app/components/Apis/Listing/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/ImageGenerator.jsx","webpack:///./source/src/app/components/Apis/Details/StarRatingSummary.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack:///./source/src/app/components/Shared/withSettingsContext.jsx","webpack:///./source/src/app/components/Apis/Listing/DocThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack:///./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack:///./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack:///./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack:///./source/src/app/components/Apis/Details/Social/EmbadCode.jsx","webpack:///./source/src/app/components/Apis/Details/Social/Social.jsx","webpack:///./source/src/app/components/Apis/Details/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/Labels.jsx","webpack:///./source/src/app/components/Apis/Details/InfoBar.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx"],"names":["ApiContext","React","createContext","active","handleMenuSelect","api","applications","subscribedApplications","applicationsAvailable","updateSubscriptionData","StarRatingBar","Component","constructor","props","super","this","state","avgRating","userRating","count","total","getApiRating","bind","removeUserRating","doRate","componentDidUpdate","prevProps","ratingUpdate","componentDidMount","apiId","setRatingUpdate","user","AuthManager","getUser","Api","getRatingFromUser","then","response","setState","body","pagination","rateIndex","ratingInfo","rating","addRating","catch","error","Alert","removeRatingOfUser","render","classes","isEditable","showSummary","apiRating","apiRatingNumber","parseFloat","Fragment","reviewCount","returnCount","className","map","i","key","starRate","noStarRate","onClick","removeRating","name","value","precision","readOnly","iconEmpty","iconFilled","defaultProps","propTypes","PropTypes","shape","isRequired","theme","string","bool","oneOfType","number","func","withStyles","fontSize","color","custom","infoBar","starColor","palette","grey","A200","getContrastText","thumbnail","contentBackgroundColor","background","display","justifyContent","alignItems","cursor","withTheme","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","colorPair","width","height","thumbnailBoxChild","rects","j","sub","toString","push","fill","fillOpacity","x","y","primeColor","prime","svgImage","objectFit","ImageGenerator","PureComponent","fixedIcon","category","backgroundIndex","randomBackgroundIndex","IconElement","str","colorPairs","backgrounds","type","document","icon","MaterialIcons","categories","icons","length","randomIconIndex","charCodeAt","id","iconWrapper","style","Icon","position","right","ratingSummary","variant","gutterBottom","align","defaultMessage","windowURL","window","URL","webkitURL","ApiThumb","selectedIcon","imageObj","isHover","imageLoaded","toggleMouseOver","getAPIThumbnail","data","headers","iconJson","JSON","parse","size","url","createObjectURL","finally","componentWillUnmount","revokeObjectURL","getPathPrefix","event","path","isMonetizationEnabled","context","detailsLink","customWidth","customHeight","showInfo","social","showRating","version","provider","businessInformation","businessOwner","trim","lifeCycleStatus","status","imageWidth","imageHeight","defaultImage","defaultApiImage","ImageView","src","alt","media","iconColor","class","onMouseOver","onFocus","onMouseOut","onBlur","raised","classNames","card","textblock","monetizationLabel","to","suppressLinkStyles","app","root","apiDetails","textWrapper","thumbHeader","handleRedirectToAPIOverview","title","row","thumbBy","thumbInfo","thumbLeft","thumbRight","contextBox","thumbLeftAction","ratingWrapper","chipWrapper","transportType","label","undefined","apiType","contextType","margin","spacing","maxWidth","transition","padding","contentPictureOverlap","top","textDecoration","text","disabled","thumbContent","alignSelf","flex","flexDirection","whiteSpace","overflow","textOverflow","parseInt","lineHeight","textAlign","marginTop","thumbWrapper","paddingTop","marginRight","deleteIcon","secondary","imageWrapper","imageOverlap","bottom","ApiTagThumb","tag","mainPage","tagLink","tagWise","image","split","Typography","ListItem","button","ListItemIcon","ListItemText","primary","backgroundColor","paper","tagCloud","leftMenu","useStyles","makeStyles","mainTitle","mainTitleWrapper","flexGrow","listContentWrapper","linkTextWrapper","main","tagWiseThumbWrapper","filterTitle","fontWeight","paddingLeft","titleBackground","mainPageList","mainPageAllApis","TagCloudListingTags","useTheme","showAllApis","useHistory","allTags","apisTagCloudGroup","filter","item","List","component","aria-label","Object","keys","Divider","appBar","borderBottom","mainIconWrapper","paddingRight","content","iconDefault","TagCloudListing","setAllTags","useState","useEffect","API","getAllTags","list","console","log","strokeColorMain","strokeColor","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","throttlingPolicyList","subscriptionRequest","updateSubscriptionRequest","renderSmall","tierName","applicationId","handleChange","field","newRequest","target","throttlingPolicy","container","subscribeRoot","subscribeRootSmall","xs","md","FormControl","smallDisplay","shrink","htmlFor","quotaHelp","onChange","e","input","displayEmpty","selectEmpty","appDropDown","smallDisplayFix","FormControlOdd","policy","tierPlan","selectMenuRoot","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","index","arrayOf","titleBar","borderBottomWidth","borderBottomStyle","borderColor","marginBottom","buttonLeft","buttonRight","marginLeft","buttonsWrapper","legend","inputText","buttonRightLink","link","linkNotActive","selectedTagText","textIndent","apiGroup","ApiBreadcrumbs","selectedTag","Paper","elevation","Breadcrumbs","Link","CustomIcon","withSettings","WrappedComponent","DocThumb","loading","open","overview_link","isRedirect","openMoreMenu","doc","sourceType","apiName","apiVersion","apiUUID","details_link","minHeight","ApiTableView","gridView","themeAdditions","muiTheme","overrides","MUIDataTable","boxShadow","tableRoot","border","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","MUIDataTablePagination","default","MuiMenuItem","MUIDataTableToolbar","flexWrap","MUIDataTableBodyCell","systemTheme","merge","DefaultConfigurations","Configurations","cloneDeep","dataTableTheme","createMuiTheme","intl","xhrRequest","setTenantDomain","code","formatMessage","query","page","rowsPerPage","searchQuery","URLSearchParams","get","composeQuery","queryString","limit","offset","search","getAllAPIs","localStorage","getItem","pageType","getData","columns","options","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","artifact","rowIndex","sort","apiNameLink","rowImageOverride","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","setItem","customRowRender","dataIndex","print","download","viewColumns","customToolbar","Loading","NoApi","getMuiTheme","injectIntl","listViewIconSize","APICategoryThumb","categoryLink","CategoryListingCategories","allCategories","clickablePointer","ApiTagCloud","colorOptions","history","apisTagWithoutGroups","minSize","maxSize","tags","shuffle","tagSearchURL","handleOnClick","listType","RecommendedApiThumb","Card","CardMedia","CardContent","Chip","unit","Recommendations","assign","getApiRecommendations","rowsPerPageOptions","CommonListing","prevState","showLeftMenu","enabled","settings","monetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","showToggle","restApiClient","apiCategories","location","tagCloudActive","splits","splitTagArray","tagPaneVisible","categoryPaneVisible","LeftMenu","sliderButton","toggleLeftMenu","LeftMenuForSlider","rotatedText","contentWithoutTags","contentWithTagsHidden","contentWithTags","IconButton","setListType","iconSelected","Provider","Settings","rightIcon","ListingWrapper","contentAreaWidth","listGridSelectedColor","paddingBottom","sliderWidth","fontFamily","typography","left","overflowY","sliderBackground","transform","transformOrigin","recommendationsBar","getModalStyle","shadows","codeIcon","iconStyle","modalStyle","setOpen","codeCopied","setCodeCopied","searchParams","set","embadCode","Modal","onClose","aria-labelledby","aria-describedby","Tooltip","placement","onCopy","setTimeout","socialLink","oneFlex","socialLinkWrapper","divider","borderRight","useContext","apiUrl","encodeURI","showSharing","showFacebook","showReddit","showTwitter","showEmbad","showEmail","href","rel","Environments","that","urlCopied","apiClient","downloadWSDL","environmentName","getWsdlClient","downloadWSDLForEnvironment","done","Utils","downloadFile","process","downloadSwagger","environment","getSwaggerByAPIIdAndEnvironment","Grid","envRoot","endpointURLs","endpoint","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","iconAligner","environmentType","iconEven","iconTextWrapper","heading","ExpansionPanelDetails","URLs","http","https","ws","wss","TextField","defaultValue","InputProps","disableUnderline","bootstrapRoot","bootstrapInput","InputLabelProps","bootstrapFormLabel","defaultVersionURLs","Button","buttonIcon","object","light","iconOdd","borderRadius","common","white","transitions","create","Labels","getSwaggerByAPIIdAndLabel","labels","accessUrls","InfoBar","pathname","test1","RegExp","test2","match","showOverview","todo","policies","dropDownApplications","dropDownPolicies","notFound","tabValue","comment","commentList","checked","getSchema","getProvider","ditectCurrentMenu","listen","getProviderMail","mail","businessOwnerEmail","getTechnical","owner","technicalOwner","getTechnicalMail","technicalOwnerEmail","newAPI","getGraphQLSchemaByAPIId","windowUrl","binary","Blob","anchor","createElement","click","ratings","prodUrlCopied","sandboxUrlCopied","epUrl","showThumbnail","apisTagsWithoutGroups","resourceNotFountMessage","ResourceNotFound","message","infoBarMain","linkTitle","VerticalDivider","advertiseInfo","advertised","StarRatingSummary","originalStoreUrl","viewInPubStoreLauncher","linkText","Collapse","in","infoContent","contentWrapper","description","Table","table","TableBody","TableRow","TableCell","scope","leftCol","apiOwner","contentToTop","chip","infoContentBottom","expandWrapper","toggleOverview","buttonView","buttonOverviewText","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalRight","leftLInkMain","leftLInkMainText","detailsContent","contentLoader","contentLoaderRightMenu","withRouter","mainBack","infoBarHeight","minWidth","backIcon","backText","zIndex","iconEvenColor","iconOddColor","verticlaAlign","tagChipBackground","styles","mt","mr","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","Box","stepsLength","appCreateFormWrapper","APPLICATION_STATES","setThrottlingPolicyList","applicationRequest","setApplicationRequest","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","allowedTokenTypes","setAllowedTokenTypes","setNotFound","setCreatedApp","incrementStep","setStepStatus","stepStatuses","settingsContext","validateName","Promise","resolve","reject","Error","promiseTiers","getAllTiers","promisedAttributes","getAllApplicationAttributes","allowedTokenTypesArray","allowedAppTokenTypes","allowedTokenTypesMap","entries","Application","TOKEN_TYPES","getAllowedTokenTypes","all","tierResponse","allAttributes","throttlingPolicyListLocal","JWT","allAppAttr","hidden","px","ApplicationCreateForm","updateApplicationRequest","handleAttributesChange","newApplicationRequest","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","appGroups","values","v","handleAddChip","slice","checkTokenType","createApplication","appCreated","PROCEED","BLOCKED","SUBSCRIPTION_STATES","apiObject","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","SubscribeToApi","subscribe","subscriptionId","info","keyConfigWrapper","radioWrapper","keyStates","selectedType","setSelectedType","setNextActive","isUserOwner","setIsUserOwner","settingContext","appAccessTokenValidity","keyRequest","setKeyRequest","keyType","serverSupportedGrantTypes","supportedGrantTypes","callbackUrl","validityTime","setCreatedKeyType","getSettings","obj","grantTypes","formControl","FormLabel","RadioGroup","newKeyType","newKeyRequest","FormControlLabel","control","Radio","KeyConfiguration","updateKeyRequest","setGenerateEnabled","isGenerateKeyStep","application","generateKeys","keyState","tokenWrapper","setKeyType","subscriptionScopes","setSubscriptionScopes","accessTokenRequest","setAccessTokenRequest","timeout","scopesSelected","setCreatedToken","createdKeyType","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","updateAccessTokenRequest","generateToken","stepComponents","CreateAppStep","SubscribeToAppStep","GenerateKeysStep","GenerateAccessTokenStep","createdToken","handleRedirectTest","my","mx","ViewToken","token","isOauth","Wizard","stepStatus","steps","redirect","CurrentStepComponent","titleSub","py","Stepper","activeStep","Step","StepLabel","boxWrapper","handleNext","mb","pt","toolbar","subscribeTitle","plainContent","instructions","wizardContent","ApiConsole","lazy","GraphQLConsole","Overview","Documents","Credentials","Comments","Sdk","LoadableSwitch","apiUuid","params","api_uuid","redirectURL","tryoutRoute","fallback","Progress","exact","from","Details","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","getSubscriptions","getAllApplications","subscriptions","appIdToNameMapping","reduce","acc","cur","element","subscribedAppIds","includes","filteredApp","overviewHiden","xo","setDetailsAPI","rootIconSize","rootIconTextVisible","rootIconVisible","apiDetailPages","showCredentials","showComments","showTryout","showDocuments","showSdks","prefix","sufix","globalStyle","pathPrefix","isWidget","Helmet","LeftMenuItem","route","iconText","shiftLeft","innerRef","node","shiftToLeft","shiftToRight","leftMenuPaddingLeft","backgroundImage","overflowX","rootBackground"],"mappings":"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","file":"Apis.dea51967fbad880a713c.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport const ApiContext = React.createContext({\n    active: 'overview',\n    handleMenuSelect: () => {},\n    api: null,\n    applications: null,\n    subscribedApplications: [],\n    applicationsAvailable: [],\n    updateSubscriptionData: () => {},\n});\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Cancel from '@material-ui/icons/Cancel';\nimport StarRate from '@material-ui/icons/StarRate';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Rating from '@material-ui/lab/Rating';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    starRate: {\n        fontSize: 30,\n        color: theme.custom.infoBar.starColor,\n    },\n    noStarRate: {\n        fontSize: 30,\n        color: theme.palette.grey.A200,\n    },\n    iconFilled: {\n        color: theme.custom.infoBar.starColor,\n    },\n    iconEmpty: {\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n    },\n    removeRating: {\n        fontSize: 20,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    userRating: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n});\n\n/**\n *\n *\n * @class StarRatingBar\n * @extends {React.Component}\n */\nclass StarRatingBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avgRating: 0,\n            userRating: 0,\n            count: 0,\n            total: 0,\n        };\n        this.getApiRating = this.getApiRating.bind(this);\n        this.removeUserRating = this.removeUserRating.bind(this);\n        this.doRate = this.doRate.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.ratingUpdate !== prevProps.ratingUpdate) {\n            this.getApiRating();\n        }\n    }\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    componentDidMount() {\n        this.getApiRating();\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    getApiRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const user = AuthManager.getUser();\n        const api = new Api();\n        // get api rating\n        if (user != null) {\n            const promisedRating = api.getRatingFromUser(apiId, null);\n            promisedRating.then((response) => {\n                this.setState({\n                    avgRating: response.body.avgRating,\n                    userRating: response.body.userRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total,\n                });\n                if(setRatingUpdate) setRatingUpdate({\n                    avgRating: response.body.avgRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total \n                });\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} rateIndex\n     * @memberof StarRatingBar\n     */\n    doRate(rateIndex) {\n        const { apiId } = this.props;\n        const api = new Api();\n        const ratingInfo = { rating: rateIndex };\n        const promise = api.addRating(apiId, ratingInfo);\n        promise\n            .then(() => {\n                this.getApiRating();\n            })\n            .catch((error) => {\n                Alert.error('Error occured while adding ratings');\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    removeUserRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const api = new Api();\n        // remove user rating\n        api.removeRatingOfUser(apiId, null)\n            .then(() => {\n                this.getApiRating();\n                setRatingUpdate();\n            })\n            .catch((error) => {\n                Alert.error('Error occured while removing ratings');\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof StarRatingBar\n     */\n    render() {\n        const {\n            avgRating, userRating, count, total,\n        } = this.state;\n        const {\n            classes, isEditable, showSummary, apiRating,\n        } = this.props;\n        const apiRatingNumber = parseFloat(apiRating);\n        return (\n            <React.Fragment>\n                {showSummary ? (\n                    <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n                ) : (\n                    <React.Fragment>\n                        {isEditable ? (\n                            <React.Fragment>\n                                <div className={classes.userRating}>\n                                    {[1, 2, 3, 4, 5].map(i => (\n                                            <StarRate\n                                                key={i}\n                                                className={userRating >= i ? classes.starRate : classes.noStarRate}\n                                                onClick={() => this.doRate(i)}\n                                            />\n                                    ))}\n                                        <Cancel\n                                            className={classes.removeRating}\n                                            onClick={() => this.removeUserRating()}\n                                        />\n                                </div>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <Rating \n                                    name='half-rating' \n                                    value={apiRatingNumber} \n                                    precision={0.1} \n                                    readOnly \n                                    classes={{iconEmpty:classes.iconEmpty,iconFilled: classes.iconFilled}}\n                                />\n                            </React.Fragment>\n                        )}\n                    </React.Fragment>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nStarRatingBar.defaultProps = {\n    apiRating: 0,\n    ratingUpdate: 0,\n    setRatingUpdate: () => {},\n};\n\nStarRatingBar.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    isEditable: PropTypes.bool.isRequired,\n    showSummary: PropTypes.bool.isRequired,\n    apiRating: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    ratingUpdate: PropTypes.number,\n    setRatingUpdate: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(StarRatingBar);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage}>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({ svgImage: PropTypes.string }).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport Background from './Background';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        '& span': {\n            position: 'absolute',\n            right: 'auto',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else {\n            count = MaterialIcons.categories[0].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[0].icons[randomIconIndex].id;\n        }\n\n        // Obtain or generate background color pair\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (backgroundIndex && colorPairs.length > backgroundIndex) {\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height + 'px', color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport StarRate from '@material-ui/icons/StarRate';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(theme.custom.infoBar.background);\n    return {\n        starRate: {\n            color: starColor,\n            '&.material-icons': {\n                fontSize: 40,\n            },\n        },\n        userRating: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n    };\n};\n\nfunction StarRatingSummary(props) {\n    const {\n        classes, theme, avgRating, reviewCount, returnCount,\n    } = props;\n    return (\n        <React.Fragment>\n            {returnCount > 0 ? (\n                <React.Fragment>\n                    <Icon className={classes.starRate}>star_border</Icon>\n                    <div className={classes.ratingSummary}>\n                        <div className={classes.userRating}>\n                            <Typography variant='body1'>{avgRating}</Typography>\n                            <Typography variant='body1'>/5.0</Typography>\n                        </div>\n                        <Typography variant='body1' gutterBottom align='left'>\n                            {reviewCount}{' '}\n                            {reviewCount === 1 ? (\n                                <FormattedMessage defaultMessage='user' id='Apis.Listing.StarRatingBar.user' />\n                            ) : (\n                                <FormattedMessage defaultMessage='users' id='Apis.Listing.StarRatingBar.users' />\n                            )}\n                        </Typography>\n                    </div>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <StarRate className={classes.starRate} style={{ color: theme.palette.grey.A200 }} />\n                    <div className={classes.ratingSummary}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage defaultMessage='Not Rated' id='Apis.Listing.StarRatingBar.not.rated' />\n                        </Typography>\n                    </div>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n}\n\nexport default withStyles(styles, { withTheme: true })(StarRatingSummary);\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport { app } from 'Settings';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\nimport classNames from 'classnames';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n        position: 'relative',\n    },\n    apiDetails: {\n        padding: theme.spacing(1),\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n        position: theme.custom.thumbnail.contentPictureOverlap ? 'absolute' : 'relative',\n        top: 0,\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbLeftAction: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '10px',\n    },\n    thumbRight: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    context: {\n        marginTop: 5,\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n    textblock: {\n        color: theme.palette.text.secondary,\n        position: 'absolute',\n        bottom: '35px',\n        right: '10px',\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        'padding-left': '10px',\n        'padding-right': '10px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass ApiThumb extends React.Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n            imageLoaded: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof ApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        }).finally(() => {\n            this.setState({ imageLoaded: true })\n        })\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof ApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover, imageLoaded,\n        } = this.state;\n        const path = this.getPathPrefix();\n        const { isMonetizationEnabled } = this.context;\n\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { custom: { thumbnail, social: { showRating } } } = theme;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        if (\n            api.businessInformation &&\n            api.businessInformation.businessOwner &&\n            api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (!imageLoaded) {\n            ImageView = (<div class=\"image-load-frame\">\n                <div class=\"image-load-animation1\"></div>\n                <div class=\"image-load-animation2\"></div>\n            </div>)\n        } else if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color: color || thumbnail.iconColor,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                {isMonetizationEnabled && (\n                    <div className={classes.textblock}>{api.monetizationLabel}</div>\n                )}\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={app.context + defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.row}>\n                            <Typography variant='caption' gutterBottom align='left' className={classes.thumbBy}>\n                                <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                                <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                                {provider}\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.row}>\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='subtitle1'>{version}</Typography>\n                                    <Typography variant='caption' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                </div>\n                            </div>\n                            <div className={classes.row}>\n                                <div className={classes.thumbRight}>\n                                    <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                        {context}\n                                    </Typography>\n                                    <Typography\n                                        variant='caption'\n                                        gutterBottom\n                                        align='right'\n                                        className={classes.context}\n                                        Component='div'\n                                    >\n                                        <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                                    </Typography>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={classes.thumbInfo}>\n                            {showRating && <div className={classes.thumbLeftAction}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>}\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                    {(api.lifeCycleStatus === 'PROTOTYPED') && (\n                                        <Chip\n                                        label={api.apiType === 'APIProduct' ? api.state : api.lifeCycleStatus}\n                                        color='default'\n                                    />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nApiThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(ApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, classes, theme, style, mainPage,\n    } = props;\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <div className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <div className={classNames(classes.thumbContent)}>\n                <Link to={tagLink} className={classes.textWrapper}>\n                    <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                        {name}\n                    </Typography>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport ApiTagThumb from './ApiTagThumb';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    linkTextWrapper: {\n        color: theme.palette.primary.main,\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n    mainPageList: {\n        display: 'flex',\n    },\n    mainPageAllApis: {\n        width: '100%',\n    }\n}));\n\n/**\n * Shared listing page\n *\n * @class TagCloudListing\n * @extends {Component}\n */\nfunction TagCloudListingTags(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter(item => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <>\n            {!mainPage && (<Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                <FormattedMessage defaultMessage='Api Groups' id='Apis.Listing.TagCloudListingTags.title' />\n            </Typography>)}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((key) => {\n                    return <ApiTagThumb key={key} tag={apisTagCloudGroup[key]} path={tagWiseURL} style={style} mainPage={mainPage} />;\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage })}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                }\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </>\n\n    ) : (\n            <>\n                {!mainPage && (<Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='Api Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>)}\n                <div className={classes.mainTitle}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='API groups cannot be found'\n                            id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                        />\n                    </Typography>\n                    <Link to='apis/' className={classes.linkTextWrapper}>\n                        <Typography variant='subtitle1' gutterBottom align='center'>\n                            <FormattedMessage\n                                defaultMessage='All Apis'\n                                id='Apis.Listing.TagCloudListingTags.allApis'\n                            />\n                        </Typography>\n                    </Link>\n                </div>\n            </>\n        );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\nexport default function TagCloudListing() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage={true} />}\n            </div>\n        </main>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    titleBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n    buttonLeft: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n    title: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    legend: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n    inputText: {\n        marginTop: 20,\n    },\n    buttonRightLink: {\n        textDecoration: 'none',\n    },\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    subscribeRoot: {\n        paddingLeft: theme.spacing(2),\n    },\n    subscribeRootSmall: {\n        marginLeft: `-${theme.spacing(4)}px`,\n    },\n    smallDisplay: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n    smallDisplayFix: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n    selectMenuRoot: {\n        margin: 0,\n        padding: 0,\n    },\n    appDropDown: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n});\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState('');\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        classes,\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0].tierName);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0].value);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = target.value;\n                setAppSelected(target.value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = target.value;\n                setPolicySelected(target.value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <Grid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink htmlFor='age-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={appSelected}\n                            onChange={e => handleChange('application', e)}\n                            input={<Input name='appSelected' id='app-label-placeholder' />}\n                            displayEmpty\n                            name='appSelected'\n                            className={classes.selectEmpty}\n                        >\n                            {applicationsList.map(app => (\n                                <MenuItem value={app.value} key={app.value} className={classes.appDropDown}>\n                                    {app.label}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.throttling.policy'\n                                defaultMessage='Throttling Policy'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={policySelected}\n                            onChange={e => handleChange('throttlingPolicy', e)}\n                            input={<Input name='policySelected' id='policy-label-placeholder' />}\n                            displayEmpty\n                            name='policySelected'\n                            className={classes.selectEmpty}\n                        >\n                            {throttlingPolicyList.map(policy => (\n                                <MenuItem value={policy.tierName} key={policy.tierName}  className={classes.appDropDown}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.available.policies'\n                                defaultMessage='Available Policies -'\n                            />{' '}\n                            {throttlingPolicyList.map((policy, index) => (\n                                <span key={policy.tierName}>\n                                    {policy.tierName}\n                                    {index !== throttlingPolicyList.length - 1 && <span>,</span>}\n                                </span>\n                            ))}\n                        </FormHelperText>\n                    </FormControl>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default withStyles(styles)(subscribeToApi);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(1, 3),\n    },\n    link: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    linkNotActive: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n    icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n    selectedTagText: {\n        textIndent: 4,\n    },\n    apiGroup: {\n        color: theme.palette.grey[800],\n    },\n}));\n\nexport default function ApiBreadcrumbs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <Paper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link}>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && <Link color='inherit' className={classes.linkNotActive}>\n                    <CustomIcon width={16} height={16} icon='api' />\n                    <span className={classes.selectedTagText}>{selectedTag}</span>\n                </Link>}\n            </Breadcrumbs>\n        </Paper>\n    );\n}\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport CONSTS from 'AppData/Constants';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n        minHeight: 130,\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n/**\n *\n *\n * @class DocThumb\n * @extends {React.Component}\n */\nconst windowURL = window.URL || window.webkitURL;\n\nclass DocThumb extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: true,\n            loading: false,\n            open: false,\n            overview_link: '',\n            isRedirect: false,\n            openMoreMenu: false,\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n        };\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof DocThumb\n     */\n    render() {\n        const {\n            selectedIcon, color, backgroundIndex, category,\n        } = this.state;\n        const { doc, classes, theme } = this.props;\n        const { doc: {\n name, sourceType, apiName, apiVersion, id, apiUUID \n} } = this.props;\n        const details_link = '/apis/' + apiUUID + '/documents/' + id + '/details';\n        const { thumbnail } = theme.custom;\n        const imageWidth = thumbnail.width;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const ImageView = (\n            <ImageGenerator\n                width={imageWidth}\n                height={140}\n                api={doc}\n                fixedIcon={{\n                    key: selectedIcon,\n                    color,\n                    backgroundIndex,\n                    category,\n                    doc,\n                }}\n            />\n        );\n\n        return (\n            <div className={classes.thumbWrapper}>\n                <Link to={details_link} className={classes.imageWrapper}>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={defaultImage} />}\n                </Link>\n\n                <div\n                    className={classNames(classes.thumbContent, {\n                        [classes.imageOverlap]: thumbnail.contentPictureOverlap,\n                    })}\n                >\n                    <Link to={details_link} className={classes.textWrapper}>\n                        <Typography\n                            className={classes.thumbHeader}\n                            variant='h4'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                    </Link>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage defaultMessage='Source Type:' id='Apis.Listing.DocThumb.sourceType' />\n                        {sourceType}\n                    </Typography>\n                    <div className={classes.thumbInfo}>\n                        <div className={classes.thumbLeft}>\n                            <Typography variant='subtitle1'>{apiName}</Typography>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                <FormattedMessage defaultMessage='Api Name' id='Apis.Listing.DocThumb.apiName' />\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbRight}>\n                            <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                {apiVersion}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='right'>\n                                <FormattedMessage defaultMessage='Api Version' id='Apis.Listing.DocThumb.apiVersion' />\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nDocThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(DocThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport cloneDeep from 'lodash.clonedeep';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@material-ui/core/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from '../../../../defaultTheme';\nimport ImageGenerator from './ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './DocThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst styles = (theme) => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass ApiTableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = localStorage.getItem('portal.numberOfRows') || 10;\n        this.pageType = null;\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                            lineHeight: 1,\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTablePagination: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                        \n                    },\n                },\n                MuiMenuItem: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                    }\n                },\n                MUIDataTableToolbar: {\n                    root: {\n                        '& svg': {\n                            color: theme.palette.getContrastText(theme.palette.background.default),\n                        }\n                    }\n                }\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            border: 'none',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                            '& tr:nth-child(odd),& tr:nth-child(even)': {\n                                display: 'block',\n                                marginRight: 5,\n                                marginBottom: 5,\n                                backgroundColor: 'transparent',\n                            },\n                            '& td': {\n                                display: 'block',\n                                backgroundColor: 'transparent',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                    MUIDataTableBodyCell: {\n                        root: {\n                            backgroundColor: 'transparent',\n                            width: '100%',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge({}, DefaultConfigurations, Configurations, {custom: cloneDeep(theme.custom)});\n        const dataTableTheme = merge({}, muiTheme, systemTheme, themeAdditions);\n        return createMuiTheme(dataTableTheme);\n    };\n\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.page = 0;\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.setState({loading: true})\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const { apiType } = this.context;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch((e) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableView\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                const strokeColor = theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund);\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.rowImageOverride}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor={strokeColor} />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider/Business Owner',\n                }),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            if (\n                                tableMeta.rowData[9].businessOwner\n                            ) {\n                                return (\n                                    <>\n                                        <div>{tableMeta.rowData[9].businessOwner}</div>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage defaultMessage='(Business Owner)' id='Apis.Listing.ApiTableView.business.owner.caption' />\n                                        </Typography>\n                                    </>\n                                );\n                            } else {\n                                return (\n                                    <>\n                                        <div>{value}</div>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage defaultMessage='(Provider)' id='Apis.Listing.ApiTableView.provider.caption' />\n                                        </Typography>\n                                    </>\n                                );\n                            }\n                        }\n                    }\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'businessInformation',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page, count } = this;\n                if (page * numberOfRows > count) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                localStorage.setItem('portal.numberOfRows', numberOfRows);\n                this.getData();\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else {\n                        return <tr key={rowIndex}><td><ApiThumb api={artifact} customHeight={theme.custom.thumbnail.height}\n                        customWidth={theme.custom.thumbnail.width} /></td></tr>;\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nApiTableView.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(ApiTableView))));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get APICategoryThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path, classes, theme,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n\n    return (\n        <Link to={categoryLink} className={classes.textWrapper}>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon>label</Icon>\n                </ListItemIcon>\n                <ListItemText primary={category.name} />\n            </ListItem>\n        </Link>\n    );\n\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    category: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst useStyles = makeStyles(theme => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <React.Fragment>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </React.Fragment>\n        )\n    ) : (\n        <div className={classes.mainTitle}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </div>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    clickablePointer: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {any} value @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remve the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter(item => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <React.Fragment>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='Tag Cloud' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={tag => handleOnClick(tag)}\n                />\n            </React.Fragment>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    listType: PropTypes.string.isRequired,\n    apiType: PropTypes.string.isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\nimport classNames from 'classnames';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    apiDetails: {\n        padding: theme.spacing.unit,\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing.unit,\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumb\n * @extends {Component}\n */\nclass RecommendedApiThumb extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {*} props\n     * @memberof RecommendedApiThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nRecommendedApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumb.contextType = ApiContext;\n \nexport default withStyles(styles, { withTheme: true })(RecommendedApiThumb);\n ","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport ImageGenerator from './ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst styles = theme => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class Recommendations\n * @extends {React.Component}\n */\nclass Recommendations extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof Recommendations\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createMuiTheme(muiTheme);\n    };\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query ||\n            prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof Recommendations\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.rowImageOverride}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nRecommendations.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(Recommendations))));\n\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst styles = (theme) => ({\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n        display: 'flex',\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    iconSelected: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n    content: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n    contentWithTags: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n    contentWithoutTags: {\n        marginLeft: -4,\n    },\n    contentWithTagsHidden: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n    LeftMenuForSlider: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n    sliderButton: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n    rotatedText: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 4,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n    recommendationsBar: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\n/**\n * Shared listing page\n *\n * @class CommonListing\n * @extends {Component}\n */\nclass CommonListing extends React.Component {\n    static contextType = Settings;\n\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if(typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if(defaultApiView.length === 1) { // We will disable the other\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[0];\n        } else {\n            defaultApiView = localStorage.getItem('portal.listType') || defaultApiView;\n        }\n        this.state = {\n            listType: defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListing\n     */\n    setListType = (value) => {\n        localStorage.setItem('portal.listType', value);\n        this.setState({ listType: value });\n    };\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListing\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n            promisedCategories\n                .then((response) => {\n                    this.setState({ allCategories: response.body.list });\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListing\n     */\n    render() {\n        const {\n            theme,\n            classes,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active, style },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) != -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <>\n                {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                    <div className={classes.LeftMenu}>\n                        <div className={classes.sliderButton} onClick={this.toggleLeftMenu}>\n                            <Icon>keyboard_arrow_left</Icon>\n                        </div>\n                        {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                        {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                        {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                    </div>\n                )}\n                {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                    <div className={classes.LeftMenuForSlider}>\n                        <div className={classes.sliderButton} onClick={this.toggleLeftMenu}>\n                            <Icon>keyboard_arrow_right</Icon>\n                        </div>\n                        <div className={classes.rotatedText} onClick={this.toggleLeftMenu}>\n                            <FormattedMessage defaultMessage='Tag Cloud / API Categories' id='Apis.Listing.Listing.ApiTagCloud.title' />\n                        </div>\n                    </div>\n                )}\n\n                <main\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classes.mainIconWrapper}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        {this.showToggle && (<div className={classes.buttonRight} id='listGridWrapper'>\n                            <IconButton className={classes.button} onClick={() => this.setListType('list')}>\n                                <Icon\n                                    className={classNames(\n                                        { [classes.iconSelected]: listType === 'list' },\n                                        { [classes.iconDefault]: listType === 'grid' },\n                                    )}\n                                >\n                                    list\n                                </Icon>\n                            </IconButton>\n                            <IconButton className={classes.button} onClick={() => this.setListType('grid')}>\n                                <Icon\n                                    className={classNames(\n                                        { [classes.iconSelected]: listType === 'grid' },\n                                        { [classes.iconDefault]: listType === 'list' },\n                                    )}\n                                >\n                                    grid_on\n                                </Icon>\n                            </IconButton>\n                        </div>)}\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user &&\n                        <div>\n                            {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                            <div className={classes.listContentWrapper}>\n                                {listType === 'grid' && (\n                                    <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                        <Recommendations gridView query={search} />\n                                    </ApiContext.Provider>\n                                )}\n                                {listType === 'list' && (\n                                    <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                        <Recommendations gridView query={search} />\n                                    </ApiContext.Provider>\n                                )}\n                            </div>\n                        </div>\n                    }\n                </main>\n            </>\n        );\n    }\n}\n\nCommonListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(CommonListing);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\n\n/**\n * Position the modal\n * @returns {JSON} css atrributes JSON.\n */\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    code: {\n        background: '#efefef',\n        color: 'cc0000',\n        border: 'solid 1px #ccc',\n        padding: theme.spacing(1),\n    },\n    iconStyle: {\n        position: 'absolute',\n        top: 60,\n        right: 30,\n    },\n}));\n\n/**\n * Adds two numbers together.\n * @param {JSON} props props passed from parent\n * @returns {JSX} code in a modal\n */\nfunction EmbadCode(props) {\n    const { intl } = props;\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [codeCopied, setCodeCopied] = React.useState(false);\n    const url = new URL(window.location);\n    url.searchParams.set('widget', true);\n\n    const onCopy = () => {\n        setCodeCopied(true);\n        setTimeout(() => setCodeCopied(false), 2000);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const embadCode = '<iframe width=\"450\" height=\"120\" src=\"'\n        + url + '\" frameBorder=\"0\" allowFullScreen title=\"Embad API\" />';\n\n    return (\n        <div>\n            <CodeIcon className={classes.codeIcon} onClick={handleOpen} />\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Social.EmbedCode.embed'\n                            defaultMessage='Embed'\n                        />\n                    </h2>\n                    <div className={classes.code}>\n                        <code>{embadCode}</code>\n                    </div>\n                    <Tooltip\n                        title={\n                            codeCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Social.EmbedCode.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Social.EmbedCode.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <CopyToClipboard\n                            text={embadCode}\n                            onCopy={onCopy}\n                        >\n                            <Icon color='secondary'>file_copy</Icon>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default injectIntl(EmbadCode);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport EmbadCode from 'AppComponents/Apis/Details/Social/EmbadCode';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    socialLink: {\n        display: 'inline-block',\n        '& img': {\n            width: 32,\n            marginLeft: theme.spacing(1),\n        },\n    },\n    oneFlex: {\n        flex: 1,\n    },\n    socialLinkWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingRight: theme.spacing(2),\n        '& > div': {\n            display: 'inline-block',\n        },\n    },\n    divider: {\n        display: 'inline-block',\n        borderRight: 'solid 1px #ccc',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        height: 30,\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Render the social icons\n * @param {int} num1 The first number.\n * @param {int} num2 The second number.\n * @returns {int} The sum of the two numbers.\n */\nfunction Social() {\n    const classes = useStyles();\n    const { api } = useContext(ApiContext);\n    const { name: apiName } = api;\n    const apiUrl = encodeURI(window.location);\n    const theme = useTheme();\n    const {\n        custom: {\n            social: {\n                showSharing: {\n                    active, showFacebook, showReddit, showTwitter, showEmbad, showEmail,\n                },\n            },\n        },\n    } = theme;\n    if (!active) {\n        return <span />;\n    }\n    return (\n        <>\n            <div className={classes.oneFlex} />\n            <div className={classes.socialLinkWrapper}>\n                {/* Facebook */}\n                {showFacebook && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.facebook.com/sharer.php?u=${apiUrl}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Social.Social.facebook'\n                                defaultMessage='Facebook'\n                            />\n                        )}\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/facebook.png`}\n                            alt={(\n                                <FormattedMessage\n                                    id='Apis.Details.Social.Social.facebook'\n                                    defaultMessage='Facebook'\n                                />\n                            )}\n                        />\n                    </a>\n                )}\n                {/* Twitter */}\n                {showTwitter && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://twitter.com/share?url=${apiUrl}&text=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Social.Social.twitter'\n                                defaultMessage='Twitter'\n                            />\n                        )}\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/twitter.png`}\n                            alt={(\n                                <FormattedMessage\n                                    id='Apis.Details.Social.Social.twitter'\n                                    defaultMessage='Twitter'\n                                />\n                            )}\n                        />\n                    </a>\n                )}\n                {/* Reddit */}\n                {showReddit && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.reddit.com/submit?url=${apiUrl}&title=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Social.Social.reddit'\n                                defaultMessage='Reddit'\n                            />\n                        )}\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/reddit.png`}\n                            alt={(\n                                <FormattedMessage\n                                    id='Apis.Details.Social.Social.reddit'\n                                    defaultMessage='Reddit'\n                                />\n                            )}\n                        />\n                    </a>\n                )}\n                {showEmbad && (\n                    <>\n                        <div className={classes.divider} />\n                        <EmbadCode />\n                    </>\n                )}\n                {showEmail && (\n                    <>\n                        <div className={classes.divider} />\n                        <a\n                            href={`mailto:?Subject=${apiName}&body=Link+:+${apiUrl}\"`}\n                            className={classes.codeIcon}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        >\n                            <MailOutlineIcon />\n                        </a>\n                    </>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default injectIntl(Social);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst styles = theme => ({\n    buttonIcon: {\n        marginRight: 10,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconEven: {\n        color: theme.palette.secondary.light,\n        width: theme.spacing(3),\n    },\n    iconOdd: {\n        color: theme.palette.secondary.main,\n        width: theme.spacing(3),\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    iconStyle: {\n        cursor: 'grab',\n    },\n    envRoot: {\n        '& span, & h5, & label, & td, & li': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        }\n    },\n});\n\n/**\n *  @inheritdoc\n */\nclass Environments extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new API();\n        this.state = {\n            urlCopied: false,\n        };\n        this.downloadWSDL = this.downloadWSDL.bind(this);\n        this.onCopy = this.onCopy.bind(this);\n    }\n\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const caller = function () {\n            that.setState({ urlCopied: false });\n        };\n        setTimeout(caller, 2000);\n    }\n\n    /**\n     * Downloads the WSDL of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environmentName name of the environment\n     */\n    downloadWSDL(apiId, environmentName) {\n        const { intl } = this.props;\n        const wsdlClient = this.apiClient.getWsdlClient();\n        const promisedGet = wsdlClient.downloadWSDLForEnvironment(apiId, environmentName);\n        promisedGet\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.wsdl.error',\n                        defaultMessage: 'Error downloading the WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads the swagger of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    downloadSwagger(apiId, environment) {\n        const promiseSwagger = this.apiClient.getSwaggerByAPIIdAndEnvironment(apiId, environment);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.swagger.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    }\n\n    /**\n     *  @inheritdoc\n     */\n    render() {\n        const { api } = this.context;\n        const { classes, intl } = this.props;\n        const { urlCopied } = this.state;\n\n\n        return (\n            <Grid container spacing={2} item xs={12} className={classes.envRoot}>\n                {api.endpointURLs.map((endpoint) => {\n                    return (\n                        <Grid key={endpoint} item xs={12} key={endpoint.environmentName}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<Icon>expand_more</Icon>}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <div className={classes.iconAligner}>\n                                        {endpoint.environmentType === 'hybrid' && (\n                                            <Icon className={classes.iconEven}>cloud</Icon>\n                                        )}\n                                        {endpoint.environmentType === 'production' && (\n                                            <Icon className={classes.iconEven}>check_circle</Icon>\n                                        )}\n                                        {endpoint.environmentType === 'sandbox' && (\n                                            <Icon className={classes.iconEven}>Build</Icon>\n                                        )}\n                                        <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {endpoint.environmentName}\n                                            </Typography>\n                                        </span>\n                                    </div>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid container item xs={12} spacing={2}>\n                                        {(endpoint.URLs.http !== null\n                                            || endpoint.URLs.https !== null\n                                            || endpoint.URLs.ws !== null\n                                            || endpoint.URLs.wss !== null) && (\n                                            <Typography className={classes.heading}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.InfoBar.gateway.urls'\n                                                    defaultMessage='Gateway URLs'\n                                                />\n                                            </Typography>\n                                        )}\n                                        {endpoint.URLs.http !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.http}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.http}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.https !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.https}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.https}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.ws !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.ws}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.ws}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.wss !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.wss}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.wss}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            (endpoint.defaultVersionURLs.http !== null ||\n                                                endpoint.defaultVersionURLs.https !== null ||\n                                                endpoint.defaultVersionURLs.ws !== null ||\n                                                endpoint.defaultVersionURLs.wss !== null) && (\n                                            <Typography className={classes.heading}>\n                                                    <FormattedMessage\n                                                    id='Apis.Details.InfoBar.default.gateway.urls'\n                                                    defaultMessage='Default Gateway URLs'\n                                                />\n                                                </Typography>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.http !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.http}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.http}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.https !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.https}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.https}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.ws !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.ws}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.ws}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.wss !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.wss}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.wss}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {api.type === 'SOAP' && (\n                                            <Button\n                                                size='small'\n                                                onClick={() => this.downloadWSDL(api.id, endpoint.environmentName)}\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.wsdl'\n                                                    defaultMessage='WSDL'\n                                                />\n                                            </Button>\n                                        )}\n                                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST') && (\n                                            <Button\n                                                size='small'\n                                                onClick={() => this.downloadSwagger(api.id, endpoint.environmentName)}\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.swagger'\n                                                    defaultMessage='Swagger'\n                                                />\n                                            </Button>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n}\n\nEnvironments.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\nEnvironments.contextType = ApiContext;\n\nexport default injectIntl(withStyles(styles)(Environments));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst styles = (theme) => ({\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconEven: {\n        color: theme.palette.secondary.light,\n        width: theme.spacing(3),\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    iconStyle: {\n        cursor: 'grab',\n    },\n});\n\nclass Labels extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new API();\n        this.state = {\n            urlCopied: false,\n        };\n    }\n\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const caller = function () {\n            that.setState({ urlCopied: false });\n        };\n        setTimeout(caller, 2000);\n    }\n\n    /**\n     * Downloads the Swagger of the api for the provided label\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} label name of the environment\n     */\n    downloadSwagger(apiId, label) {\n        const promiseSwagger = this.apiClient.getSwaggerByAPIIdAndLabel(apiId, label);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.wsdl.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    }\n\n    render() {\n        const { api } = this.context;\n        const { classes, intl } = this.props;\n        const { urlCopied } = this.state;\n\n        return (\n            <Grid container spacing={2} item xs={12}>\n                {api.labels.map((label) => {\n                    return (\n                        <Grid key={label} item xs={12}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<Icon>expand_more</Icon>}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <div className={classes.iconAligner}>\n                                        <Icon className={classes.iconEven}>label</Icon>\n                                        <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {label.name}\n                                            </Typography>\n                                        </span>\n                                    </div>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid container item xs={12} spacing={2}>\n                                        <Typography className={classes.heading}>\n                                            <FormattedMessage\n                                                id='Apis.Details.InfoBar.microgateway.urls'\n                                                defaultMessage='Microgateway URLs'\n                                            />\n                                        </Typography>\n                                        {label.accessUrls.map((row) => (\n                                            <Grid item xs={12} key={row}>\n                                                <TextField\n                                                    defaultValue={row}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Labels.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Labels.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={row}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        ))}\n                                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST') && (\n                                            <Button\n                                                size='small'\n                                                onClick={\n                                                    () => this.downloadSwagger(api.id, label.name)\n                                                }\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.swagger'\n                                                    defaultMessage='Swagger'\n                                                />\n                                            </Button>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n}\n\nLabels.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nLabels.contextType = ApiContext;\n\nexport default injectIntl(withStyles(styles)(Labels));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { Link, withRouter } from 'react-router-dom';\nimport Collapse from '@material-ui/core/Collapse';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grade from '@material-ui/icons/Grade';\nimport Chip from '@material-ui/core/Chip';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport Social from 'AppComponents/Apis/Details/Social/Social';\nimport VerticalDivider from '../../Shared/VerticalDivider';\nimport ApiThumb from '../Listing/ApiThumb';\nimport ResourceNotFound from '../../Base/Errors/ResourceNotFound';\nimport AuthManager from '../../../data/AuthManager';\nimport Environments from './Environments';\nimport Labels from './Labels';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    const infoBarHeight = theme.custom.infoBar.height || 70;\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(mainBack);\n\n    return {\n        table: {\n            minWidth: '100%',\n        },\n        root: {\n            height: infoBarHeight,\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            display: 'flex',\n            alignItems: 'center',\n            paddingLeft: theme.spacing(2),\n        },\n        backIcon: {\n            color: theme.palette.primary.main,\n            fontSize: 56,\n            cursor: 'pointer',\n        },\n        backText: {\n            color: theme.palette.primary.main,\n            cursor: 'pointer',\n            fontFamily: theme.typography.fontFamily,\n        },\n        starRate: {\n            fontSize: 40,\n            color: starColor,\n        },\n        infoContent: {\n            color: theme.palette.getContrastText(mainBack),\n            background: mainBack,\n            padding: theme.spacing(3),\n            '& td, & th': {\n                color: theme.palette.getContrastText(mainBack),\n            },\n        },\n        infoContentBottom: {\n            background: theme.custom.infoBar.sliderBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.sliderBackground),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        },\n        contentWrapper: {\n            maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n            alignItems: 'center',\n        },\n        infoBarMain: {\n            width: '100%',\n            zIndex: 100,\n        },\n        buttonView: {\n            textAlign: 'left',\n            justifyContent: 'left',\n            display: 'flex',\n            paddingLeft: theme.spacing(3),\n            cursor: 'pointer',\n        },\n        buttonOverviewText: {\n            display: 'inline-block',\n            paddingTop: 3,\n        },\n        paper: {\n            margin: theme.spacing(1),\n        },\n        leftCol: {\n            width: 200,\n        },\n        iconAligner: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n        iconTextWrapper: {\n            display: 'inline-block',\n            paddingLeft: 20,\n        },\n        iconEven: {\n            color: theme.custom.infoBar.iconEvenColor,\n            width: theme.spacing(3),\n        },\n        iconOdd: {\n            color: theme.custom.infoBar.iconOddColor,\n            width: theme.spacing(3),\n        },\n        margin: {\n            marginLeft: 30,\n        },\n        contentToTop: {\n            verticlaAlign: 'top',\n        },\n        viewInPubStoreLauncher: {\n            display: 'flex',\n            flexDirection: 'column',\n            color: theme.palette.getContrastText(mainBack),\n            textAlign: 'center',\n            textDecoration: 'none',\n        },\n        linkText: {\n            fontSize: theme.typography.fontSize,\n        },\n        chip: {\n            background: theme.custom.infoBar.tagChipBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.tagChipBackground),\n            marginRight: theme.spacing(1),\n        },\n        expandWrapper: {\n            cursor: 'pointer',\n            display: 'block',\n        },\n        linkTitle: {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        leftMenu: {},\n        leftMenuHorizontal: {},\n        leftMenuVerticalLeft: {},\n        leftMenuVerticalRight: {},\n        leftLInkMain: {},\n        leftLInkMainText: {},\n        detailsContent: {},\n        content: {},\n        contentLoader: {},\n        contentLoaderRightMenu: {},\n    };\n};\n\n/**\n *\n *\n * @class InfoBar\n * @extends {React.Component}\n */\nclass InfoBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: null,\n            applications: null,\n            policies: null,\n            dropDownApplications: null,\n            dropDownPolicies: null,\n            notFound: false,\n            tabValue: 'Social Sites',\n            comment: '',\n            commentList: null,\n            showOverview: true,\n            checked: false,\n            avgRating: 0,\n            total: 0,\n            count: 0,\n        };\n        this.getSchema = this.getSchema.bind(this);\n        this.getProvider = this.getProvider.bind(this);\n        this.setRatingUpdate = this.setRatingUpdate.bind(this);\n    }\n\n    ditectCurrentMenu = (location) => {\n        const routeToCheck = 'overview';\n        const { pathname } = location;\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            this.setState({ showOverview: true });\n        } else {\n            this.setState({ showOverview: false });\n        }\n    };\n\n    componentDidMount() {\n        const { history } = this.props;\n        this.ditectCurrentMenu(history.location);\n        history.listen((location) => {\n            this.ditectCurrentMenu(location);\n        });\n    }\n\n    /**\n     *\n     *\n     * @memberof InfoBar\n     */\n    toggleOverview = (todo) => {\n        if (typeof todo === 'boolean') {\n            this.setState({ showOverview: todo });\n        } else {\n            this.setState((state) => ({ showOverview: !state.showOverview }));\n        }\n    };\n\n    getProvider(api) {\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        return provider;\n    }\n\n    getProviderMail(api) {\n        let mail;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwnerEmail\n            && api.businessInformation.businessOwnerEmail.trim() !== ''\n        ) {\n            mail = '(' + api.businessInformation.businessOwnerEmail + ')';\n        }\n        return mail;\n    }\n\n    getTechnical(api) {\n        let owner;\n        if (\n            api.businessInformation\n            && api.businessInformation.technicalOwner\n            && api.businessInformation.technicalOwner.trim() !== ''\n        ) {\n            owner = api.businessInformation.technicalOwner;\n        }\n        return owner;\n    }\n\n    getTechnicalMail(api) {\n        let mail;\n        if (\n            api.businessInformation\n            && api.businessInformation.technicalOwnerEmail\n            && api.businessInformation.technicalOwnerEmail.trim() !== ''\n        ) {\n            mail = '(' + api.businessInformation.technicalOwnerEmail + ')';\n        }\n        return mail;\n    }\n\n    getSchema() {\n        const newAPI = new API();\n        const { api } = this.context;\n        const promisedGraphQL = newAPI.getGraphQLSchemaByAPIId(api.id);\n        promisedGraphQL.then((response) => {\n            const windowUrl = window.URL || window.webkitURL;\n            const binary = new Blob([response.data]);\n            const url = windowUrl.createObjectURL(binary);\n            const anchor = document.createElement('a');\n            anchor.href = url;\n            anchor.download = this.getProvider(api) + '-' + api.name + '-' + api.version + '.graphql';\n            anchor.click();\n            windowUrl.revokeObjectURL(url);\n        });\n    }\n\n    setRatingUpdate(ratings) {\n        if (ratings) {\n            const { avgRating, total, count } = ratings;\n            this.setState({ avgRating, total, count });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof InfoBar\n     */\n    render() {\n        const { api } = this.context;\n\n        const { classes, theme, intl } = this.props;\n        const {\n            notFound, showOverview, prodUrlCopied, sandboxUrlCopied, epUrl, avgRating, total, count,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: { position },\n                infoBar: { showThumbnail, height },\n                tagWise: { key, active },\n                social: { showRating },\n            },\n        } = theme;\n\n        // Remve the tags with a sufix '-group' from tags\n        let apisTagsWithoutGroups = [];\n        if ( !active ){\n            apisTagsWithoutGroups = api.tags;\n        }\n        if (active && api.tags && api.tags.length > 0) {\n            for (let i = 0; i < api.tags.length; i++) {\n                if (api.tags[i].search(key) != -1 && api.tags[i].split(key).length > 0) {\n                    apisTagsWithoutGroups.push(api.tags[i].split(key)[0]);\n                } else {\n                    apisTagsWithoutGroups.push(api.tags[i]);\n                }\n            }\n        }\n\n        const { resourceNotFountMessage } = this.props;\n        const user = AuthManager.getUser();\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        return (\n            <div className={classes.infoBarMain} id='infoBar'>\n                <div className={classes.root}>\n                    {showThumbnail && (\n                        <ApiThumb api={api} customWidth={70} customHeight={50} showInfo={false} />\n                    )}\n                    <div style={{ marginLeft: theme.spacing(1) }}>\n                        <Link to={'/apis/' + api.id + '/overview'} className={classes.linkTitle}>\n                            <Typography variant='h4'>{api.name}</Typography>\n                        </Link>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            {this.getProvider(api)}\n                        </Typography>\n                    </div>\n                    <VerticalDivider height={70} />\n                    {!api.advertiseInfo.advertised && user && showRating && (\n                        <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n\n                    )}\n                    {api.advertiseInfo.advertised && (\n                        <>\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={api.advertiseInfo.originalStoreUrl}\n                                className={classes.viewInPubStoreLauncher}\n                            >\n                                <div>\n                                    <LaunchIcon />\n                                </div>\n                                <div className={classes.linkText}>Visit Publisher Dev Portal</div>\n                            </a>\n                            <VerticalDivider height={70} />\n                        </>\n                    )}\n                    <Social />\n                </div>\n                {position === 'horizontal' && <div style={{ height: 60 }} />}\n                {showOverview && (\n                    <Collapse in={showOverview}>\n                        <div className={classes.infoContent}>\n                            <div className={classes.contentWrapper}>\n                                <Typography>{api.description}</Typography>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>settings_input_component</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.list.version'\n                                                            defaultMessage='Version'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{api.version}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_balance_wallet</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.list.context'\n                                                            defaultMessage='Context'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{api.context}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_circle</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.provider'\n                                                            defaultMessage='Provider'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getProvider(api)} {this.getProviderMail(api)}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_box</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.technical'\n                                                            defaultMessage='Technical Owner'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getTechnical(api)} {this.getTechnicalMail(api)}</TableCell>\n                                        </TableRow>\n                                        {/* <TableRow>\n                                                    <TableCell component='th' scope='row'>\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconEven}>update</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.last.updated'\n                                                                    defaultMessage='Last updated'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>21 May 2018</TableCell>\n                                                </TableRow> */}\n                                        {user && !api.advertiseInfo.advertised && showRating && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Grade className={classes.iconOdd} />\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.list.context.rating'\n                                                                defaultMessage='Rating'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <StarRatingBar\n                                                        apiId={api.id}\n                                                        isEditable\n                                                        showSummary={false}\n                                                        setRatingUpdate={this.setRatingUpdate}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {api.type === 'GRAPHQL' && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>cloud_download</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.download.Schema'\n                                                                defaultMessage='Download Schema'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        onClick={this.getSchema}\n                                                        size='small'\n                                                        fontSize='small'\n                                                        variant='outlined'\n                                                    >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.graphQL.schema'\n                                                            defaultMessage='GraphQL Schema'\n                                                        />\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {!api.advertiseInfo.advertised ? (\n                                            <>\n                                                <TableRow>\n                                                    <TableCell\n                                                        component='th'\n                                                        scope='row'\n                                                        className={classes.contentToTop}\n                                                    >\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconOdd}>desktop_windows</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.gateway.environments'\n                                                                    defaultMessage='Gateway Environments'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <Environments />\n                                                    </TableCell>\n                                                </TableRow>\n                                                {api.labels.length !== 0 && (\n                                                    <TableRow>\n                                                        <TableCell\n                                                            component='th'\n                                                            scope='row'\n                                                            className={classes.contentToTop}\n                                                        >\n                                                            <div className={classes.iconAligner}>\n                                                                <Icon className={classes.iconOdd}>games</Icon>\n                                                                <span className={classes.iconTextWrapper}>\n                                                                    <FormattedMessage\n                                                                        id='Apis.Details.InfoBar.available.mgLabels'\n                                                                        defaultMessage='Available Microgateways'\n                                                                    />\n                                                                </span>\n                                                            </div>\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <Labels />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )}\n                                            </>\n                                        ) : (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>account_circle</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.owner'\n                                                                defaultMessage='Owner'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>{api.advertiseInfo.apiOwner}</TableCell>\n                                            </TableRow>\n                                        )}\n                                        {apisTagsWithoutGroups && apisTagsWithoutGroups.length > 0 && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>bookmark</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.list.tags'\n                                                                defaultMessage='Tags'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    {apisTagsWithoutGroups.map((tag) => (\n                                                        <Chip label={tag} className={classes.chip} key={tag} />\n                                                    ))}\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    </Collapse>\n                )}\n                <div className={classes.infoContentBottom}>\n                    <a className={classes.expandWrapper} onClick={this.toggleOverview}>\n                        <div className={classes.buttonView}>\n                            {showOverview ? (\n                                <Typography className={classes.buttonOverviewText}>\n                                    <FormattedMessage id='Apis.Details.InfoBar.less' defaultMessage='LESS' />\n                                </Typography>\n                            ) : (\n                                <Typography className={classes.buttonOverviewText}>\n                                    <FormattedMessage id='Apis.Details.InfoBar.more' defaultMessage='MORE' />\n                                </Typography>\n                            )}\n                            {showOverview ? <Icon>arrow_drop_up</Icon> : <Icon>arrow_drop_down</Icon>}\n                        </div>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\nInfoBar.defaultProps = {\n    classes: {\n        leftMenu: {},\n        leftMenuHorizontal: {},\n        leftMenuVerticalLeft: {},\n        leftMenuVerticalRight: {},\n        leftLInkMain: {},\n        leftLInkMainText: {},\n        detailsContent: {},\n        content: {},\n        contentLoader: {},\n        contentLoaderRightMenu: {},\n    },\n};\nInfoBar.propTypes = {\n    classes: PropTypes.shape({}),\n    theme: PropTypes.object.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nInfoBar.contextType = ApiContext;\n\nexport default injectIntl(withRouter(withStyles(styles, { withTheme: true })(InfoBar)));\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/test`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\nimport Application from \"AppData/Application\";\nimport { FormattedMessage } from 'react-intl';\nimport Settings from 'AppComponents/Shared/SettingsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    appCreateFormWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [allowedTokenTypes, setAllowedTokenTypes] = useState({});\n    const [notFound, setNotFound] = useState(false);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n    const settingsContext = useContext(Settings);\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        validateName(applicationRequest.name)\n            .then(() => api.createApplication(applicationRequest))\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * Returns the allowed token types map.\n     * @returns {object}\n     */\n    const getAllowedTokenTypes = () => {\n        const allowedTokenTypesArray = settingsContext.settings.allowedAppTokenTypes;\n        let allowedTokenTypesMap = {};\n        // iterate through Application.TOKEN_TYPES map and populate the allowed types as a map\n        if (allowedTokenTypesArray) {\n            Object.entries(Application.TOKEN_TYPES).map(([key, value]) => (\n                allowedTokenTypesArray.map((tokenType) => {\n                    if (tokenType === key) {\n                        allowedTokenTypesMap[key] = value;\n                    }\n                })\n            ));\n            return allowedTokenTypesMap;\n        } else {\n            return Application.TOKEN_TYPES;\n        }\n    };\n\n     /**\n     * Checks token type to complete the helper text for token type field.\n     */\n     const checkTokenType = () => {\n        return (\n            <FormattedMessage\n                defaultMessage='Select token type'\n                id='Shared.AppsAndKeys.ApplicationCreateForm.select.token.type'\n            />\n        );\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application');\n        const promisedAttributes = api.getAllApplicationAttributes();\n        const allowedTokenTypes = getAllowedTokenTypes();\n        Promise.all([promiseTiers, promisedAttributes])\n            .then((response) => {\n                const [tierResponse, allAttributes] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                if (allowedTokenTypes.JWT) {\n                    // set the default selected token type to JWT if it is in the allowed token type map.\n                    newRequest.tokenType = 'JWT';\n                } else {\n                    newRequest.tokenType = Object.keys(allowedTokenTypes)[0];\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n                setAllowedTokenTypes(allowedTokenTypes);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                        allowedTokenTypes={allowedTokenTypes}\n                        checkTokenType={checkTokenType}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </div>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport KeyConfiguration from 'AppComponents/Shared/AppsAndKeys/KeyConfiguration';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cloneDeep from 'lodash.clonedeep';\nimport ButtonPanel from './ButtonPanel';\nimport Settings from 'AppComponents/Shared/SettingsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    keyConfigWrapper: {\n        paddingLeft: theme.spacing(4),\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n}));\n\nconst generateKeysStep = (props) => {\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [selectedType, setSelectedType] = useState('PRODUCTION');\n    const [notFound, setNotFound] = useState(false);\n    const [nextActive, setNextActive] = useState(true);\n    const [isUserOwner, setIsUserOwner] = useState(false);\n    const settingContext = useContext(Settings);\n    const { appAccessTokenValidity } = settingContext.settings;\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'PRODUCTION',\n        serverSupportedGrantTypes: [],\n        supportedGrantTypes: [],\n        callbackUrl: '',\n        validityTime: appAccessTokenValidity,\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType, intl,\n        setStepStatus, stepStatuses,\n    } = props;\n\n    /**\n    * @param {*} event event\n    * @param {*} currentTab current tab\n    * @memberof Wizard\n    */\n    const handleRadioChange = (event) => {\n        const newKeyType = event.target.value;\n        setSelectedType(newKeyType);\n        const newKeyRequest = cloneDeep(keyRequest);\n        newKeyRequest.keyType = newKeyType;\n        setKeyRequest(newKeyRequest);\n    };\n\n    useEffect(() => {\n        setIsUserOwner(true);\n        const api = new API();\n        const promisedSettings = api.getSettings();\n        promisedSettings\n            .then((response) => {\n                const newRequest = cloneDeep(keyRequest);\n                newRequest.serverSupportedGrantTypes = response.obj.grantTypes;\n                newRequest.supportedGrantTypes = response.obj.grantTypes.filter((item) => item !== 'authorization_code'\n                    && item !== 'implicit');\n                setKeyRequest(newRequest);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound({ notFound: true });\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes,\n                keyRequest.callbackUrl,\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                setNotFound(true);\n            }\n        });\n    };\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.keyConfigWrapper}>\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            defaultMessage='Key Type'\n                            id='Apis.Details.Credentials.Wizard.GenerateKeysStep.keyType'\n                        />\n                    </FormLabel>\n                    <RadioGroup value={selectedType} onChange={handleRadioChange} classes={{ root: classes.radioWrapper }}>\n                        <FormControlLabel\n                            value='PRODUCTION'\n                            control={<Radio />}\n                            label={intl.formatMessage({\n                                defaultMessage: 'PRODUCTION',\n                                id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.production',\n                            })}\n                        />\n                        <FormControlLabel\n                            value='SANDBOX'\n                            control={<Radio />}\n                            label={intl.formatMessage({\n                                defaultMessage: 'SANDBOX',\n                                id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.sandbox',\n                            })}\n                        />\n                    </RadioGroup>\n                </FormControl>\n                <KeyConfiguration\n                    updateKeyRequest={setKeyRequest}\n                    keyRequest={keyRequest}\n                    keyType={selectedType}\n                    isUserOwner={isUserOwner}\n                    setGenerateEnabled={setNextActive}\n                    isGenerateKeyStep\n                />\n            </div>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={generateKeys}\n                nextActive={nextActive}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(generateKeysStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonPanel from './ButtonPanel';\nimport Settings from 'AppComponents/Shared/SettingsContext';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(7),\n    },\n    title: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, intl,\n    } = props;\n    const settingContext = useContext(Settings);\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        const { appAccessTokenValidity } = settingContext.settings;\n        newRequest.timeout = appAccessTokenValidity;\n        setKeyType(createdKeyType);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    };\n    const classes = useStyles();\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Token for {keyType} environment',\n        },\n    });\n\n    return (\n        <>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default injectIntl(generateAccessTokenStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset, handleRedirectTest,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </div>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Paper, Box } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst styles = (theme) => ({\n    paper: {\n        marginLeft: theme.spacing(3),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    boxWrapper: {\n        '& span, & h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        }\n    }\n});\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <>\n                <Typography variant='h4' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription &amp; Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={1} mx='auto' display='flex' >\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' className={classes.boxWrapper}>\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex' >\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex' >\n                                <Typography variant='h5'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Wizard));\n","/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport InfoBar from './InfoBar';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\n\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\n\nconst LoadableSwitch = withRouter((props) => {\n    const { match, api } = props;\n    const apiUuid = match.params.api_uuid;\n    const path = '/apis/';\n    const { advertised } = api.advertiseInfo;\n    const redirectURL = path + apiUuid + '/overview';\n\n    let tryoutRoute;\n    if (api.type === 'GRAPHQL') {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={GraphQLConsole} />\n    }else {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={ApiConsole} />\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from={`/apis/${apiUuid}`} to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route path='/apis/:apiUuid/documents' component={Documents} />\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                {!advertised && <Route path='/apis/:apiUuid/comments' component={Comments} />}\n                {!advertised && <Route path='/apis/:apiUuid/credentials' component={Credentials} />}\n                {!advertised && tryoutRoute}\n                {!advertised && <Route path='/apis/:apiUuid/sdk' component={Sdk} />}\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\n/**\n *\n * @returns style object\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width - 4 : 0;\n    const shiftToRight = position === 'vertical-right' ? width - 4 : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        leftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            textDecoration: 'none',\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            paddingBottom: theme.spacing(3),\n        },\n        shiftLeft: {\n            marginLeft: 0,\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {React.Component}\n */\nclass Details extends React.Component {\n    /**\n     *Creates an instance of Details.\n     * @param {*} props\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof Details\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if (user != null) {\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                promisedApplications = restApi.getAllApplications();\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n                        const appIdToNameMapping = applications.list.reduce((acc, cur) => {\n                            acc[cur.applicationId] = cur.name;\n                            return acc;\n                        }, {});\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: appIdToNameMapping[element.applicationId],\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((app) => !subscribedAppIds.includes(app.applicationId) && app.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.api_uuid;\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n    }\n\n    /**\n     *\n     *\n     * @param {*} api\n     * @memberof Details\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Details\n     */\n    render() {\n        const {\n            classes, theme, intl, match,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const { apiUuid } = match.params;\n        const { api, notFound } = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks,\n                },\n                title: {\n                    prefix, sufix,\n                }\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n        // check for widget=true in the query params. If it's present we render without <Base> component.\n        const pageUrl = new URL(window.location);\n        const isWidget = pageUrl.searchParams.get('widget');\n\n        return api ? (\n            <ApiContext.Provider value={this.state}>\n                <Helmet>\n                    <title>{`${prefix} ${api.name}${sufix}`}</title>\n                </Helmet>\n                <style>{globalStyle}</style>\n                {!isWidget && (\n                    <div\n                        className={classNames(\n                            classes.leftMenu,\n                            {\n                                [classes.leftMenuHorizontal]: position === 'horizontal',\n                            },\n                            {\n                                [classes.leftMenuVerticalLeft]: position === 'vertical-left',\n                            },\n                            {\n                                [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                            },\n                            'left-menu',\n                        )}\n                    >\n                        {rootIconVisible && (\n                            <Link to='/apis' className={classes.leftLInkMain}>\n                                <CustomIcon width={rootIconSize} height={rootIconSize} icon='api' />\n                                {rootIconTextVisible && (\n                                    <Typography className={classes.leftLInkMainText}>\n                                        <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                    </Typography>\n                                )}\n                            </Link>\n                        )}\n                        <LeftMenuItem\n                            text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                            route='overview'\n                            iconText='overview'\n                            to={pathPrefix + 'overview'}\n                        />\n                        {!api.advertiseInfo.advertised && (\n                            <>\n                                {user && showCredentials && (\n                                    <>\n                                        <LeftMenuItem\n                                            text={\n                                                <FormattedMessage\n                                                    id='Apis.Details.index.subscriptions'\n                                                    defaultMessage='Subscriptions'\n                                                />\n                                            }\n                                            route='credentials'\n                                            iconText='credentials'\n                                            to={pathPrefix + 'credentials'}\n                                        />\n                                    </>\n                                )}\n                                {api.type !== 'WS' && showTryout && (\n                                    <LeftMenuItem\n                                        text={<FormattedMessage id='Apis.Details.index.try.out' defaultMessage='Try out' />}\n                                        route='test'\n                                        iconText='test'\n                                        to={pathPrefix + 'test'}\n                                    />\n                                )}\n                                {showComments && (\n                                    <LeftMenuItem\n                                        text={\n                                            <FormattedMessage id='Apis.Details.index.comments' defaultMessage='Comments' />\n                                        }\n                                        route='comments'\n                                        iconText='comments'\n                                        to={pathPrefix + 'comments'}\n                                    />\n                                )}\n                            </>\n                        )}\n                        {showDocuments && (\n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.documentation' defaultMessage='Documentation' />}\n                                route='documents'\n                                iconText='docs'\n                                to={pathPrefix + 'documents'}\n                            />\n                        )}\n                        {!api.advertiseInfo.advertised && api.type !== 'WS' && showSdks && (\n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                                route='sdk'\n                                iconText='sdk'\n                                to={pathPrefix + 'sdk'}\n                            />\n                        )}\n                    </div>\n                )}\n                <div className={classNames(classes.content, { [classes.shiftLeft]: isWidget })}>\n                    <InfoBar apiId={apiUuid} innerRef={(node) => (this.infoBar = node)} intl={intl} {...this.props} />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <LoadableSwitch api={api} updateSubscriptionData={this.updateSubscriptionData} />\n                    </div>\n                </div>\n            </ApiContext.Provider>\n        ) : (\n                <div className='apim-dual-ring' />\n            );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withSettings(injectIntl(withStyles(styles, { withTheme: true })(Details)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\n\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:api_uuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default withStyles({}, { withTheme: true })(Apis);\n"],"sourceRoot":""}